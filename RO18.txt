 RO18:4000 3E 04            ld   a,04
 RO18:4002 EA 31 DB         ld   (DB31),a
 RO18:4005 AF               xor  a
 RO18:4006 EA 32 DB         ld   (DB32),a
 RO18:4009 EA 33 DB         ld   (DB33),a
 RO18:400C EA 34 DB         ld   (DB34),a       // Right 4 pixels/frame
 RO18:400F EA 35 DB         ld   (DB35),a
 RO18:4012 EA 36 DB         ld   (DB36),a       // Sprite activates right away
 RO18:4015 AF               xor  a
 RO18:4016 EA 37 DB         ld   (DB37),a
 RO18:4019 3E 05            ld   a,05
 RO18:401B EA 38 DB         ld   (DB38),a       // Basic Sprite existence timer
 RO18:401E 3E 4B            ld   a,4B
 RO18:4020 EA 39 DB         ld   (DB39),a
 RO18:4023 3E 22            ld   a,22
 RO18:4025 EA 3A DB         ld   (DB3A),a
 RO18:4028 3E 18            ld   a,18
 RO18:402A EA 3B DB         ld   (DB3B),a       // Instruction: $18:$4B22: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left of landing location, attack bullet shifts right 4 pixels/frame for 3 frames before managing finishing explosion stuff
 RO18:402D C9               ret                 // Red Star Bullet Animation Instruction: Right 4 pixels/frame for 5 frames, despawns for 1 full second, then respawns effectively 12 pixels left of landing location, attack bullet shifts right 4 pixels/frame for 3 frames before managing 19 frame finishing explosion stuff
 RO18:402E 3E FC            ld   a,FC
 RO18:4030 EA 3E DB         ld   (DB3E),a
 RO18:4033 AF               xor  a
 RO18:4034 EA 3F DB         ld   (DB3F),a
 RO18:4037 EA 40 DB         ld   (DB40),a
 RO18:403A EA 41 DB         ld   (DB41),a       // Left 4 pixels/frame
 RO18:403D EA 42 DB         ld   (DB42),a
 RO18:4040 EA 43 DB         ld   (DB43),a       // Sprite activates right away
 RO18:4043 AF               xor  a
 RO18:4044 EA 44 DB         ld   (DB44),a
 RO18:4047 3E 05            ld   a,05
 RO18:4049 EA 45 DB         ld   (DB45),a       // Basic Sprite existence timer
 RO18:404C 3E 4B            ld   a,4B
 RO18:404E EA 46 DB         ld   (DB46),a
 RO18:4051 3E B6            ld   a,B6
 RO18:4053 EA 47 DB         ld   (DB47),a
 RO18:4056 3E 18            ld   a,18
 RO18:4058 EA 48 DB         ld   (DB48),a       // Instruction: $18:$4BB6: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right of landing location, attack bullet shifts left 4 pixels/frame for 3 frames before managing finishing explosion stuff
 RO18:405B C9               ret                 // White Moon Bullet Animation Instruction: Left 4 pixels/frame for 5 frames, despawns for 1 full second, then respawns effectively 12 pixels right of landing location, attack bullet shifts left 4 pixels/frame for 3 frames before managing 19 frame finishing explosion stuff
 RO18:405C 3E 03            ld   a,03
 RO18:405E EA 31 DB         ld   (DB31),a
 RO18:4061 3E 00            ld   a,00
 RO18:4063 EA 32 DB         ld   (DB32),a
 RO18:4066 3E FD            ld   a,FD
 RO18:4068 EA 33 DB         ld   (DB33),a
 RO18:406B 3E 00            ld   a,00
 RO18:406D EA 34 DB         ld   (DB34),a       // Right 3 pixels/frame, Up 3 pixels/frame
 RO18:4070 AF               xor  a
 RO18:4071 EA 35 DB         ld   (DB35),a
 RO18:4074 EA 36 DB         ld   (DB36),a
 RO18:4077 AF               xor  a
 RO18:4078 EA 37 DB         ld   (DB37),a
 RO18:407B 3E 03            ld   a,03
 RO18:407D EA 38 DB         ld   (DB38),a       // 3 frames
 RO18:4080 3E 4C            ld   a,4C
 RO18:4082 EA 39 DB         ld   (DB39),a
 RO18:4085 3E 1A            ld   a,1A
 RO18:4087 EA 3A DB         ld   (DB3A),a
 RO18:408A 3E 18            ld   a,18
 RO18:408C EA 3B DB         ld   (DB3B),a       // Instruction: $18:$4C1A: Red Star's attack bullet moves right 3 pixels/frame, up 3 pixels/frame for 5 frames, ending instruction of $18:$4C50
 RO18:408F C9               ret                 // Red Star Bullet Animation Instruction: Right 3 pixels/frame, Up 3 pixels/frame for 8 frames, despawns for 1 full second, then respawns effectively 8 pixels left, 16 pixels down of landing location, attack bullet shifts right 3 pixels/frame, up 3 pixels/frame for 5 frames before managing 19 frame finishing explosion stuff
 RO18:4090 3E 03            ld   a,03
 RO18:4092 EA 31 DB         ld   (DB31),a
 RO18:4095 3E 00            ld   a,00
 RO18:4097 EA 32 DB         ld   (DB32),a
 RO18:409A 3E FD            ld   a,FD
 RO18:409C EA 33 DB         ld   (DB33),a
 RO18:409F 3E 00            ld   a,00
 RO18:40A1 EA 34 DB         ld   (DB34),a       // Right 3 pixels/frame, Up 3 pixels/frame
 RO18:40A4 AF               xor  a
 RO18:40A5 EA 35 DB         ld   (DB35),a
 RO18:40A8 EA 36 DB         ld   (DB36),a
 RO18:40AB AF               xor  a
 RO18:40AC EA 37 DB         ld   (DB37),a
 RO18:40AF 3E 02            ld   a,02
 RO18:40B1 EA 38 DB         ld   (DB38),a       // 2 frames
 RO18:40B4 3E 4C            ld   a,4C
 RO18:40B6 EA 39 DB         ld   (DB39),a
 RO18:40B9 3E EC            ld   a,EC
 RO18:40BB EA 3A DB         ld   (DB3A),a
 RO18:40BE 3E 18            ld   a,18
 RO18:40C0 EA 3B DB         ld   (DB3B),a       // Instruction: $18:$4CEC: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left and 23 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, down 3 pixels/frame for 6 frames before managing finishing explosion stuff
 RO18:40C3 C9               ret                 // Red Star Bullet Animation Instruction: Right 3 pixels/frame, Up 3 pixels/frame for 2 frames, despawns for 1 full second, then respawns effectively 12 pixels left, 23 pixels up of landing location, attack bullet shifts right 3 pixels/frame, down 3 pixels/frame for 6 frames before managing 19 frame finishing explosion stuff
 RO18:40C4 3E FD            ld   a,FD
 RO18:40C6 EA 3E DB         ld   (DB3E),a
 RO18:40C9 3E 00            ld   a,00
 RO18:40CB EA 3F DB         ld   (DB3F),a
 RO18:40CE 3E FD            ld   a,FD
 RO18:40D0 EA 40 DB         ld   (DB40),a
 RO18:40D3 3E 00            ld   a,00
 RO18:40D5 EA 41 DB         ld   (DB41),a       // Left 3 pixels/frame, Up 3 pixels/frame
 RO18:40D8 AF               xor  a
 RO18:40D9 EA 42 DB         ld   (DB42),a
 RO18:40DC EA 43 DB         ld   (DB43),a
 RO18:40DF AF               xor  a
 RO18:40E0 EA 44 DB         ld   (DB44),a
 RO18:40E3 3E 02            ld   a,02
 RO18:40E5 EA 45 DB         ld   (DB45),a       // 2 frames
 RO18:40E8 3E 4E            ld   a,4E
 RO18:40EA EA 46 DB         ld   (DB46),a
 RO18:40ED 3E 1C            ld   a,1C
 RO18:40EF EA 47 DB         ld   (DB47),a
 RO18:40F2 3E 18            ld   a,18
 RO18:40F4 EA 48 DB         ld   (DB48),a       // Instruction: $18:$4E1C: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right and 23 pixels up of landing location, attack bullet shifts right/left unchanged, down 3 pixels/frame for 6 frames before managing finishing explosion stuff
 RO18:40F7 C9               ret                 // White Moon Bullet Animation Instruction: Left 3 pixels/frame, Up 3 pixels/frame for 2 frames, despawns for 1 full second, then respawns effectively 12 pixels right, 23 pixels up of landing location, attack bullet shifts left 3 pixels/frame, down 3 pixels/frame for 6 frames before managing 19 frame finishing explosion stuff
 RO18:40F8 3E 03            ld   a,03
 RO18:40FA EA 31 DB         ld   (DB31),a
 RO18:40FD 3E 00            ld   a,00
 RO18:40FF EA 32 DB         ld   (DB32),a
 RO18:4102 3E FD            ld   a,FD
 RO18:4104 EA 33 DB         ld   (DB33),a
 RO18:4107 3E 00            ld   a,00
 RO18:4109 EA 34 DB         ld   (DB34),a       // Right 3 pixels/frame, Up 3 pixels/frame
 RO18:410C AF               xor  a
 RO18:410D EA 35 DB         ld   (DB35),a
 RO18:4110 EA 36 DB         ld   (DB36),a
 RO18:4113 AF               xor  a
 RO18:4114 EA 37 DB         ld   (DB37),a
 RO18:4117 3E 05            ld   a,05
 RO18:4119 EA 38 DB         ld   (DB38),a       // 5 frames
 RO18:411C 3E 4D            ld   a,4D
 RO18:411E EA 39 DB         ld   (DB39),a
 RO18:4121 3E 82            ld   a,82
 RO18:4123 EA 3A DB         ld   (DB3A),a
 RO18:4126 3E 18            ld   a,18
 RO18:4128 EA 3B DB         ld   (DB3B),a       // Instruction: $18:$4D82: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left of landing location, attack bullet shifts right 4 pixels/frame for 5 frames before managing finishing Anti-Ship explosion stuff
 RO18:412B C9               ret                 // Red Star Bullet Animation Instruction: Right 3 pixels/frame, Up 3 pixels/frame for 5 frames, despawns for 1 full second, then respawns effectively 12 pixels left of landing location, attack bullet shifts right 4 pixels/frame for 5 frames before managing 19 frame finishing Anti-Ship explosion stuff
 RO18:412C 3E FD            ld   a,FD
 RO18:412E EA 3E DB         ld   (DB3E),a
 RO18:4131 3E 00            ld   a,00
 RO18:4133 EA 3F DB         ld   (DB3F),a
 RO18:4136 3E FD            ld   a,FD
 RO18:4138 EA 40 DB         ld   (DB40),a
 RO18:413B 3E 00            ld   a,00
 RO18:413D EA 41 DB         ld   (DB41),a       // Left 3 pixels/frame, Up 3 pixels/frame
 RO18:4140 AF               xor  a
 RO18:4141 EA 42 DB         ld   (DB42),a
 RO18:4144 EA 43 DB         ld   (DB43),a
 RO18:4147 AF               xor  a
 RO18:4148 EA 44 DB         ld   (DB44),a
 RO18:414B 3E 05            ld   a,05
 RO18:414D EA 45 DB         ld   (DB45),a       // 5 frames
 RO18:4150 3E 4E            ld   a,4E
 RO18:4152 EA 46 DB         ld   (DB46),a
 RO18:4155 3E B2            ld   a,B2
 RO18:4157 EA 47 DB         ld   (DB47),a
 RO18:415A 3E 18            ld   a,18
 RO18:415C EA 48 DB         ld   (DB48),a       // Instruction: $18:$4EB2: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right of landing location, attack bullet shifts left 4 pixels/frame for 5 frames before managing finishing Anti-Ship explosion stuff
 RO18:415F C9               ret                 // White Moon Bullet Animation Instruction: Left 3 pixels/frame, Up 3 pixels/frame for 5 frames, despawns for 1 full second, then respawns effectively 12 pixels right of landing location, attack bullet shifts left 4 pixels/frame for 5 frames before managing 19 frame finishing Anti-Ship explosion stuff
 RO18:4160 3E 03            ld   a,03
 RO18:4162 EA 31 DB         ld   (DB31),a
 RO18:4165 3E 00            ld   a,00
 RO18:4167 EA 32 DB         ld   (DB32),a
 RO18:416A 3E 03            ld   a,03
 RO18:416C EA 33 DB         ld   (DB33),a
 RO18:416F 3E 00            ld   a,00
 RO18:4171 EA 34 DB         ld   (DB34),a       // Right 3 pixels/frame, Down 3 pixels/frame
 RO18:4174 AF               xor  a
 RO18:4175 EA 35 DB         ld   (DB35),a
 RO18:4178 EA 36 DB         ld   (DB36),a
 RO18:417B AF               xor  a
 RO18:417C EA 37 DB         ld   (DB37),a
 RO18:417F 3E 07            ld   a,07
 RO18:4181 EA 38 DB         ld   (DB38),a       // 7 frames
 RO18:4184 3E 50            ld   a,50
 RO18:4186 EA 39 DB         ld   (DB39),a
 RO18:4189 3E 93            ld   a,93
 RO18:418B EA 3A DB         ld   (DB3A),a
 RO18:418E 3E 18            ld   a,18
 RO18:4190 EA 3B DB         ld   (DB3B),a       // Instruction: $18:$5093: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left, 8 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, up/down unchanged for 5 frames before managing finishing explosion stuff
 RO18:4193 C9               ret                 // Red Star Bullet Animation Instruction: Right 3 pixels/frame, Down 3 pixels/frame for 7 frames, despawns for 1 full second, then respawns effectively 12 pixels left, 8 pixels down of landing location, attack bullet shifts right 3 pixels/frame, down 3 pixels/frame for 5 frames before managing 19 frame finishing explosion stuff
 RO18:4194 3E FD            ld   a,FD
 RO18:4196 EA 3E DB         ld   (DB3E),a
 RO18:4199 3E 00            ld   a,00
 RO18:419B EA 3F DB         ld   (DB3F),a
 RO18:419E 3E FD            ld   a,FD
 RO18:41A0 EA 40 DB         ld   (DB40),a
 RO18:41A3 3E 00            ld   a,00
 RO18:41A5 EA 41 DB         ld   (DB41),a       // Left 3 pixels/frame, Up 3 pixels/frame
 RO18:41A8 AF               xor  a
 RO18:41A9 EA 42 DB         ld   (DB42),a
 RO18:41AC EA 43 DB         ld   (DB43),a
 RO18:41AF AF               xor  a
 RO18:41B0 EA 44 DB         ld   (DB44),a
 RO18:41B3 3E 03            ld   a,03
 RO18:41B5 EA 45 DB         ld   (DB45),a       // 3 frames
 RO18:41B8 3E 4F            ld   a,4F
 RO18:41BA EA 46 DB         ld   (DB46),a
 RO18:41BD 3E F9            ld   a,F9
 RO18:41BF EA 47 DB         ld   (DB47),a
 RO18:41C2 3E 18            ld   a,18
 RO18:41C4 EA 48 DB         ld   (DB48),a       // Instruction: $18:$4FF9: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 8 pixels right and 16 pixels down of landing location, attack bullet shifts same rate as in calling instruction for 5 frames before managing finishing explosion stuff
 RO18:41C7 C9               ret                 // White Moon Bullet Animation Instruction: Left 3 pixels/frame, Up 3 pixels/frame for 3 frames, despawns for 1 full second, then respawns effectively 8 pixels right, 16 pixels up of landing location, attack bullet shifts left 3 pixels/frame, up 3 pixels/frame for 5 frames before managing 19 frame finishing explosion stuff
 RO18:41C8 3E FD            ld   a,FD
 RO18:41CA EA 3E DB         ld   (DB3E),a
 RO18:41CD 3E 00            ld   a,00
 RO18:41CF EA 3F DB         ld   (DB3F),a
 RO18:41D2 3E 03            ld   a,03
 RO18:41D4 EA 40 DB         ld   (DB40),a
 RO18:41D7 3E 00            ld   a,00
 RO18:41D9 EA 41 DB         ld   (DB41),a       // Left 3 pixels/frame, Down 3 pixels/frame
 RO18:41DC AF               xor  a
 RO18:41DD EA 42 DB         ld   (DB42),a
 RO18:41E0 EA 43 DB         ld   (DB43),a
 RO18:41E3 AF               xor  a
 RO18:41E4 EA 44 DB         ld   (DB44),a
 RO18:41E7 3E 07            ld   a,07
 RO18:41E9 EA 45 DB         ld   (DB45),a       // 7 frames
 RO18:41EC 3E 51            ld   a,51
 RO18:41EE EA 46 DB         ld   (DB46),a
 RO18:41F1 3E 25            ld   a,25
 RO18:41F3 EA 47 DB         ld   (DB47),a
 RO18:41F6 3E 18            ld   a,18
 RO18:41F8 EA 48 DB         ld   (DB48),a       // Instruction: $18:$5125: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right, 8 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, up/down unchanged for 5 frames before managing finishing explosion stuff
 RO18:41FB C9               ret                 // White Moon Bullet Animation Instruction: Left 3 pixels/frame, Down 3 pixels/frame for 7 frames, despawns for 1 full second, then respawns effectively 12 pixels right, 8 pixels up of landing location, attack bullet shifts left 3 pixels/frame, down 3 pixels/frame for 5 frames before managing 19 frame finishing explosion stuff

Null:
 RO18:41FC 00               nop  
 RO18:41FD 00 00 00               nop  
 RO18:4200 00               nop  
 RO18:4201 00 00               nop  
 RO18:4203 00 00               nop  
 RO18:4205 00 00               nop  
 RO18:4207 00 00               nop  
 RO18:4209 00 00               nop  
 RO18:420B 00 00               nop  
 RO18:420D 00 00               nop  
 RO18:420F 00 00               nop  
 RO18:4211 00 00               nop  
 RO18:4213 00 00               nop  
 RO18:4215 00 00               nop  
 RO18:4217 00 00               nop  
 RO18:4219 00 00 00               nop  
 RO18:421C 00 00 00               nop  
 RO18:421F 00 00               nop  
 RO18:4221 00 00               nop  
 RO18:4223 00 00               nop  
 RO18:4225 00               nop  
 RO18:4226 00 00               nop  
 RO18:4228 00 00               nop  
 RO18:422A 00 00               nop  
 RO18:422C 00 00               nop  
 RO18:422E 00 00
Machine Gun:
 RO18:4230 00               nop  
 RO18:4231 25 25 25               dec  h
 RO18:4234 26 26            ld   h,26
 RO18:4236 26 26            ld   h,26
 RO18:4238 26 26            ld   h,26
 RO18:423A 26 26            ld   h,26
 RO18:423C 26 26            ld   h,26
 RO18:423E 26 26            ld   h,26
 RO18:4240 26 26            ld   h,26
 RO18:4242 26 26            ld   h,26
 RO18:4244 26 26            ld   h,26
 RO18:4246 26 26            ld   h,26
 RO18:4248 26 26            ld   h,26
 RO18:424A 26 26            ld   h,26
 RO18:424C 26 26            ld   h,26
 RO18:424E 26 26            ld   h,26
 RO18:4250 26 26            ld   h,26
 RO18:4252 26 26            ld   h,26
 RO18:4254 26 26            ld   h,26
 RO18:4256 26 26            ld   h,26
 RO18:4258 26 26            ld   h,26
 RO18:425A 26 26            ld   h,26
 RO18:425C 26 26            ld   h,26
 RO18:425E 26 26            ld   h,26
 RO18:4260 26 26            ld   h,26
 RO18:4262 00 00
Machine Gun+:
 RO18:4264 00               nop  
 RO18:4265 25 25 25               dec  h
 RO18:4268 26 26            ld   h,26
 RO18:426A 26 26            ld   h,26
 RO18:426C 26 26            ld   h,26
 RO18:426E 26 26            ld   h,26
 RO18:4270 26 26            ld   h,26
 RO18:4272 26 26            ld   h,26
 RO18:4274 26 26            ld   h,26
 RO18:4276 26 26            ld   h,26
 RO18:4278 26 26            ld   h,26
 RO18:427A 26 26            ld   h,26
 RO18:427C 26 26            ld   h,26
 RO18:427E 26 26            ld   h,26
 RO18:4280 26 26            ld   h,26
 RO18:4282 26 26            ld   h,26
 RO18:4284 26 26            ld   h,26
 RO18:4286 26 26            ld   h,26
 RO18:4288 26 26            ld   h,26
 RO18:428A 26 26            ld   h,26
 RO18:428C 26 26            ld   h,26
 RO18:428E 26 26            ld   h,26
 RO18:4290 26 26            ld   h,26
 RO18:4292 26 26            ld   h,26
 RO18:4294 26 26            ld   h,26
 RO18:4296 00 00
HMG:
 RO18:4298 00               nop  
 RO18:4299 25 25 25               dec  h
 RO18:429C 26 26            ld   h,26
 RO18:429E 26 26            ld   h,26
 RO18:42A0 26 26            ld   h,26
 RO18:42A2 26 26            ld   h,26
 RO18:42A4 26 26            ld   h,26
 RO18:42A6 26 26            ld   h,26
 RO18:42A8 26 26            ld   h,26
 RO18:42AA 26 26            ld   h,26
 RO18:42AC 26 26            ld   h,26
 RO18:42AE 26 26            ld   h,26
 RO18:42B0 26 26            ld   h,26
 RO18:42B2 26 26            ld   h,26
 RO18:42B4 26 26            ld   h,26
 RO18:42B6 26 26            ld   h,26
 RO18:42B8 26 26            ld   h,26
 RO18:42BA 26 26            ld   h,26
 RO18:42BC 26 26            ld   h,26
 RO18:42BE 26 26            ld   h,26
 RO18:42C0 26 26            ld   h,26
 RO18:42C2 26 26            ld   h,26
 RO18:42C4 26 26            ld   h,26
 RO18:42C6 26 26            ld   h,26
 RO18:42C8 26 26            ld   h,26
 RO18:42CA 00 00
HMGx4:
 RO18:42CC 00               nop  
 RO18:42CD 25 25 25               dec  h
 RO18:42D0 26 26            ld   h,26
 RO18:42D2 26 26            ld   h,26
 RO18:42D4 26 26            ld   h,26
 RO18:42D6 26 26            ld   h,26
 RO18:42D8 26 26            ld   h,26
 RO18:42DA 26 26            ld   h,26
 RO18:42DC 26 26            ld   h,26
 RO18:42DE 26 26            ld   h,26
 RO18:42E0 26 26            ld   h,26
 RO18:42E2 26 26            ld   h,26
 RO18:42E4 26 26            ld   h,26
 RO18:42E6 26 26            ld   h,26
 RO18:42E8 26 26            ld   h,26
 RO18:42EA 26 26            ld   h,26
 RO18:42EC 26 26            ld   h,26
 RO18:42EE 26 26            ld   h,26
 RO18:42F0 26 26            ld   h,26
 RO18:42F2 26 26            ld   h,26
 RO18:42F4 26 26            ld   h,26
 RO18:42F6 26 26            ld   h,26
 RO18:42F8 26 26            ld   h,26
 RO18:42FA 26 26            ld   h,26
 RO18:42FC 26 26            ld   h,26
 RO18:42FE 00 00
HMG+:
 RO18:4300 00               nop  
 RO18:4301 25 25 25               dec  h
 RO18:4304 26 26            ld   h,26
 RO18:4306 26 26            ld   h,26
 RO18:4308 26 26            ld   h,26
 RO18:430A 26 26            ld   h,26
 RO18:430C 26 26            ld   h,26
 RO18:430E 26 26            ld   h,26
 RO18:4310 26 26            ld   h,26
 RO18:4312 26 26            ld   h,26
 RO18:4314 26 26            ld   h,26
 RO18:4316 26 26            ld   h,26
 RO18:4318 26 26            ld   h,26
 RO18:431A 26 26            ld   h,26
 RO18:431C 26 26            ld   h,26
 RO18:431E 26 26            ld   h,26
 RO18:4320 26 26            ld   h,26
 RO18:4322 26 26            ld   h,26
 RO18:4324 26 26            ld   h,26
 RO18:4326 26 26            ld   h,26
 RO18:4328 26 26            ld   h,26
 RO18:432A 26 26            ld   h,26
 RO18:432C 26 26            ld   h,26
 RO18:432E 26 26            ld   h,26
 RO18:4330 26 26            ld   h,26
 RO18:4332 00 00
HMG++:
 RO18:4334 00               nop  
 RO18:4335 25 25 25               dec  h
 RO18:4338 26 26            ld   h,26
 RO18:433A 26 26            ld   h,26
 RO18:433C 26 26            ld   h,26
 RO18:433E 26 26            ld   h,26
 RO18:4340 26 26            ld   h,26
 RO18:4342 26 26            ld   h,26
 RO18:4344 26 26            ld   h,26
 RO18:4346 26 26            ld   h,26
 RO18:4348 26 26            ld   h,26
 RO18:434A 26 26            ld   h,26
 RO18:434C 26 26            ld   h,26
 RO18:434E 26 26            ld   h,26
 RO18:4350 26 26            ld   h,26
 RO18:4352 26 26            ld   h,26
 RO18:4354 26 26            ld   h,26
 RO18:4356 26 26            ld   h,26
 RO18:4358 26 26            ld   h,26
 RO18:435A 26 26            ld   h,26
 RO18:435C 26 26            ld   h,26
 RO18:435E 26 26            ld   h,26
 RO18:4360 26 26            ld   h,26
 RO18:4362 26 26            ld   h,26
 RO18:4364 26 26            ld   h,26
 RO18:4366 00 00
Grenade:
 RO18:4368 00               nop  
 RO18:4369 2A 2A 2A               ldi  a,(hl)
 RO18:436C 29               add  hl,hl
 RO18:436D 29 29               add  hl,hl
 RO18:436F 29 29               add  hl,hl
 RO18:4371 29 29               add  hl,hl
 RO18:4373 29 29               add  hl,hl
 RO18:4375 29 29               add  hl,hl
 RO18:4377 29 29               add  hl,hl
 RO18:4379 29 29               add  hl,hl
 RO18:437B 29 29               add  hl,hl
 RO18:437D 29 29               add  hl,hl
 RO18:437F 29 29               add  hl,hl
 RO18:4381 29 29               add  hl,hl
 RO18:4383 29 29               add  hl,hl
 RO18:4385 00 00 00               nop  
 RO18:4388 00 00 00               nop  
 RO18:438B 00 00               nop  
 RO18:438D 00 00               nop  
 RO18:438F 00 00               nop  
 RO18:4391 00               nop  
 RO18:4392 00 00               nop  
 RO18:4394 29 29               add  hl,hl
 RO18:4396 29 29               add  hl,hl
 RO18:4398 29 29               add  hl,hl
 RO18:439A 00 00
Tank Cannon:
 RO18:439C 00               nop  
 RO18:439D 2A 2A 2A               ldi  a,(hl)
 RO18:43A0 2A               ldi  a,(hl)
 RO18:43A1 2A 2A               ldi  a,(hl)
 RO18:43A3 2A 2A               ldi  a,(hl)
 RO18:43A5 2A 2A               ldi  a,(hl)
 RO18:43A7 2A 27               daa  
 RO18:43A9 27 27               daa  
 RO18:43AB 27 27               daa  
 RO18:43AD 27 27               daa  
 RO18:43AF 27 27               daa  
 RO18:43B1 27 27               daa  
 RO18:43B3 27 27               daa  
 RO18:43B5 27 27               daa  
 RO18:43B7 27 27               daa  
 RO18:43B9 00 00 00               nop  
 RO18:43BC 00 00 00               nop  
 RO18:43BF 00 00               nop  
 RO18:43C1 00 00               nop  
 RO18:43C3 00 00               nop  
 RO18:43C5 00               nop  
 RO18:43C6 00 00               nop  
 RO18:43C8 2A 2A               ldi  a,(hl)
 RO18:43CA 2A 2A               ldi  a,(hl)
 RO18:43CC 2A 2A               ldi  a,(hl)
 RO18:43CE 00 00
Tank Cannon+:
 RO18:43D0 00               nop  
 RO18:43D1 2A 2A 2A               ldi  a,(hl)
 RO18:43D4 2A               ldi  a,(hl)
 RO18:43D5 2A 2A               ldi  a,(hl)
 RO18:43D7 2A 2A               ldi  a,(hl)
 RO18:43D9 2A 2A               ldi  a,(hl)
 RO18:43DB 2A 27               daa  
 RO18:43DD 27 27               daa  
 RO18:43DF 27 27               daa  
 RO18:43E1 27 27               daa  
 RO18:43E3 27 27               daa  
 RO18:43E5 27 27               daa  
 RO18:43E7 27 27               daa  
 RO18:43E9 27 27               daa  
 RO18:43EB 27 27               daa  
 RO18:43ED 00 00 00               nop  
 RO18:43F0 00 00 00               nop  
 RO18:43F3 00 00               nop  
 RO18:43F5 00 00               nop  
 RO18:43F7 00 00               nop  
 RO18:43F9 00               nop  
 RO18:43FA 00 00               nop  
 RO18:43FC 2A 2A               ldi  a,(hl)
 RO18:43FE 2A 2A               ldi  a,(hl)
 RO18:4400 2A 2A               ldi  a,(hl)
 RO18:4402 00 00
Tank Cannon++:
 RO18:4404 00               nop  
 RO18:4405 2A 2A 2A               ldi  a,(hl)
 RO18:4408 2A               ldi  a,(hl)
 RO18:4409 2A 2A               ldi  a,(hl)
 RO18:440B 2A 2A               ldi  a,(hl)
 RO18:440D 2A 2A               ldi  a,(hl)
 RO18:440F 2A 27               daa  
 RO18:4411 27 27               daa  
 RO18:4413 27 27               daa  
 RO18:4415 27 27               daa  
 RO18:4417 27 27               daa  
 RO18:4419 27 27               daa  
 RO18:441B 27 27               daa  
 RO18:441D 27 27               daa  
 RO18:441F 27 27               daa  
 RO18:4421 00 00 00               nop  
 RO18:4424 00 00 00               nop  
 RO18:4427 00 00               nop  
 RO18:4429 00 00               nop  
 RO18:442B 00 00               nop  
 RO18:442D 00               nop  
 RO18:442E 00 00               nop  
 RO18:4430 2A 2A               ldi  a,(hl)
 RO18:4432 2A 2A               ldi  a,(hl)
 RO18:4434 2A 2A               ldi  a,(hl)
 RO18:4436 00 00
Cannon:
 RO18:4438 00               nop  
 RO18:4439 2A 2A 2A               ldi  a,(hl)
 RO18:443C 2A               ldi  a,(hl)
 RO18:443D 2A 2A               ldi  a,(hl)
 RO18:443F 2A 2A               ldi  a,(hl)
 RO18:4441 2A 2A               ldi  a,(hl)
 RO18:4443 2A 27               daa  
 RO18:4445 27 27               daa  
 RO18:4447 27 27               daa  
 RO18:4449 27 27               daa  
 RO18:444B 27 27               daa  
 RO18:444D 27 27               daa  
 RO18:444F 27 27               daa  
 RO18:4451 27 27               daa  
 RO18:4453 27 27               daa  
 RO18:4455 00 00 00               nop  
 RO18:4458 00 00 00               nop  
 RO18:445B 00 00               nop  
 RO18:445D 00 00               nop  
 RO18:445F 00 00               nop  
 RO18:4461 00               nop  
 RO18:4462 00 00               nop  
 RO18:4464 29 29               add  hl,hl
 RO18:4466 29 29               add  hl,hl
 RO18:4468 29 29               add  hl,hl
 RO18:446A 00 00
Cannon+:
 RO18:446C 00               nop  
 RO18:446D 2A 2A 2A               ldi  a,(hl)
 RO18:4470 2A               ldi  a,(hl)
 RO18:4471 2A 2A               ldi  a,(hl)
 RO18:4473 2A 2A               ldi  a,(hl)
 RO18:4475 2A 2A               ldi  a,(hl)
 RO18:4477 2A 27               daa  
 RO18:4479 27 27               daa  
 RO18:447B 27 27               daa  
 RO18:447D 27 27               daa  
 RO18:447F 27 27               daa  
 RO18:4481 27 27               daa  
 RO18:4483 27 27               daa  
 RO18:4485 27 27               daa  
 RO18:4487 27 27               daa  
 RO18:4489 00 00 00               nop  
 RO18:448C 00 00 00               nop  
 RO18:448F 00 00               nop  
 RO18:4491 00 00               nop  
 RO18:4493 00 00               nop  
 RO18:4495 00               nop  
 RO18:4496 00 00               nop  
 RO18:4498 29 29               add  hl,hl
 RO18:449A 29 29               add  hl,hl
 RO18:449C 29 29               add  hl,hl
 RO18:449E 00 00
Rockets:
 RO18:44A0 00               nop  
 RO18:44A1 29 29 29               add  hl,hl
 RO18:44A4 29               add  hl,hl
 RO18:44A5 29 29               add  hl,hl
 RO18:44A7 29 29               add  hl,hl
 RO18:44A9 29 29               add  hl,hl
 RO18:44AB 29 29               add  hl,hl
 RO18:44AD 29 29               add  hl,hl
 RO18:44AF 29 29               add  hl,hl
 RO18:44B1 29 29               add  hl,hl
 RO18:44B3 29 29               add  hl,hl
 RO18:44B5 29 29               add  hl,hl
 RO18:44B7 29 29               add  hl,hl
 RO18:44B9 29 29               add  hl,hl
 RO18:44BB 29 29               add  hl,hl
 RO18:44BD 00 00 00               nop  
 RO18:44C0 00 00 00               nop  
 RO18:44C3 00 00               nop  
 RO18:44C5 00 00               nop  
 RO18:44C7 00 00               nop  
 RO18:44C9 00               nop  
 RO18:44CA 00 00               nop  
 RO18:44CC 29 29               add  hl,hl
 RO18:44CE 29 29               add  hl,hl
 RO18:44D0 29 29               add  hl,hl
 RO18:44D2 00 00
Rockets+:
 RO18:44D4 00               nop  
 RO18:44D5 29 29 29               add  hl,hl
 RO18:44D8 29               add  hl,hl
 RO18:44D9 29 29               add  hl,hl
 RO18:44DB 29 29               add  hl,hl
 RO18:44DD 29 29               add  hl,hl
 RO18:44DF 29 29               add  hl,hl
 RO18:44E1 29 29               add  hl,hl
 RO18:44E3 29 29               add  hl,hl
 RO18:44E5 29 29               add  hl,hl
 RO18:44E7 29 29               add  hl,hl
 RO18:44E9 29 29               add  hl,hl
 RO18:44EB 29 29               add  hl,hl
 RO18:44ED 29 29               add  hl,hl
 RO18:44EF 29 29               add  hl,hl
 RO18:44F1 00 00 00               nop  
 RO18:44F4 00 00 00               nop  
 RO18:44F7 00 00               nop  
 RO18:44F9 00 00               nop  
 RO18:44FB 00 00               nop  
 RO18:44FD 00               nop  
 RO18:44FE 00 00               nop  
 RO18:4500 29 29               add  hl,hl
 RO18:4502 29 29               add  hl,hl
 RO18:4504 29 29               add  hl,hl
 RO18:4506 00 00
Anti-Tank TOW:
 RO18:4508 00               nop  
 RO18:4509 00 00 00               nop  
 RO18:450C 00               nop  
 RO18:450D 00 00               nop  
 RO18:450F 00 00               nop  
 RO18:4511 00 00               nop  
 RO18:4513 00 00               nop  
 RO18:4515 2A 2A               ldi  a,(hl)
 RO18:4517 2A 2A               ldi  a,(hl)
 RO18:4519 2A 2A               ldi  a,(hl)
 RO18:451B 2A 2A               ldi  a,(hl)
 RO18:451D 2A 2A               ldi  a,(hl)
 RO18:451F 2A 2A               ldi  a,(hl)
 RO18:4521 2A 2A               ldi  a,(hl)
 RO18:4523 2A 2A               ldi  a,(hl)
 RO18:4525 00 00 00               nop  
 RO18:4528 00 00 00               nop  
 RO18:452B 00 00               nop  
 RO18:452D 00 00               nop  
 RO18:452F 00 00               nop  
 RO18:4531 00               nop  
 RO18:4532 00 00               nop  
 RO18:4534 00 00               nop  
 RO18:4536 00 00               nop  
 RO18:4538 00 00               nop  
 RO18:453A 00 00
Anti-Tank Javelin:
 RO18:453C 00               nop  
 RO18:453D 00 00 00               nop  
 RO18:4540 00               nop  
 RO18:4541 00 00               nop  
 RO18:4543 00 00               nop  
 RO18:4545 00 00               nop  
 RO18:4547 00 00               nop  
 RO18:4549 2A 2A               ldi  a,(hl)
 RO18:454B 2A 2A               ldi  a,(hl)
 RO18:454D 2A 2A               ldi  a,(hl)
 RO18:454F 2A 2A               ldi  a,(hl)
 RO18:4551 2A 2A               ldi  a,(hl)
 RO18:4553 2A 2A               ldi  a,(hl)
 RO18:4555 2A 2A               ldi  a,(hl)
 RO18:4557 2A 2A               ldi  a,(hl)
 RO18:4559 00 00 00               nop  
 RO18:455C 00 00 00               nop  
 RO18:455F 00 00               nop  
 RO18:4561 00 00               nop  
 RO18:4563 00 00               nop  
 RO18:4565 00               nop  
 RO18:4566 00 00               nop  
 RO18:4568 00 00               nop  
 RO18:456A 00 00               nop  
 RO18:456C 00 00               nop  
 RO18:456E 00 00
Bombs:
 RO18:4570 00               nop  
 RO18:4571 2A 2A 2A               ldi  a,(hl)
 RO18:4574 2A               ldi  a,(hl)
 RO18:4575 2A 2A               ldi  a,(hl)
 RO18:4577 2A 2A               ldi  a,(hl)
 RO18:4579 2A 2A               ldi  a,(hl)
 RO18:457B 2A 2A               ldi  a,(hl)
 RO18:457D 2A 2A               ldi  a,(hl)
 RO18:457F 2A 2A               ldi  a,(hl)
 RO18:4581 2A 2A               ldi  a,(hl)
 RO18:4583 2A 2A               ldi  a,(hl)
 RO18:4585 2A 2A               ldi  a,(hl)
 RO18:4587 2A 2A               ldi  a,(hl)
 RO18:4589 2A 2A               ldi  a,(hl)
 RO18:458B 2A 2A               ldi  a,(hl)
 RO18:458D 00 00 00               nop  
 RO18:4590 00 00 00               nop  
 RO18:4593 00 00               nop  
 RO18:4595 00 00               nop  
 RO18:4597 00 00               nop  
 RO18:4599 00               nop  
 RO18:459A 00 00               nop  
 RO18:459C 2A 2A               ldi  a,(hl)
 RO18:459E 2A 2A               ldi  a,(hl)
 RO18:45A0 2A 2A               ldi  a,(hl)
 RO18:45A2 00 00
Anti-City Missile:
 RO18:45A4 00               nop  
 RO18:45A5 2B 2B 2B               dec  hl
 RO18:45A8 2B               dec  hl
 RO18:45A9 2B 2B               dec  hl
 RO18:45AB 2B 2B               dec  hl
 RO18:45AD 2B 2B               dec  hl
 RO18:45AF 2B 2B               dec  hl
 RO18:45B1 2B 2B               dec  hl
 RO18:45B3 2B 2B               dec  hl
 RO18:45B5 2B 2B               dec  hl
 RO18:45B7 2B 2B               dec  hl
 RO18:45B9 2B 2B               dec  hl
 RO18:45BB 2B 2B               dec  hl
 RO18:45BD 2B 2B               dec  hl
 RO18:45BF 2B 2B               dec  hl
 RO18:45C1 00 00 00               nop  
 RO18:45C4 00 00 00               nop  
 RO18:45C7 00 00               nop  
 RO18:45C9 00 00               nop  
 RO18:45CB 00 00               nop  
 RO18:45CD 00               nop  
 RO18:45CE 00 00               nop  
 RO18:45D0 2B 2B               dec  hl
 RO18:45D2 2B 2B               dec  hl
 RO18:45D4 2B 2B               dec  hl
 RO18:45D6 2B 2B
Anti-City Bomb:
 RO18:45D8 00               nop  
 RO18:45D9 00 00 00               nop  
 RO18:45DC 00               nop  
 RO18:45DD 00 00               nop  
 RO18:45DF 00 00               nop  
 RO18:45E1 00 00               nop  
 RO18:45E3 00 00               nop  
 RO18:45E5 00 00               nop  
 RO18:45E7 00 00               nop  
 RO18:45E9 00 00               nop  
 RO18:45EB 00 00               nop  
 RO18:45ED 00 00               nop  
 RO18:45EF 00 00               nop  
 RO18:45F1 00 00               nop  
 RO18:45F3 00 00               nop  
 RO18:45F5 00 00 00               nop  
 RO18:45F8 00 00 00               nop  
 RO18:45FB 00 00               nop  
 RO18:45FD 00 00               nop  
 RO18:45FF 00 00               nop  
 RO18:4601 00               nop  
 RO18:4602 00 00               nop  
 RO18:4604 00 00               nop  
 RO18:4606 00 00               nop  
 RO18:4608 00 00               nop  
 RO18:460A 00 00
Surface-To-Air Direct:
 RO18:460C 00               nop  
 RO18:460D 00 00 00               nop  
 RO18:4610 00               nop  
 RO18:4611 00 00               nop  
 RO18:4613 00 00               nop  
 RO18:4615 00 00               nop  
 RO18:4617 00 00               nop  
 RO18:4619 00 00               nop  
 RO18:461B 00 00               nop  
 RO18:461D 00 00               nop  
 RO18:461F 00 00               nop  
 RO18:4621 00 00               nop  
 RO18:4623 00 00               nop  
 RO18:4625 00 00               nop  
 RO18:4627 00 00               nop  
 RO18:4629 2A 2A 2A               ldi  a,(hl)
 RO18:462C 2A 2A 2A               ldi  a,(hl)
 RO18:462F 2A 2A               ldi  a,(hl)
 RO18:4631 2A 2A               ldi  a,(hl)
 RO18:4633 2A 2A               ldi  a,(hl)
 RO18:4635 2A               ldi  a,(hl)
 RO18:4636 2A 2A               ldi  a,(hl)
 RO18:4638 00 00               nop  
 RO18:463A 00 00               nop  
 RO18:463C 00 00               nop  
 RO18:463E 00 00
Surface-To-Air Range:
 RO18:4640 00               nop  
 RO18:4641 00 00 00               nop  
 RO18:4644 00               nop  
 RO18:4645 00 00               nop  
 RO18:4647 00 00               nop  
 RO18:4649 00 00               nop  
 RO18:464B 00 00               nop  
 RO18:464D 00 00               nop  
 RO18:464F 00 00               nop  
 RO18:4651 00 00               nop  
 RO18:4653 00 00               nop  
 RO18:4655 00 00               nop  
 RO18:4657 00 00               nop  
 RO18:4659 00 00               nop  
 RO18:465B 00 00               nop  
 RO18:465D 2A 2A 2A               ldi  a,(hl)
 RO18:4660 2A 2A 2A               ldi  a,(hl)
 RO18:4663 2A 2A               ldi  a,(hl)
 RO18:4665 2A 2A               ldi  a,(hl)
 RO18:4667 2A 2A               ldi  a,(hl)
 RO18:4669 2A               ldi  a,(hl)
 RO18:466A 2A 2A               ldi  a,(hl)
 RO18:466C 00 00               nop  
 RO18:466E 00 00               nop  
 RO18:4670 00 00               nop  
 RO18:4672 00 00
Surface-To-Air Range+:
 RO18:4674 00               nop  
 RO18:4675 00 00 00               nop  
 RO18:4678 00               nop  
 RO18:4679 00 00               nop  
 RO18:467B 00 00               nop  
 RO18:467D 00 00               nop  
 RO18:467F 00 00               nop  
 RO18:4681 00 00               nop  
 RO18:4683 00 00               nop  
 RO18:4685 00 00               nop  
 RO18:4687 00 00               nop  
 RO18:4689 00 00               nop  
 RO18:468B 00 00               nop  
 RO18:468D 00 00               nop  
 RO18:468F 00 00               nop  
 RO18:4691 2A 2A 2A               ldi  a,(hl)
 RO18:4694 2A 2A 2A               ldi  a,(hl)
 RO18:4697 2A 2A               ldi  a,(hl)
 RO18:4699 2A 2A               ldi  a,(hl)
 RO18:469B 2A 2A               ldi  a,(hl)
 RO18:469D 2A               ldi  a,(hl)
 RO18:469E 2A 2A               ldi  a,(hl)
 RO18:46A0 00 00               nop  
 RO18:46A2 00 00               nop  
 RO18:46A4 00 00               nop  
 RO18:46A6 00 00
Air-To-Air Direct:
 RO18:46A8 00               nop  
 RO18:46A9 00 00 00               nop  
 RO18:46AC 00               nop  
 RO18:46AD 00 00               nop  
 RO18:46AF 00 00               nop  
 RO18:46B1 00 00               nop  
 RO18:46B3 00 00               nop  
 RO18:46B5 00 00               nop  
 RO18:46B7 00 00               nop  
 RO18:46B9 00 00               nop  
 RO18:46BB 00 00               nop  
 RO18:46BD 00 00               nop  
 RO18:46BF 00 00               nop  
 RO18:46C1 00 00               nop  
 RO18:46C3 00 00               nop  
 RO18:46C5 2A 2A 2A               ldi  a,(hl)
 RO18:46C8 2A 2A 2A               ldi  a,(hl)
 RO18:46CB 2A 2A               ldi  a,(hl)
 RO18:46CD 2A 2A               ldi  a,(hl)
 RO18:46CF 2A 2A               ldi  a,(hl)
 RO18:46D1 2A               ldi  a,(hl)
 RO18:46D2 2A 2A               ldi  a,(hl)
 RO18:46D4 00 00               nop  
 RO18:46D6 00 00               nop  
 RO18:46D8 00 00               nop  
 RO18:46DA 00 00
Air-To-Air Range:
 RO18:46DC 00               nop  
 RO18:46DD 00 00 00               nop  
 RO18:46E0 00               nop  
 RO18:46E1 00 00               nop  
 RO18:46E3 00 00               nop  
 RO18:46E5 00 00               nop  
 RO18:46E7 00 00               nop  
 RO18:46E9 00 00               nop  
 RO18:46EB 00 00               nop  
 RO18:46ED 00 00               nop  
 RO18:46EF 00 00               nop  
 RO18:46F1 00 00               nop  
 RO18:46F3 00 00               nop  
 RO18:46F5 00 00               nop  
 RO18:46F7 00 00               nop  
 RO18:46F9 2A 2A 2A               ldi  a,(hl)
 RO18:46FC 2A 2A 2A               ldi  a,(hl)
 RO18:46FF 2A 2A               ldi  a,(hl)
 RO18:4701 2A 2A               ldi  a,(hl)
 RO18:4703 2A 2A               ldi  a,(hl)
 RO18:4705 2A               ldi  a,(hl)
 RO18:4706 2A 2A               ldi  a,(hl)
 RO18:4708 00 00               nop  
 RO18:470A 00 00               nop  
 RO18:470C 00 00               nop  
 RO18:470E 00 00
Air-To-Air Range+:
 RO18:4710 00               nop  
 RO18:4711 00 00 00               nop  
 RO18:4714 00               nop  
 RO18:4715 00 00               nop  
 RO18:4717 00 00               nop  
 RO18:4719 00 00               nop  
 RO18:471B 00 00               nop  
 RO18:471D 00 00               nop  
 RO18:471F 00 00               nop  
 RO18:4721 00 00               nop  
 RO18:4723 00 00               nop  
 RO18:4725 00 00               nop  
 RO18:4727 00 00               nop  
 RO18:4729 00 00               nop  
 RO18:472B 00 00               nop  
 RO18:472D 2A 2A 2A               ldi  a,(hl)
 RO18:4730 2A 2A 2A               ldi  a,(hl)
 RO18:4733 2A 2A               ldi  a,(hl)
 RO18:4735 2A 2A               ldi  a,(hl)
 RO18:4737 2A 2A               ldi  a,(hl)
 RO18:4739 2A               ldi  a,(hl)
 RO18:473A 2A 2A               ldi  a,(hl)
 RO18:473C 00 00               nop  
 RO18:473E 00 00               nop  
 RO18:4740 00 00               nop  
 RO18:4742 00 00
Anti-Ship Missile:
 RO18:4744 00               nop  
 RO18:4745 00 00 00               nop  
 RO18:4748 00               nop  
 RO18:4749 00 00               nop  
 RO18:474B 00 00               nop  
 RO18:474D 00 00               nop  
 RO18:474F 00 00               nop  
 RO18:4751 00 00               nop  
 RO18:4753 00 00               nop  
 RO18:4755 00 00               nop  
 RO18:4757 00 00               nop  
 RO18:4759 00 00               nop  
 RO18:475B 00 00               nop  
 RO18:475D 00 00               nop  
 RO18:475F 00 00               nop  
 RO18:4761 00 00 00               nop  
 RO18:4764 00 00 00               nop  
 RO18:4767 00 00               nop  
 RO18:4769 00 00               nop  
 RO18:476B 00 00               nop  
 RO18:476D 00               nop  
 RO18:476E 00 00               nop  
 RO18:4770 2A 2A               ldi  a,(hl)
 RO18:4772 2A 2A               ldi  a,(hl)
 RO18:4774 2A 2A               ldi  a,(hl)
 RO18:4776 00 00
Direct Torpedo:
 RO18:4778 00               nop  
 RO18:4779 00 00 00               nop  
 RO18:477C 00               nop  
 RO18:477D 00 00               nop  
 RO18:477F 00 00               nop  
 RO18:4781 00 00               nop  
 RO18:4783 00 00               nop  
 RO18:4785 00 00               nop  
 RO18:4787 00 00               nop  
 RO18:4789 00 00               nop  
 RO18:478B 00 00               nop  
 RO18:478D 00 00               nop  
 RO18:478F 00 00               nop  
 RO18:4791 00 00               nop  
 RO18:4793 00 00               nop  
 RO18:4795 00 00 00               nop  
 RO18:4798 00 00 00               nop  
 RO18:479B 00 00               nop  
 RO18:479D 00 00               nop  
 RO18:479F 00 00               nop  
 RO18:47A1 00               nop  
 RO18:47A2 00 00               nop  
 RO18:47A4 2E 2E            ld   l,2E
 RO18:47A6 2E 2E            ld   l,2E
 RO18:47A8 2E 2E            ld   l,2E
 RO18:47AA 2D 2D
Torpedo:
 RO18:47AC 00               nop  
 RO18:47AD 00 00 00               nop  
 RO18:47B0 00               nop  
 RO18:47B1 00 00               nop  
 RO18:47B3 00 00               nop  
 RO18:47B5 00 00               nop  
 RO18:47B7 00 00               nop  
 RO18:47B9 00 00               nop  
 RO18:47BB 00 00               nop  
 RO18:47BD 00 00               nop  
 RO18:47BF 00 00               nop  
 RO18:47C1 00 00               nop  
 RO18:47C3 00 00               nop  
 RO18:47C5 00 00               nop  
 RO18:47C7 00 00               nop  
 RO18:47C9 00 00 00               nop  
 RO18:47CC 00 00 00               nop  
 RO18:47CF 00 00               nop  
 RO18:47D1 00 00               nop  
 RO18:47D3 00 00               nop  
 RO18:47D5 00               nop  
 RO18:47D6 00 00               nop  
 RO18:47D8 2E 2E            ld   l,2E
 RO18:47DA 2E 2E            ld   l,2E
 RO18:47DC 2E 2E            ld   l,2E
 RO18:47DE 2D 2D
Supplies:
 RO18:47E0 00               nop  
 RO18:47E1 00 00 00               nop  
 RO18:47E4 00               nop  
 RO18:47E5 00 00               nop  
 RO18:47E7 00 00               nop  
 RO18:47E9 00 00               nop  
 RO18:47EB 00 00               nop  
 RO18:47ED 00 00               nop  
 RO18:47EF 00 00               nop  
 RO18:47F1 00 00               nop  
 RO18:47F3 00 00               nop  
 RO18:47F5 00 00               nop  
 RO18:47F7 00 00               nop  
 RO18:47F9 00 00               nop  
 RO18:47FB 00 00               nop  
 RO18:47FD 00 00 00               nop  
 RO18:4800 00 00 00               nop  
 RO18:4803 00 00               nop  
 RO18:4805 00 00               nop  
 RO18:4807 00 00               nop  
 RO18:4809 00               nop  
 RO18:480A 00 00               nop  
 RO18:480C 00 00               nop  
 RO18:480E 00 00               nop  
 RO18:4810 00 00               nop  
 RO18:4812 00 00
Materials:
 RO18:4814 00               nop  
 RO18:4815 00 00 00               nop  
 RO18:4818 00               nop  
 RO18:4819 00 00               nop  
 RO18:481B 00 00               nop  
 RO18:481D 00 00               nop  
 RO18:481F 00 00               nop  
 RO18:4821 00 00               nop  
 RO18:4823 00 00               nop  
 RO18:4825 00 00               nop  
 RO18:4827 00 00               nop  
 RO18:4829 00 00               nop  
 RO18:482B 00 00               nop  
 RO18:482D 00 00               nop  
 RO18:482F 00 00               nop  
 RO18:4831 00 00 00               nop  
 RO18:4834 00 00 00               nop  
 RO18:4837 00 00               nop  
 RO18:4839 00 00               nop  
 RO18:483B 00 00               nop  
 RO18:483D 00               nop  
 RO18:483E 00 00               nop  
 RO18:4840 00 00               nop  
 RO18:4842 00 00               nop  
 RO18:4844 00 00               nop  
 RO18:4846 00 00
Air-To-Surface Missile:
 RO18:4848 00               nop  
 RO18:4849 29 29 29               add  hl,hl
 RO18:484C 29               add  hl,hl
 RO18:484D 29 29               add  hl,hl
 RO18:484F 29 29               add  hl,hl
 RO18:4851 29 29               add  hl,hl
 RO18:4853 29 29               add  hl,hl
 RO18:4855 29 29               add  hl,hl
 RO18:4857 29 29               add  hl,hl
 RO18:4859 29 29               add  hl,hl
 RO18:485B 29 29               add  hl,hl
 RO18:485D 29 29               add  hl,hl
 RO18:485F 29 29               add  hl,hl
 RO18:4861 29 29               add  hl,hl
 RO18:4863 29 29               add  hl,hl
 RO18:4865 00 00 00               nop  
 RO18:4868 00 00 00               nop  
 RO18:486B 00 00               nop  
 RO18:486D 00 00               nop  
 RO18:486F 00 00               nop  
 RO18:4871 00               nop  
 RO18:4872 00 00               nop  
 RO18:4874 29 29               add  hl,hl
 RO18:4876 29 29               add  hl,hl
 RO18:4878 29 29               add  hl,hl
 RO18:487A 00 00


 RO18:487C 3D               dec  a
 RO18:487D C5               push bc
 RO18:487E 21 00 00         ld   hl,0000
 RO18:4881 6F               ld   l,a
 RO18:4882 11 34 00         ld   de,0034
 RO18:4885 CD D8 29         call 29D8           // HL *= DE (Signed), BC is Carry Byte
 RO18:4888 C1               pop  bc
 RO18:4889 78               ld   a,b
 RO18:488A 01 00 00         ld   bc,0000
 RO18:488D 4F               ld   c,a
 RO18:488E 09               add  hl,bc
 RO18:488F 01 FC 41         ld   bc,41FC
 RO18:4892 09               add  hl,bc
 RO18:4893 7E               ld   a,(hl)
 RO18:4894 F5               push af
 RO18:4895 FA D8 C4         ld   a,(C4D8)
 RO18:4898 FE 00            cp   a,00
 RO18:489A 28 02            jr   z,489E
 RO18:489C 18 02            jr   48A0
 RO18:489E F1               pop  af
 RO18:489F C9               ret  
 RO18:48A0 F1               pop  af
 RO18:48A1 C6 4A            add  a,4A
 RO18:48A3 C9               ret                 // A = Sound # for hit, value of 111~120 for Red Star attack, or 37~46 for White Moon attack (A = Weapon #, B = Unit Type)
 RO18:48A4 FE 08            cp   a,08
 RO18:48A6 38 26            jr   c,48CE
 RO18:48A8 28 0A            jr   z,48B4
 RO18:48AA FE 15            cp   a,15
 RO18:48AC 38 06            jr   c,48B4
 RO18:48AE FE 1B            cp   a,1B
 RO18:48B0 38 1C            jr   c,48CE
 RO18:48B2 18 00            jr   48B4           // Ended immediately for any potential anti-air
 RO18:48B4 3E 01            ld   a,01
 RO18:48B6 EA AB C4         ld   (C4AB),a
 RO18:48B9 FA D8 C4         ld   a,(C4D8)
 RO18:48BC FE 00            cp   a,00
 RO18:48BE 28 09            jr   z,48C9
 RO18:48C0 18 00            jr   48C2
 RO18:48C2 3E 01            ld   a,01
 RO18:48C4 EA 6A D3         ld   (D36A),a
 RO18:48C7 18 05            jr   48CE
 RO18:48C9 3E 01            ld   a,01
 RO18:48CB EA 6B D3         ld   (D36B),a
 RO18:48CE C9               ret                 // Sets up flags related to weapons other than potential anti-air
 RO18:48CF C5               push bc
 RO18:48D0 D5               push de
 RO18:48D1 FA D8 C4         ld   a,(C4D8)
 RO18:48D4 FE 00            cp   a,00
 RO18:48D6 20 0E            jr   nz,48E6
 RO18:48D8 FA B8 C4         ld   a,(C4B8)       // White Moon's Unit Type
 RO18:48DB 47               ld   b,a
 RO18:48DC FA B3 C4         ld   a,(C4B3)       // Red Star's Used Weapon
 RO18:48DF F5               push af
 RO18:48E0 CD A4 48         call 48A4           // Sets up flags related to weapons other than potential anti-air
 RO18:48E3 F1               pop  af
 RO18:48E4 18 0C            jr   48F2
 RO18:48E6 FA B7 C4         ld   a,(C4B7)       // Red Star's Unit Type
 RO18:48E9 47               ld   b,a
 RO18:48EA FA B4 C4         ld   a,(C4B4)       // White Moon's Used Weapon
 RO18:48ED F5               push af
 RO18:48EE CD A4 48         call 48A4           // Sets up flags related to weapons other than potential anti-air
 RO18:48F1 F1               pop  af
 RO18:48F2 CD 7C 48         call 487C           // A = Sound # for hit, value of 111~120 for Red Star attack, or 37~46 for White Moon attack (A = Weapon #, B = Unit Type)
 RO18:48F5 EA DB C4         ld   (C4DB),a
 RO18:48F8 D1               pop  de
 RO18:48F9 C1               pop  bc
 RO18:48FA C9               ret                 // Sets up Hit Sound and Quake Effect of given bullet
 RO18:48FB C5               push bc
 RO18:48FC D5               push de
 RO18:48FD E5               push hl
 RO18:48FE FA AD C4         ld   a,(C4AD)
 RO18:4901 FE 00            cp   a,00
 RO18:4903 20 05            jr   nz,490A
 RO18:4905 FA B3 C4         ld   a,(C4B3)       // Red Star's Used Weapon
 RO18:4908 18 03            jr   490D
 RO18:490A FA B4 C4         ld   a,(C4B4)       // White Moon's Used Weapon
 RO18:490D 4F               ld   c,a
 RO18:490E 06 00            ld   b,00           // BC = Used Weapon
 RO18:4910 21 28 49         ld   hl,4928
 RO18:4913 09               add  hl,bc
 RO18:4914 FA AD C4         ld   a,(C4AD)
 RO18:4917 FE 01            cp   a,01
 RO18:4919 20 05            jr   nz,4920
 RO18:491B 7E               ld   a,(hl)
 RO18:491C C6 4A            add  a,4A
 RO18:491E 18 01            jr   4921
 RO18:4920 7E               ld   a,(hl)
 RO18:4921 EA DB C4         ld   (C4DB),a
 RO18:4924 E1               pop  hl
 RO18:4925 D1               pop  de
 RO18:4926 C1               pop  bc
 RO18:4927 C9               ret                 // Sets up sound #30~36 for Red Star weapon, or #104~110 for White Moon weapon

 RO18:4928 1E 1E            ld   e,1E
 RO18:492A 1E 1E 1E 1E            ld   e,1E
 RO18:492E 1E 1E            ld   e,1E
 RO18:4930 1F               rra  
 RO18:4931 20 20 20
 RO18:4934 20 20
 RO18:4936 21 21
 RO18:4938 22 22         ld   hl,2222
 RO18:493A 23               inc  hl
 RO18:493B 23 23               inc  hl
 RO18:493D 22 22 22               ldi  (hl),a
 RO18:4940 22 22 22               ldi  (hl),a
 RO18:4943 22               ldi  (hl),a
 RO18:4944 24 24               inc  h
 RO18:4946 1E 1E            ld   e,1E
 RO18:4948 21

 RO18:4949 F0 83            ld   a,(ff00+83)
 RO18:494B F5               push af
 RO18:494C 3E 00            ld   a,00
 RO18:494E E0 83            ld   (ff00+83),a
 RO18:4950 E0 4F            ld   (ff00+4F),a
 RO18:4952 11 33 71         ld   de,7133        // Ammo graphics
 RO18:4955 21 00 80         ld   hl,8000
 RO18:4958 01 A0 01         ld   bc,01A0
 RO18:495B EF 17 50 3B                          // VRA0($8000~$819F) = $17:($7133~72D2)
 RO18:495F 11 E5 43         ld   de,43E5        // Explosion graphics
 RO18:4962 21 00 82         ld   hl,8200
 RO18:4965 01 B0 04         ld   bc,04B0
 RO18:4968 EF 14 50 3B                          // VRA0($8200~$86AF) = $14:($43E5~$488F)
 RO18:496C F1               pop  af
 RO18:496D E0 83            ld   (ff00+83),a
 RO18:496F E0 4F            ld   (ff00+4F),a
 RO18:4971 C9               ret                 // Establishes bullet and explosion graphics' basic tiles
 RO18:4972 3E 08            ld   a,08
 RO18:4974 06 02            ld   b,02
 RO18:4976 21 F5 47         ld   hl,47F5
 RO18:4979 0E 14            ld   c,14
 RO18:497B CD D9 06         call 06D9           // ($C520) to ($C52F) hold $14:($47F5) to $14:($4804)
 RO18:497E CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO18:4981 C9               ret                 // Establishes bullet and explosion graphics' palettes
 RO18:4982 F5               push af
 RO18:4983 78               ld   a,b
 RO18:4984 FE 00            cp   a,00
 RO18:4986 20 24            jr   nz,49AC
 RO18:4988 F1               pop  af
 RO18:4989 FE 00            cp   a,00
 RO18:498B 28 08            jr   z,4995
 RO18:498D FE 01            cp   a,01
 RO18:498F 28 0F            jr   z,49A0
 RO18:4991 FE 02            cp   a,02
 RO18:4993 28 11            jr   z,49A6
 RO18:4995 3E 00            ld   a,00
 RO18:4997 47               ld   b,a
 RO18:4998 FA B3 C4         ld   a,(C4B3)       // Red Star's Used Weapon
 RO18:499B CD CF 49         call 49CF           // Red Star Bullet Animation Instruction for same altitude units
 RO18:499E 18 2E            jr   49CE
 RO18:49A0 EF 18 1A 4C                          // Animation instruction: Red Star's attack bullet moves right 3 pixels/frame, up 3 pixels/frame for 5 frames, ending instruction of $18:$4C50
 RO18:49A4 18 28            jr   49CE
 RO18:49A6 EF 18 5F 50                          // Animation instruction: Red Star's attack bullet moves right 3 pixels/frame, down 3 pixels/frame for 7 frames, ending instruction of $18:$5093
 RO18:49AA 18 22            jr   49CE
 RO18:49AC F1               pop  af
 RO18:49AD FE 00            cp   a,00
 RO18:49AF 28 08            jr   z,49B9
 RO18:49B1 FE 01            cp   a,01
 RO18:49B3 28 0F            jr   z,49C4
 RO18:49B5 FE 02            cp   a,02
 RO18:49B7 28 11            jr   z,49CA
 RO18:49B9 3E 01            ld   a,01
 RO18:49BB 47               ld   b,a
 RO18:49BC FA B4 C4         ld   a,(C4B4)       // White Moon's Used Weapon
 RO18:49BF CD CF 49         call 49CF           // White Moon Bullet Animation Instruction for same altitude units
 RO18:49C2 18 0A            jr   49CE
 RO18:49C4 EF 18 C5 4F                          // Animation Instruction: White Moon's attack bullet moves left 3 pixels/frame, up 3 pixel/frame for 5 frames, ending instruction of $18:$4FF9
 RO18:49C8 18 04            jr   49CE
 RO18:49CA EF 18 F1 50                          // Animation Instruction: White Moon's attack bullet moves left 3 pixels/frame, down 3 pixels/frame for 7 frames, ending instruction of $18:$5125
 RO18:49CE C9               ret                 // Bullet Animation Instruction (A is Altitude Aim, B is Side)
 RO18:49CF FE 08            cp   a,08
 RO18:49D1 38 16            jr   c,49E9
 RO18:49D3 28 25            jr   z,49FA         // Grenade
 RO18:49D5 FE 0C            cp   a,0C
 RO18:49D7 38 10            jr   c,49E9
 RO18:49D9 FE 10            cp   a,10
 RO18:49DB 38 1D            jr   c,49FA         // Range weapons
 RO18:49DD FE 12            cp   a,12
 RO18:49DF 38 08            jr   c,49E9
 RO18:49E1 FE 1B            cp   a,1B
 RO18:49E3 28 26            jr   z,4A0B         // Anti-Ship Missile
 RO18:49E5 FE 1E            cp   a,1E
 RO18:49E7 38 00            jr   c,49E9
 RO18:49E9 78               ld   a,b
 RO18:49EA FE 00            cp   a,00
 RO18:49EC 20 06            jr   nz,49F4
 RO18:49EE EF 18 F2 4A                          // Animation Instruction: Red Star's attack bullet moves right 4 pixels/frame for 2 frames, ending instruction of $18:$4B22
 RO18:49F2 18 28            jr   4A1C
 RO18:49F4 EF 18 86 4B                          // Animation Instruction: White Moon's attack bullet moves left 4 pixels/frame for 2 frames, ending instruction of $18:$4BB6
 RO18:49F8 18 22            jr   4A1C
 RO18:49FA 78               ld   a,b
 RO18:49FB FE 00            cp   a,00
 RO18:49FD 20 06            jr   nz,4A05
 RO18:49FF EF 18 B6 4C                          // Animation instruction: Red Star's attack bullet moves right 3 pixels/frame, up 3 pixels/frame for 10 frames, ending instruction of $18:$4CEC
 RO18:4A03 18 17            jr   4A1C
 RO18:4A05 EF 18 E6 4D                          // Animation instruction: White Moon's attack bullet moves left 3 pixels/frame, up 3 pixels/frame for 10 frames, ending instruction of $18:$4E1C
 RO18:4A09 18 11            jr   4A1C
 RO18:4A0B 78               ld   a,b
 RO18:4A0C FE 00            cp   a,00
 RO18:4A0E 20 06            jr   nz,4A16
 RO18:4A10 EF 18 4C 4D                          // Animation Instruction: Red Star's attack bullet moves right 3 pixels/frame, up 3 pixel/frame for 5 frames, ending instruction of $18:$4D82
 RO18:4A14 18 06            jr   4A1C
 RO18:4A16 EF 18 7C 4E                          // Animation Instruction: White Moon's attack bullet moves left 3 pixels/frame, up 3 pixel/frame for 5 frames, ending instruction of $18:$4EB2
 RO18:4A1A 18 00            jr   4A1C
 RO18:4A1C C9               ret                 // Bullet Animation Instruction for same altitude units (A is Weapon #, B is Side)
 RO18:4A1D F0 83            ld   a,(ff00+83)
 RO18:4A1F F5               push af
 RO18:4A20 3E 00            ld   a,00
 RO18:4A22 E0 83            ld   (ff00+83),a
 RO18:4A24 E0 4F            ld   (ff00+4F),a
 RO18:4A26 3E 8E            ld   a,8E
 RO18:4A28 01 04 09         ld   bc,0904
 RO18:4A2B 11 0E 02         ld   de,020E
 RO18:4A2E EF 15 D3 6A                          // Sets VRA0 Bank map tiles in rectangle 9~10,4~17, to 138
 RO18:4A32 3E 01            ld   a,01
 RO18:4A34 E0 83            ld   (ff00+83),a
 RO18:4A36 E0 4F            ld   (ff00+4F),a
 RO18:4A38 3E 88            ld   a,88
 RO18:4A3A 01 04 09         ld   bc,0904
 RO18:4A3D 11 0E 02         ld   de,020E
 RO18:4A40 EF 15 D3 6A                          // Sets VRA1 Bank map tiles in rectangle 9~10,4~17, to 136 (BG Priority, VRA1)
 RO18:4A44 F1               pop  af
 RO18:4A45 E0 83            ld   (ff00+83),a
 RO18:4A47 E0 4F            ld   (ff00+4F),a
 RO18:4A49 C9               ret                 // Establishes graphics of divider on Battle Screen
 RO18:4A4A F5               push af
 RO18:4A4B C5               push bc
 RO18:4A4C AF               xor  a
 RO18:4A4D 21 BD C4         ld   hl,C4BD
 RO18:4A50 F5               push af             // Loop begins here
 RO18:4A51 16 3C            ld   d,3C
 RO18:4A53 CD 4B 29         call 294B           // A = Pseudo RNG result / 256 % 61
 RO18:4A56 22               ldi  (hl),a
 RO18:4A57 F1               pop  af
 RO18:4A58 3C               inc  a
 RO18:4A59 FE 0A            cp   a,0A
 RO18:4A5B 20 F3            jr   nz,4A50
 RO18:4A5D C1               pop  bc
 RO18:4A5E F1               pop  af
 RO18:4A5F C9               ret                 // Loads current seed of ($C4BD) set with Psuedo RNG value 0~60
 RO18:4A60 21 BD C4         ld   hl,C4BD
 RO18:4A63 11 6D 4A         ld   de,4A6D
 RO18:4A66 01 0A 00         ld   bc,000A
 RO18:4A69 CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:4A6C C9               ret  

 RO18:4A6D 00 04 08 10 20 35 46 57 68 79

 RO18:4A77 AF               xor  a
 RO18:4A78 EA CC C4         ld   (C4CC),a
 RO18:4A7B EA CD C4         ld   (C4CD),a
 RO18:4A7E EA CE C4         ld   (C4CE),a
 RO18:4A81 EA CF C4         ld   (C4CF),a
 RO18:4A84 EA D3 C4         ld   (C4D3),a
 RO18:4A87 EA D5 C4         ld   (C4D5),a
 RO18:4A8A EA D6 C4         ld   (C4D6),a
 RO18:4A8D EA D7 C4         ld   (C4D7),a
 RO18:4A90 EA D8 C4         ld   (C4D8),a
 RO18:4A93 EA D9 C4         ld   (C4D9),a
 RO18:4A96 EA DB C4         ld   (C4DB),a
 RO18:4A99 3E 0F            ld   a,0F
 RO18:4A9B EA D4 C4         ld   (C4D4),a
 RO18:4A9E 06 17            ld   b,17
 RO18:4AA0 0E 00            ld   c,00
 RO18:4AA2 11 C8 70         ld   de,70C8        // Bullet launch
 RO18:4AA5 EF 17 63 40                          // WRA4($D3AC + A * 32) 20 byte holds: H, ?, L, ?, ($C4CC) 4 byte, number of already active sprites, ($C4D1) 11 byte; A and ($C4D0) both hold number of already active sprites; WRA4($DB2C) incremented; $Dxx5~$DxxB prepared with sprite info
 RO18:4AA9 C9               ret                 // Bullet launch sprite meant to be established (unused, and for good reason too)
 RO18:4AAA FE 1D            cp   a,1D
 RO18:4AAC 38 08            jr   c,4AB6
 RO18:4AAE FE 2C            cp   a,2C
 RO18:4AB0 38 06            jr   c,4AB8
 RO18:4AB2 FE 34            cp   a,34
 RO18:4AB4 38 05            jr   c,4ABB
 RO18:4AB6 AF               xor  a
 RO18:4AB7 C9               ret  
 RO18:4AB8 3E 01            ld   a,01
 RO18:4ABA C9               ret  
 RO18:4ABB 3E 02            ld   a,02
 RO18:4ABD C9               ret                 // A = 1 for Air, 2 for Sea, 0 otherwise
 RO18:4ABE FE 32            cp   a,32
 RO18:4AC0 28 18            jr   z,4ADA
 RO18:4AC2 FE 33            cp   a,33
 RO18:4AC4 28 14            jr   z,4ADA         // End with A = 3 for Submarine
 RO18:4AC6 FE 1D            cp   a,1D
 RO18:4AC8 38 08            jr   c,4AD2         // End with A = 0 for Land
 RO18:4ACA FE 2C            cp   a,2C
 RO18:4ACC 38 06            jr   c,4AD4         // End with A = 1 for Air
 RO18:4ACE FE 34            cp   a,34
 RO18:4AD0 38 05            jr   c,4AD7         // End with A = 2 for Ship
 RO18:4AD2 AF               xor  a
 RO18:4AD3 C9               ret  
 RO18:4AD4 3E 01            ld   a,01
 RO18:4AD6 C9               ret  
 RO18:4AD7 3E 02            ld   a,02
 RO18:4AD9 C9               ret  
 RO18:4ADA 3E 03            ld   a,03
 RO18:4ADC C9               ret                 // A = 0 for Land, 1 for Air, 2 for Ship, or 3 for Submarine
 RO18:4ADD FE 23            cp   a,23           // Land unit or jet?
 RO18:4ADF 38 0C            jr   c,4AED
 RO18:4AE1 FE 27            cp   a,27           // Big plane?
 RO18:4AE3 38 0A            jr   c,4AEF
 RO18:4AE5 FE 2C            cp   a,2C           // Helicopter?
 RO18:4AE7 38 04            jr   c,4AED
 RO18:4AE9 FE 34            cp   a,34           // Sea unit?
 RO18:4AEB 38 02            jr   c,4AEF
 RO18:4AED AF               xor  a
 RO18:4AEE C9               ret  
 RO18:4AEF 3E 01            ld   a,01
 RO18:4AF1 C9               ret                 // A = 0 for land unit, jet, or helicopter; 1 for big plane or sea unit
 RO18:4AF2 3E 04            ld   a,04
 RO18:4AF4 EA CC C4         ld   (C4CC),a
 RO18:4AF7 AF               xor  a
 RO18:4AF8 EA CD C4         ld   (C4CD),a
 RO18:4AFB EA CE C4         ld   (C4CE),a
 RO18:4AFE EA CF C4         ld   (C4CF),a       // Right 4 pixels
 RO18:4B01 EA D1 C4         ld   (C4D1),a
 RO18:4B04 EA D2 C4         ld   (C4D2),a
 RO18:4B07 AF               xor  a
 RO18:4B08 EA D3 C4         ld   (C4D3),a
 RO18:4B0B 3E 02            ld   a,02
 RO18:4B0D EA D4 C4         ld   (C4D4),a
 RO18:4B10 3E 4B            ld   a,4B
 RO18:4B12 EA D5 C4         ld   (C4D5),a
 RO18:4B15 3E 22            ld   a,22
 RO18:4B17 EA D6 C4         ld   (C4D6),a
 RO18:4B1A 3E 18            ld   a,18
 RO18:4B1C EA D7 C4         ld   (C4D7),a       // Instruction $18:$4B22: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left of landing location, attack bullet shifts right 4 pixels/frame for 3 frames before managing finishing explosion stuff
 RO18:4B1F C3 8A 02         jp   028A           // Animation Instruction: Red Star's attack bullet moves right 4 pixels/frame for 2 frames, ending instruction of $18:$4B22 (right below)
 RO18:4B22 3E 01            ld   a,01
 RO18:4B24 EA DE C4         ld   (C4DE),a
 RO18:4B27 CD 95 4F         call 4F95           // Sets up attack bullet's centralizing X position from Red Star to White Moon
 RO18:4B2A CD 16 4F         call 4F16           // Sets up attack bullet's centralizing Y position
 RO18:4B2D AF               xor  a
 RO18:4B2E EA DA C4         ld   (C4DA),a
 RO18:4B31 3E 04            ld   a,04
 RO18:4B33 EA CC C4         ld   (C4CC),a
 RO18:4B36 AF               xor  a
 RO18:4B37 EA CD C4         ld   (C4CD),a
 RO18:4B3A EA CE C4         ld   (C4CE),a
 RO18:4B3D EA CF C4         ld   (C4CF),a       // Right 4 pixels/frame
 RO18:4B40 EA D3 C4         ld   (C4D3),a
 RO18:4B43 3E 03            ld   a,03
 RO18:4B45 EA D4 C4         ld   (C4D4),a       // Last for 3 frames
 RO18:4B48 3E 00            ld   a,00
 RO18:4B4A EA AD C4         ld   (C4AD),a
 RO18:4B4D FA DC C4         ld   a,(C4DC)       // Red Star's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:4B50 EA 30 DB         ld   (DB30),a
 RO18:4B53 FA B3 C4         ld   a,(C4B3)       // Red Star's Used Weapon
 RO18:4B56 01 02 00         ld   bc,0002
 RO18:4B59 EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:4B5D FA D0 C4         ld   a,(C4D0)
 RO18:4B60 06 17            ld   b,17
 RO18:4B62 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:4B65 AF               xor  a
 RO18:4B66 EA D1 C4         ld   (C4D1),a
 RO18:4B69 3E 3C            ld   a,3C
 RO18:4B6B EA D2 C4         ld   (C4D2),a       // Activates after 60 frames
 RO18:4B6E FA D0 C4         ld   a,(C4D0)
 RO18:4B71 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:4B74 3E 51            ld   a,51
 RO18:4B76 EA D5 C4         ld   (C4D5),a
 RO18:4B79 3E E3            ld   a,E3
 RO18:4B7B EA D6 C4         ld   (C4D6),a
 RO18:4B7E 3E 18            ld   a,18
 RO18:4B80 EA D7 C4         ld   (C4D7),a       // Instruction $18:$51E3: finishing explosion going right sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:4B83 C3 8A 02         jp   028A           // Animation instruction: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left of landing location, attack bullet shifts right 4 pixels/frame for 3 frames before managing finishing explosion stuff
 RO18:4B86 3E FC            ld   a,FC
 RO18:4B88 EA CC C4         ld   (C4CC),a
 RO18:4B8B AF               xor  a
 RO18:4B8C EA CD C4         ld   (C4CD),a
 RO18:4B8F EA CE C4         ld   (C4CE),a
 RO18:4B92 EA CF C4         ld   (C4CF),a
 RO18:4B95 EA D1 C4         ld   (C4D1),a
 RO18:4B98 EA D2 C4         ld   (C4D2),a
 RO18:4B9B AF               xor  a
 RO18:4B9C EA D3 C4         ld   (C4D3),a
 RO18:4B9F 3E 02            ld   a,02
 RO18:4BA1 EA D4 C4         ld   (C4D4),a
 RO18:4BA4 3E 4B            ld   a,4B
 RO18:4BA6 EA D5 C4         ld   (C4D5),a
 RO18:4BA9 3E B6            ld   a,B6
 RO18:4BAB EA D6 C4         ld   (C4D6),a
 RO18:4BAE 3E 18            ld   a,18
 RO18:4BB0 EA D7 C4         ld   (C4D7),a       // Instruction $18:$4BB6: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right of landing location, attack bullet shifts left 4 pixels/frame for 3 frames before managing finishing explosion stuff
 RO18:4BB3 C3 8A 02         jp   028A           // Animation Instruction: White Moon's attack bullet moves left 4 pixels/frame for 2 frames, ending instruction of $18:$4BB6 (right below)
 RO18:4BB6 3E 01            ld   a,01
 RO18:4BB8 EA DE C4         ld   (C4DE),a
 RO18:4BBB CD AD 4F         call 4FAD           // Sets up attack bullet's centralizing X position from White Moon to Red Star
 RO18:4BBE CD 16 4F         call 4F16           // Sets up attack bullet's centralizing Y position
 RO18:4BC1 AF               xor  a
 RO18:4BC2 EA DA C4         ld   (C4DA),a
 RO18:4BC5 3E FC            ld   a,FC
 RO18:4BC7 EA CC C4         ld   (C4CC),a
 RO18:4BCA AF               xor  a
 RO18:4BCB EA CD C4         ld   (C4CD),a
 RO18:4BCE EA CE C4         ld   (C4CE),a
 RO18:4BD1 EA CF C4         ld   (C4CF),a
 RO18:4BD4 EA D3 C4         ld   (C4D3),a
 RO18:4BD7 3E 03            ld   a,03
 RO18:4BD9 EA D4 C4         ld   (C4D4),a
 RO18:4BDC 3E 01            ld   a,01
 RO18:4BDE EA AD C4         ld   (C4AD),a
 RO18:4BE1 FA DD C4         ld   a,(C4DD)       // White Moon's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:4BE4 EA 30 DB         ld   (DB30),a
 RO18:4BE7 FA B4 C4         ld   a,(C4B4)       // White Moon's Used Weapon
 RO18:4BEA 01 02 00         ld   bc,0002
 RO18:4BED EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:4BF1 FA D0 C4         ld   a,(C4D0)
 RO18:4BF4 06 17            ld   b,17
 RO18:4BF6 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:4BF9 AF               xor  a
 RO18:4BFA EA D1 C4         ld   (C4D1),a
 RO18:4BFD 3E 3C            ld   a,3C
 RO18:4BFF EA D2 C4         ld   (C4D2),a
 RO18:4C02 FA D0 C4         ld   a,(C4D0)
 RO18:4C05 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:4C08 3E 52            ld   a,52
 RO18:4C0A EA D5 C4         ld   (C4D5),a
 RO18:4C0D 3E 65            ld   a,65
 RO18:4C0F EA D6 C4         ld   (C4D6),a
 RO18:4C12 3E 18            ld   a,18
 RO18:4C14 EA D7 C4         ld   (C4D7),a       // Instruction $18:$5265: finishing explosion going left sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:4C17 C3 8A 02         jp   028A           // Animation instruction: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right of landing location, attack bullet shifts left 4 pixels/frame for 3 frames before managing finishing explosion stuff
 RO18:4C1A 3E 03            ld   a,03
 RO18:4C1C EA CC C4         ld   (C4CC),a
 RO18:4C1F 3E 00            ld   a,00
 RO18:4C21 EA CD C4         ld   (C4CD),a
 RO18:4C24 3E FD            ld   a,FD
 RO18:4C26 EA CE C4         ld   (C4CE),a
 RO18:4C29 3E 00            ld   a,00
 RO18:4C2B EA CF C4         ld   (C4CF),a       // Right 3 pixels/frame, Up 3 pixels/frame
 RO18:4C2E AF               xor  a
 RO18:4C2F EA D1 C4         ld   (C4D1),a
 RO18:4C32 EA D2 C4         ld   (C4D2),a
 RO18:4C35 AF               xor  a
 RO18:4C36 EA D3 C4         ld   (C4D3),a
 RO18:4C39 3E 05            ld   a,05
 RO18:4C3B EA D4 C4         ld   (C4D4),a
 RO18:4C3E 3E 4C            ld   a,4C
 RO18:4C40 EA D5 C4         ld   (C4D5),a
 RO18:4C43 3E 50            ld   a,50
 RO18:4C45 EA D6 C4         ld   (C4D6),a
 RO18:4C48 3E 18            ld   a,18
 RO18:4C4A EA D7 C4         ld   (C4D7),a       // Instruction $18:$4C50: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 8 pixels left and 16 pixels down of landing location, attack bullet shifts same rate as in calling instruction for 5 frames before managing finishing explosion stuff
 RO18:4C4D C3 8A 02         jp   028A           // Animation instruction: Red Star's attack bullet moves right 3 pixels/frame, up 3 pixels/frame for 5 frames, ending instruction of $18:$4C50 (right below)
 RO18:4C50 3E 01            ld   a,01
 RO18:4C52 EA DE C4         ld   (C4DE),a
 RO18:4C55 AF               xor  a
 RO18:4C56 EA DA C4         ld   (C4DA),a
 RO18:4C59 CD 95 4F         call 4F95           // Sets up attack bullet's centralizing X position from Red Star to White Moon
 RO18:4C5C CD 16 4F         call 4F16           // Sets up attack bullet's centralizing Y position
 RO18:4C5F FA C8 C4         ld   a,(C4C8)
 RO18:4C62 C6 04            add  a,04
 RO18:4C64 EA C8 C4         ld   (C4C8),a       // X += 4
 RO18:4C67 FA CA C4         ld   a,(C4CA)
 RO18:4C6A C6 10            add  a,10
 RO18:4C6C EA CA C4         ld   (C4CA),a       // Y += 16
 RO18:4C6F AF               xor  a
 RO18:4C70 EA D3 C4         ld   (C4D3),a
 RO18:4C73 3E 05            ld   a,05
 RO18:4C75 EA D4 C4         ld   (C4D4),a       // 5 frames
 RO18:4C78 3E 00            ld   a,00
 RO18:4C7A EA AD C4         ld   (C4AD),a
 RO18:4C7D FA DC C4         ld   a,(C4DC)       // Red Star's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:4C80 EA 30 DB         ld   (DB30),a
 RO18:4C83 FA B3 C4         ld   a,(C4B3)       // Red Star's Used Weapon
 RO18:4C86 01 02 00         ld   bc,0002
 RO18:4C89 EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:4C8D FA D0 C4         ld   a,(C4D0)
 RO18:4C90 06 17            ld   b,17
 RO18:4C92 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:4C95 AF               xor  a
 RO18:4C96 EA D1 C4         ld   (C4D1),a
 RO18:4C99 3E 3C            ld   a,3C
 RO18:4C9B EA D2 C4         ld   (C4D2),a
 RO18:4C9E FA D0 C4         ld   a,(C4D0)
 RO18:4CA1 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:4CA4 3E 53            ld   a,53
 RO18:4CA6 EA D5 C4         ld   (C4D5),a
 RO18:4CA9 3E 5F            ld   a,5F
 RO18:4CAB EA D6 C4         ld   (C4D6),a
 RO18:4CAE 3E 18            ld   a,18
 RO18:4CB0 EA D7 C4         ld   (C4D7),a       // Instruction $18:$535F: finishing explosion by (Red Star) Surface-To-Air sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:4CB3 C3 8A 02         jp   028A           // Animation instruction: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 8 pixels left and 16 pixels down of landing location, attack bullet shifts same rate as in calling instruction for 5 frames before managing finishing explosion stuff
 RO18:4CB6 3E 03            ld   a,03
 RO18:4CB8 EA CC C4         ld   (C4CC),a
 RO18:4CBB 3E 00            ld   a,00
 RO18:4CBD EA CD C4         ld   (C4CD),a
 RO18:4CC0 3E FD            ld   a,FD
 RO18:4CC2 EA CE C4         ld   (C4CE),a
 RO18:4CC5 3E 00            ld   a,00
 RO18:4CC7 EA CF C4         ld   (C4CF),a       // Right 3 pixels/frame, Up 3 pixels/frames
 RO18:4CCA AF               xor  a
 RO18:4CCB EA D1 C4         ld   (C4D1),a
 RO18:4CCE EA D2 C4         ld   (C4D2),a
 RO18:4CD1 AF               xor  a
 RO18:4CD2 EA D3 C4         ld   (C4D3),a
 RO18:4CD5 3E 0A            ld   a,0A
 RO18:4CD7 EA D4 C4         ld   (C4D4),a
 RO18:4CDA 3E 4C            ld   a,4C
 RO18:4CDC EA D5 C4         ld   (C4D5),a
 RO18:4CDF 3E EC            ld   a,EC
 RO18:4CE1 EA D6 C4         ld   (C4D6),a
 RO18:4CE4 3E 18            ld   a,18
 RO18:4CE6 EA D7 C4         ld   (C4D7),a       // Instruction $18:$4CEC: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left and 23 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, down 3 pixels/frame for 6 frames before managing finishing explosion stuff
 RO18:4CE9 C3 8A 02         jp   028A           // Animation instruction: Red Star's attack bullet moves right 3 pixels/frame, up 3 pixels/frame for 10 frames, ending instruction of $18:$4CEC (right below)
 RO18:4CEC 3E 01            ld   a,01
 RO18:4CEE EA DE C4         ld   (C4DE),a
 RO18:4CF1 CD 95 4F         call 4F95           // Sets up attack bullet's centralizing X position from Red Star to White Moon
 RO18:4CF4 CD 54 4F         call 4F54           // Sets up gravity-arcing attack bullet's centralizing Y position starting from 23 pixels above
 RO18:4CF7 AF               xor  a
 RO18:4CF8 EA DA C4         ld   (C4DA),a
 RO18:4CFB 3E 03            ld   a,03
 RO18:4CFD EA CE C4         ld   (C4CE),a
 RO18:4D00 3E 00            ld   a,00
 RO18:4D02 EA CF C4         ld   (C4CF),a       // Down 3 pixels/frame
 RO18:4D05 AF               xor  a
 RO18:4D06 EA D3 C4         ld   (C4D3),a
 RO18:4D09 3E 06            ld   a,06
 RO18:4D0B EA D4 C4         ld   (C4D4),a       // 6 frames
 RO18:4D0E 3E 00            ld   a,00
 RO18:4D10 EA AD C4         ld   (C4AD),a
 RO18:4D13 FA DC C4         ld   a,(C4DC)       // Red Star's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:4D16 EA 30 DB         ld   (DB30),a
 RO18:4D19 FA B3 C4         ld   a,(C4B3)       // Red Star's Used Weapon
 RO18:4D1C 01 02 00         ld   bc,0002
 RO18:4D1F EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:4D23 FA D0 C4         ld   a,(C4D0)
 RO18:4D26 06 17            ld   b,17
 RO18:4D28 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:4D2B AF               xor  a
 RO18:4D2C EA D1 C4         ld   (C4D1),a
 RO18:4D2F 3E 3C            ld   a,3C
 RO18:4D31 EA D2 C4         ld   (C4D2),a       // Activates after 60 frames
 RO18:4D34 FA D0 C4         ld   a,(C4D0)
 RO18:4D37 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:4D3A 3E 51            ld   a,51
 RO18:4D3C EA D5 C4         ld   (C4D5),a
 RO18:4D3F 3E E3            ld   a,E3
 RO18:4D41 EA D6 C4         ld   (C4D6),a
 RO18:4D44 3E 18            ld   a,18
 RO18:4D46 EA D7 C4         ld   (C4D7),a       // Instruction $18:$51E3: finishing explosion going right sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:4D49 C3 8A 02         jp   028A           // Animation instruction: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left and 23 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, down 3 pixels/frame for 6 frames before managing finishing explosion stuff
 RO18:4D4C 3E 03            ld   a,03
 RO18:4D4E EA CC C4         ld   (C4CC),a
 RO18:4D51 3E 00            ld   a,00
 RO18:4D53 EA CD C4         ld   (C4CD),a
 RO18:4D56 3E FD            ld   a,FD
 RO18:4D58 EA CE C4         ld   (C4CE),a
 RO18:4D5B 3E 00            ld   a,00
 RO18:4D5D EA CF C4         ld   (C4CF),a       // Right 3 pixels/frame, Up 3 pixels/frame
 RO18:4D60 AF               xor  a
 RO18:4D61 EA D1 C4         ld   (C4D1),a
 RO18:4D64 EA D2 C4         ld   (C4D2),a
 RO18:4D67 AF               xor  a
 RO18:4D68 EA D3 C4         ld   (C4D3),a
 RO18:4D6B 3E 05            ld   a,05
 RO18:4D6D EA D4 C4         ld   (C4D4),a       // 5 frames
 RO18:4D70 3E 4D            ld   a,4D
 RO18:4D72 EA D5 C4         ld   (C4D5),a
 RO18:4D75 3E 82            ld   a,82
 RO18:4D77 EA D6 C4         ld   (C4D6),a
 RO18:4D7A 3E 18            ld   a,18
 RO18:4D7C EA D7 C4         ld   (C4D7),a       // Instruction $18:$4D82: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left of landing location, attack bullet shifts right 4 pixels/frame for 5 frames before managing finishing Anti-Ship explosion stuff
 RO18:4D7F C3 8A 02         jp   028A           // Animation Instruction: Red Star's attack bullet moves right 3 pixels/frame, up 3 pixel/frame for 5 frames, ending instruction of $18:$4D82 (right below)
 RO18:4D82 3E 01            ld   a,01
 RO18:4D84 EA DE C4         ld   (C4DE),a
 RO18:4D87 CD 95 4F         call 4F95           // Sets up attack bullet's centralizing X position from Red Star to White Moon
 RO18:4D8A AF               xor  a
 RO18:4D8B EA DA C4         ld   (C4DA),a
 RO18:4D8E 3E 04            ld   a,04
 RO18:4D90 EA CC C4         ld   (C4CC),a
 RO18:4D93 CD 16 4F         call 4F16           // Sets up attack bullet's centralizing Y position
 RO18:4D96 AF               xor  a
 RO18:4D97 EA CD C4         ld   (C4CD),a
 RO18:4D9A EA CF C4         ld   (C4CF),a
 RO18:4D9D EA CE C4         ld   (C4CE),a       // Right 4 pixels/frame
 RO18:4DA0 EA D3 C4         ld   (C4D3),a
 RO18:4DA3 3E 05            ld   a,05
 RO18:4DA5 EA D4 C4         ld   (C4D4),a       // 5 frames
 RO18:4DA8 3E 00            ld   a,00
 RO18:4DAA EA AD C4         ld   (C4AD),a
 RO18:4DAD FA DC C4         ld   a,(C4DC)       // Red Star's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:4DB0 EA 30 DB         ld   (DB30),a
 RO18:4DB3 FA B3 C4         ld   a,(C4B3)       // Red Star's Used Weapon
 RO18:4DB6 01 02 00         ld   bc,0002
 RO18:4DB9 EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:4DBD FA D0 C4         ld   a,(C4D0)
 RO18:4DC0 06 17            ld   b,17
 RO18:4DC2 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:4DC5 AF               xor  a
 RO18:4DC6 EA D1 C4         ld   (C4D1),a
 RO18:4DC9 3E 3C            ld   a,3C
 RO18:4DCB EA D2 C4         ld   (C4D2),a
 RO18:4DCE FA D0 C4         ld   a,(C4D0)
 RO18:4DD1 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:4DD4 3E 52            ld   a,52
 RO18:4DD6 EA D5 C4         ld   (C4D5),a
 RO18:4DD9 3E E7            ld   a,E7
 RO18:4DDB EA D6 C4         ld   (C4D6),a
 RO18:4DDE 3E 18            ld   a,18
 RO18:4DE0 EA D7 C4         ld   (C4D7),a       // Instruction $18:$52E7: finishing explosion by Anti-Ship Missile sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:4DE3 C3 8A 02         jp   028A           // Animation Instruction: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left of landing location, attack bullet shifts right 4 pixels/frame for 5 frames before managing finishing Anti-Ship explosion stuff
 RO18:4DE6 3E FD            ld   a,FD
 RO18:4DE8 EA CC C4         ld   (C4CC),a
 RO18:4DEB 3E 00            ld   a,00
 RO18:4DED EA CD C4         ld   (C4CD),a
 RO18:4DF0 3E FD            ld   a,FD
 RO18:4DF2 EA CE C4         ld   (C4CE),a
 RO18:4DF5 3E 00            ld   a,00
 RO18:4DF7 EA CF C4         ld   (C4CF),a       // Left 3 pixels/frame, Up 3 pixels/frame
 RO18:4DFA AF               xor  a
 RO18:4DFB EA D1 C4         ld   (C4D1),a
 RO18:4DFE EA D2 C4         ld   (C4D2),a
 RO18:4E01 AF               xor  a
 RO18:4E02 EA D3 C4         ld   (C4D3),a
 RO18:4E05 3E 0A            ld   a,0A
 RO18:4E07 EA D4 C4         ld   (C4D4),a       // 10 frames
 RO18:4E0A 3E 4E            ld   a,4E
 RO18:4E0C EA D5 C4         ld   (C4D5),a
 RO18:4E0F 3E 1C            ld   a,1C
 RO18:4E11 EA D6 C4         ld   (C4D6),a
 RO18:4E14 3E 18            ld   a,18
 RO18:4E16 EA D7 C4         ld   (C4D7),a       // Instruction $18:$4E1C: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right and 23 pixels up of landing location, attack bullet shifts right/left unchanged, down 3 pixels/frame for 6 frames before managing finishing explosion stuff
 RO18:4E19 C3 8A 02         jp   028A           // Animation instruction: White Moon's attack bullet moves left 3 pixels/frame, up 3 pixels/frame for 10 frames, ending instruction of $18:$4E1C (right below)
 RO18:4E1C 3E 01            ld   a,01
 RO18:4E1E EA DE C4         ld   (C4DE),a
 RO18:4E21 CD AD 4F         call 4FAD           // Sets up attack bullet's centralizing X position from White Moon to Red Star
 RO18:4E24 CD 54 4F         call 4F54           // Sets up gravity-arcing attack bullet's centralizing Y position starting from 23 pixels above
 RO18:4E27 AF               xor  a
 RO18:4E28 EA DA C4         ld   (C4DA),a
 RO18:4E2B 3E 03            ld   a,03
 RO18:4E2D EA CE C4         ld   (C4CE),a
 RO18:4E30 3E 00            ld   a,00
 RO18:4E32 EA CF C4         ld   (C4CF),a
 RO18:4E35 AF               xor  a
 RO18:4E36 EA D3 C4         ld   (C4D3),a
 RO18:4E39 3E 06            ld   a,06
 RO18:4E3B EA D4 C4         ld   (C4D4),a
 RO18:4E3E 3E 01            ld   a,01
 RO18:4E40 EA AD C4         ld   (C4AD),a
 RO18:4E43 FA DD C4         ld   a,(C4DD)       // White Moon's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:4E46 EA 30 DB         ld   (DB30),a
 RO18:4E49 FA B4 C4         ld   a,(C4B4)       // White Moon's Used Weapon
 RO18:4E4C 01 02 00         ld   bc,0002
 RO18:4E4F EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:4E53 FA D0 C4         ld   a,(C4D0)
 RO18:4E56 06 17            ld   b,17
 RO18:4E58 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:4E5B AF               xor  a
 RO18:4E5C EA D1 C4         ld   (C4D1),a
 RO18:4E5F 3E 3C            ld   a,3C
 RO18:4E61 EA D2 C4         ld   (C4D2),a
 RO18:4E64 FA D0 C4         ld   a,(C4D0)
 RO18:4E67 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:4E6A 3E 52            ld   a,52
 RO18:4E6C EA D5 C4         ld   (C4D5),a
 RO18:4E6F 3E 65            ld   a,65
 RO18:4E71 EA D6 C4         ld   (C4D6),a
 RO18:4E74 3E 18            ld   a,18
 RO18:4E76 EA D7 C4         ld   (C4D7),a       // Instruction $18:$5265: finishing explosion going left sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:4E79 C3 8A 02         jp   028A           // Animation Instruction: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right and 23 pixels up of landing location, attack bullet shifts right/left unchanged, down 3 pixels/frame for 6 frames before managing finishing explosion stuff
 RO18:4E7C 3E FD            ld   a,FD
 RO18:4E7E EA CC C4         ld   (C4CC),a
 RO18:4E81 3E 00            ld   a,00
 RO18:4E83 EA CD C4         ld   (C4CD),a
 RO18:4E86 3E FD            ld   a,FD
 RO18:4E88 EA CE C4         ld   (C4CE),a
 RO18:4E8B 3E 00            ld   a,00
 RO18:4E8D EA CF C4         ld   (C4CF),a       // Left 3 pixels/frame, Up 3 pixels/frame
 RO18:4E90 AF               xor  a
 RO18:4E91 EA D1 C4         ld   (C4D1),a
 RO18:4E94 EA D2 C4         ld   (C4D2),a
 RO18:4E97 AF               xor  a
 RO18:4E98 EA D3 C4         ld   (C4D3),a
 RO18:4E9B 3E 05            ld   a,05
 RO18:4E9D EA D4 C4         ld   (C4D4),a       // 5 frames
 RO18:4EA0 3E 4E            ld   a,4E
 RO18:4EA2 EA D5 C4         ld   (C4D5),a
 RO18:4EA5 3E B2            ld   a,B2
 RO18:4EA7 EA D6 C4         ld   (C4D6),a
 RO18:4EAA 3E 18            ld   a,18
 RO18:4EAC EA D7 C4         ld   (C4D7),a       // Instruction $18:$4EB2: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right of landing location, attack bullet shifts left 4 pixels/frame for 5 frames before managing finishing Anti-Ship explosion stuff
 RO18:4EAF C3 8A 02         jp   028A           // Animation Instruction: White Moon's attack bullet moves left 3 pixels/frame, up 3 pixel/frame for 5 frames, ending instruction of $18:$4EB2 (right below)
 RO18:4EB2 3E 01            ld   a,01
 RO18:4EB4 EA DE C4         ld   (C4DE),a
 RO18:4EB7 CD AD 4F         call 4FAD           // Sets up attack bullet's centralizing X position from White Moon to Red Star
 RO18:4EBA AF               xor  a
 RO18:4EBB EA DA C4         ld   (C4DA),a
 RO18:4EBE 3E FC            ld   a,FC
 RO18:4EC0 EA CC C4         ld   (C4CC),a
 RO18:4EC3 CD 16 4F         call 4F16           // Sets up attack bullet's centralizing Y position
 RO18:4EC6 AF               xor  a
 RO18:4EC7 EA CD C4         ld   (C4CD),a
 RO18:4ECA EA CF C4         ld   (C4CF),a
 RO18:4ECD EA CE C4         ld   (C4CE),a       // Left 4 pixels/frame
 RO18:4ED0 EA D3 C4         ld   (C4D3),a
 RO18:4ED3 3E 05            ld   a,05
 RO18:4ED5 EA D4 C4         ld   (C4D4),a       // 5 frames
 RO18:4ED8 3E 01            ld   a,01
 RO18:4EDA EA AD C4         ld   (C4AD),a
 RO18:4EDD FA DD C4         ld   a,(C4DD)       // White Moon's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:4EE0 EA 30 DB         ld   (DB30),a
 RO18:4EE3 FA B4 C4         ld   a,(C4B4)       // White Moon's Used Weapon
 RO18:4EE6 01 02 00         ld   bc,0002
 RO18:4EE9 EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:4EED FA D0 C4         ld   a,(C4D0)
 RO18:4EF0 06 17            ld   b,17
 RO18:4EF2 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:4EF5 AF               xor  a
 RO18:4EF6 EA D1 C4         ld   (C4D1),a
 RO18:4EF9 3E 3C            ld   a,3C
 RO18:4EFB EA D2 C4         ld   (C4D2),a
 RO18:4EFE FA D0 C4         ld   a,(C4D0)
 RO18:4F01 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:4F04 3E 52            ld   a,52
 RO18:4F06 EA D5 C4         ld   (C4D5),a
 RO18:4F09 3E E7            ld   a,E7
 RO18:4F0B EA D6 C4         ld   (C4D6),a
 RO18:4F0E 3E 18            ld   a,18
 RO18:4F10 EA D7 C4         ld   (C4D7),a       // Instruction $18:$52E7: finishing explosion by Anti-Ship Missile sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:4F13 C3 8A 02         jp   028A           // Animation Instruction: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right of landing location, attack bullet shifts left 4 pixels/frame for 5 frames before managing finishing Anti-Ship explosion stuff
 RO18:4F16 F5               push af
 RO18:4F17 C5               push bc
 RO18:4F18 D5               push de
 RO18:4F19 FA D8 C4         ld   a,(C4D8)
 RO18:4F1C FE 00            cp   a,00
 RO18:4F1E 28 05            jr   z,4F25
 RO18:4F20 FA 77 D3         ld   a,(D377)
 RO18:4F23 18 05            jr   4F2A
 RO18:4F25 FA 7D D3         ld   a,(D37D)
 RO18:4F28 18 00            jr   4F2A
 RO18:4F2A CD AA 4A         call 4AAA           // A = 1 for Air, 2 for Sea, 0 otherwise
 RO18:4F2D FE 00            cp   a,00
 RO18:4F2F 28 06            jr   z,4F37
 RO18:4F31 FE 01            cp   a,01
 RO18:4F33 28 07            jr   z,4F3C
 RO18:4F35 18 0A            jr   4F41
 RO18:4F37 21 6A 4F         ld   hl,4F6A
 RO18:4F3A 18 0A            jr   4F46           // Land complete
 RO18:4F3C 21 75 4F         ld   hl,4F75
 RO18:4F3F 18 05            jr   4F46           // Air complete
 RO18:4F41 21 80 4F         ld   hl,4F80
 RO18:4F44 18 00            jr   4F46           // Sea complete
 RO18:4F46 FA D9 C4         ld   a,(C4D9)
 RO18:4F49 CD BC 29         call 29BC           // HL += A
 RO18:4F4C 7E               ld   a,(hl)
 RO18:4F4D EA CA C4         ld   (C4CA),a
 RO18:4F50 D1               pop  de
 RO18:4F51 C1               pop  bc
 RO18:4F52 F1               pop  af
 RO18:4F53 C9               ret                 // Sets up attack bullet's centralizing Y position
 RO18:4F54 F5               push af
 RO18:4F55 C5               push bc
 RO18:4F56 D5               push de
 RO18:4F57 FA D9 C4         ld   a,(C4D9)
 RO18:4F5A 21 6A 4F         ld   hl,4F6A
 RO18:4F5D CD BC 29         call 29BC           // HL += A
 RO18:4F60 7E               ld   a,(hl)
 RO18:4F61 D6 15            sub  a,15
 RO18:4F63 EA CA C4         ld   (C4CA),a
 RO18:4F66 D1               pop  de
 RO18:4F67 C1               pop  bc
 RO18:4F68 F1               pop  af
 RO18:4F69 C9               ret                 // Sets up gravity-arcing attack bullet's centralizing Y position starting from 23 pixels above

 RO18:4F6A 50 50               ld   d,b
 RO18:4F6C 60 60               ld   h,b
 RO18:4F6E 70 70               ld   (hl),b
 RO18:4F70 80 80               add  b
 RO18:4F72 90 90               sub  b
 RO18:4F74 FF               rst  38

 RO18:4F75 38 38            jr   c,4FAF
 RO18:4F77 48 48               ld   c,b
 RO18:4F79 58 58               ld   e,b
 RO18:4F7B 68 68               ld   l,b
 RO18:4F7D 78 78               ld   a,b
 RO18:4F7F FF               rst  38

 RO18:4F80 60 60               ld   h,b
 RO18:4F82 60 70               ld   (hl),b
 RO18:4F84 70 70               ld   (hl),b
 RO18:4F86 80 80               add  b
 RO18:4F88 80 80               add  b
 RO18:4F8A FF               rst  38

 RO18:4F8B 28 10            jr   z,4F9D
 RO18:4F8D 30 18            jr   nc,4FA7
 RO18:4F8F 28 10            jr   z,4FA1
 RO18:4F91 30 18            jr   nc,4FAB
 RO18:4F93 28 10            jr   z,4FA5

 RO18:4F95 F5               push af
 RO18:4F96 C5               push bc
 RO18:4F97 D5               push de
 RO18:4F98 FA D9 C4         ld   a,(C4D9)
 RO18:4F9B 21 8B 4F         ld   hl,4F8B
 RO18:4F9E CD BC 29         call 29BC           // HL += A
 RO18:4FA1 7E               ld   a,(hl)
 RO18:4FA2 4F               ld   c,a
 RO18:4FA3 3E 58            ld   a,58           // Halfway across the screen
 RO18:4FA5 81               add  c
 RO18:4FA6 EA C8 C4         ld   (C4C8),a
 RO18:4FA9 D1               pop  de
 RO18:4FAA C1               pop  bc
 RO18:4FAB F1               pop  af
 RO18:4FAC C9               ret                 // Sets up attack bullet's centralizing X position from Red Star to White Moon
 RO18:4FAD F5               push af
 RO18:4FAE C5               push bc
 RO18:4FAF D5               push de
 RO18:4FB0 FA D9 C4         ld   a,(C4D9)
 RO18:4FB3 21 8B 4F         ld   hl,4F8B
 RO18:4FB6 CD BC 29         call 29BC           // HL += A
 RO18:4FB9 7E               ld   a,(hl)
 RO18:4FBA 4F               ld   c,a
 RO18:4FBB 3E 58            ld   a,58           // Halfway across the screen
 RO18:4FBD 91               sub  c
 RO18:4FBE EA C8 C4         ld   (C4C8),a
 RO18:4FC1 D1               pop  de
 RO18:4FC2 C1               pop  bc
 RO18:4FC3 F1               pop  af
 RO18:4FC4 C9               ret                 // Sets up attack bullet's centralizing X position from White Moon to Red Star
 RO18:4FC5 3E FD            ld   a,FD
 RO18:4FC7 EA CC C4         ld   (C4CC),a
 RO18:4FCA 3E 00            ld   a,00
 RO18:4FCC EA CD C4         ld   (C4CD),a
 RO18:4FCF 3E FD            ld   a,FD
 RO18:4FD1 EA CE C4         ld   (C4CE),a
 RO18:4FD4 3E 00            ld   a,00
 RO18:4FD6 EA CF C4         ld   (C4CF),a
 RO18:4FD9 AF               xor  a
 RO18:4FDA EA D1 C4         ld   (C4D1),a
 RO18:4FDD EA D2 C4         ld   (C4D2),a
 RO18:4FE0 AF               xor  a
 RO18:4FE1 EA D3 C4         ld   (C4D3),a
 RO18:4FE4 3E 05            ld   a,05
 RO18:4FE6 EA D4 C4         ld   (C4D4),a
 RO18:4FE9 3E 4F            ld   a,4F
 RO18:4FEB EA D5 C4         ld   (C4D5),a
 RO18:4FEE 3E F9            ld   a,F9
 RO18:4FF0 EA D6 C4         ld   (C4D6),a
 RO18:4FF3 3E 18            ld   a,18
 RO18:4FF5 EA D7 C4         ld   (C4D7),a       // Instruction $18:$4FF9: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 8 pixels right and 16 pixels down of landing location, attack bullet shifts same rate as in calling instruction for 5 frames before managing finishing explosion stuff
 RO18:4FF8 C9               ret                 // Animation Instruction: White Moon's attack bullet moves left 3 pixels/frame, up 3 pixel/frame for 5 frames, ending instruction of $18:$4FF9 (right below)
 RO18:4FF9 3E 01            ld   a,01
 RO18:4FFB EA DE C4         ld   (C4DE),a
 RO18:4FFE AF               xor  a
 RO18:4FFF EA DA C4         ld   (C4DA),a
 RO18:5002 CD AD 4F         call 4FAD           // Sets up attack bullet's centralizing X position from White Moon to Red Star
 RO18:5005 CD 16 4F         call 4F16           // Sets up attack bullet's centralizing Y position
 RO18:5008 FA C8 C4         ld   a,(C4C8)
 RO18:500B D6 04            sub  a,04
 RO18:500D EA C8 C4         ld   (C4C8),a
 RO18:5010 FA CA C4         ld   a,(C4CA)
 RO18:5013 C6 10            add  a,10
 RO18:5015 EA CA C4         ld   (C4CA),a
 RO18:5018 AF               xor  a
 RO18:5019 EA D3 C4         ld   (C4D3),a
 RO18:501C 3E 05            ld   a,05
 RO18:501E EA D4 C4         ld   (C4D4),a       // 5 frames
 RO18:5021 3E 01            ld   a,01
 RO18:5023 EA AD C4         ld   (C4AD),a
 RO18:5026 FA DD C4         ld   a,(C4DD)       // White Moon's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:5029 EA 30 DB         ld   (DB30),a
 RO18:502C FA B4 C4         ld   a,(C4B4)       // White Moon's Used Weapon
 RO18:502F 01 02 00         ld   bc,0002
 RO18:5032 EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:5036 FA D0 C4         ld   a,(C4D0)
 RO18:5039 06 17            ld   b,17
 RO18:503B CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:503E AF               xor  a
 RO18:503F EA D1 C4         ld   (C4D1),a
 RO18:5042 3E 3C            ld   a,3C
 RO18:5044 EA D2 C4         ld   (C4D2),a       // Activates after 60 frames
 RO18:5047 FA D0 C4         ld   a,(C4D0)
 RO18:504A CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:504D 3E 51            ld   a,51
 RO18:504F EA D5 C4         ld   (C4D5),a
 RO18:5052 3E E3            ld   a,E3
 RO18:5054 EA D6 C4         ld   (C4D6),a
 RO18:5057 3E 18            ld   a,18
 RO18:5059 EA D7 C4         ld   (C4D7),a       // Instruction $18:$51E3: finishing explosion going right sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:505C C3 8A 02         jp   028A           // Animation Instruction: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 8 pixels right and 16 pixels down of landing location, attack bullet shifts same rate as in calling instruction for 5 frames before managing finishing explosion stuff
 RO18:505F 3E 03            ld   a,03
 RO18:5061 EA CC C4         ld   (C4CC),a
 RO18:5064 3E 00            ld   a,00
 RO18:5066 EA CD C4         ld   (C4CD),a
 RO18:5069 3E 03            ld   a,03
 RO18:506B EA CE C4         ld   (C4CE),a
 RO18:506E 3E 00            ld   a,00
 RO18:5070 EA CF C4         ld   (C4CF),a
 RO18:5073 AF               xor  a
 RO18:5074 EA D1 C4         ld   (C4D1),a
 RO18:5077 EA D2 C4         ld   (C4D2),a
 RO18:507A AF               xor  a
 RO18:507B EA D3 C4         ld   (C4D3),a
 RO18:507E 3E 07            ld   a,07
 RO18:5080 EA D4 C4         ld   (C4D4),a
 RO18:5083 3E 50            ld   a,50
 RO18:5085 EA D5 C4         ld   (C4D5),a
 RO18:5088 3E 93            ld   a,93
 RO18:508A EA D6 C4         ld   (C4D6),a
 RO18:508D 3E 18            ld   a,18
 RO18:508F EA D7 C4         ld   (C4D7),a       // Instruction $18:$5093: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left, 8 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, up/down unchanged for 5 frames before managing finishing explosion stuff
 RO18:5092 C9               ret                 // Animation Instruction: Red Star's attack bullet moves right 3 pixels/frame, down 3 pixels/frame for 7 frames, ending instruction of $18:$5093 (right below)
 RO18:5093 3E 01            ld   a,01
 RO18:5095 EA DE C4         ld   (C4DE),a
 RO18:5098 AF               xor  a
 RO18:5099 EA DA C4         ld   (C4DA),a
 RO18:509C CD 95 4F         call 4F95           // Sets up attack bullet's centralizing X position from Red Star to White Moon
 RO18:509F CD 16 4F         call 4F16           // Sets up attack bullet's centralizing Y position
 RO18:50A2 FA CA C4         ld   a,(C4CA)
 RO18:50A5 D6 08            sub  a,08
 RO18:50A7 EA CA C4         ld   (C4CA),a
 RO18:50AA AF               xor  a
 RO18:50AB EA D3 C4         ld   (C4D3),a
 RO18:50AE 3E 05            ld   a,05
 RO18:50B0 EA D4 C4         ld   (C4D4),a       // 5 frames
 RO18:50B3 3E 00            ld   a,00
 RO18:50B5 EA AD C4         ld   (C4AD),a
 RO18:50B8 FA DC C4         ld   a,(C4DC)       // Red Star's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:50BB EA 30 DB         ld   (DB30),a
 RO18:50BE FA B3 C4         ld   a,(C4B3)       // Red Star's Used Weapon
 RO18:50C1 01 02 00         ld   bc,0002
 RO18:50C4 EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:50C8 FA D0 C4         ld   a,(C4D0)
 RO18:50CB 06 17            ld   b,17
 RO18:50CD CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:50D0 AF               xor  a
 RO18:50D1 EA D1 C4         ld   (C4D1),a
 RO18:50D4 3E 3C            ld   a,3C
 RO18:50D6 EA D2 C4         ld   (C4D2),a       // Activates after 60 frames
 RO18:50D9 FA D0 C4         ld   a,(C4D0)
 RO18:50DC CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:50DF 3E 51            ld   a,51
 RO18:50E1 EA D5 C4         ld   (C4D5),a
 RO18:50E4 3E E3            ld   a,E3
 RO18:50E6 EA D6 C4         ld   (C4D6),a
 RO18:50E9 3E 18            ld   a,18
 RO18:50EB EA D7 C4         ld   (C4D7),a       // Instruction $18:$51E3: finishing explosion going right sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:50EE C3 8A 02         jp   028A           // Animation Instruction: Resets $C4DE to 1, Wait 60 frames before respawning Red Star's attack bullet effectively 12 pixels left, 8 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, up/down unchanged for 5 frames before managing finishing explosion stuff
 RO18:50F1 3E FD            ld   a,FD
 RO18:50F3 EA CC C4         ld   (C4CC),a
 RO18:50F6 3E 00            ld   a,00
 RO18:50F8 EA CD C4         ld   (C4CD),a
 RO18:50FB 3E 03            ld   a,03
 RO18:50FD EA CE C4         ld   (C4CE),a
 RO18:5100 3E 00            ld   a,00
 RO18:5102 EA CF C4         ld   (C4CF),a
 RO18:5105 AF               xor  a
 RO18:5106 EA D1 C4         ld   (C4D1),a
 RO18:5109 EA D2 C4         ld   (C4D2),a
 RO18:510C AF               xor  a
 RO18:510D EA D3 C4         ld   (C4D3),a
 RO18:5110 3E 07            ld   a,07
 RO18:5112 EA D4 C4         ld   (C4D4),a
 RO18:5115 3E 51            ld   a,51
 RO18:5117 EA D5 C4         ld   (C4D5),a
 RO18:511A 3E 25            ld   a,25
 RO18:511C EA D6 C4         ld   (C4D6),a
 RO18:511F 3E 18            ld   a,18
 RO18:5121 EA D7 C4         ld   (C4D7),a       // Instruction $18:$5125: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right, 8 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, up/down unchanged for 5 frames before managing finishing explosion stuff
 RO18:5124 C9               ret                 // Animation Instruction: White Moon's attack bullet moves left 3 pixels/frame, down 3 pixels/frame for 7 frames, ending instruction of $18:$5125 (right below)
 RO18:5125 3E 01            ld   a,01
 RO18:5127 EA DE C4         ld   (C4DE),a
 RO18:512A AF               xor  a
 RO18:512B EA DA C4         ld   (C4DA),a
 RO18:512E CD AD 4F         call 4FAD           // Sets up attack bullet's centralizing X position from White Moon to Red Star
 RO18:5131 CD 16 4F         call 4F16           // Sets up attack bullet's centralizing Y position
 RO18:5134 FA CA C4         ld   a,(C4CA)
 RO18:5137 D6 08            sub  a,08
 RO18:5139 EA CA C4         ld   (C4CA),a
 RO18:513C AF               xor  a
 RO18:513D EA D3 C4         ld   (C4D3),a
 RO18:5140 3E 05            ld   a,05
 RO18:5142 EA D4 C4         ld   (C4D4),a       // 5 frames
 RO18:5145 3E 01            ld   a,01
 RO18:5147 EA AD C4         ld   (C4AD),a
 RO18:514A FA DD C4         ld   a,(C4DD)       // White Moon's altitude aim (0 for same, 1 for Surface to Air, 2 for Air to Surface)
 RO18:514D EA 30 DB         ld   (DB30),a
 RO18:5150 FA B4 C4         ld   a,(C4B4)       // White Moon's Used Weapon
 RO18:5153 01 02 00         ld   bc,0002
 RO18:5156 EF 17 9D 47                          // DE holds pointer to sprite stats modification table pointer for weapon's ammo and direction (A is Weapon ID, BC is bytes skipped based on active part)
 RO18:515A FA D0 C4         ld   a,(C4D0)
 RO18:515D 06 17            ld   b,17
 RO18:515F CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO18:5162 AF               xor  a
 RO18:5163 EA D1 C4         ld   (C4D1),a
 RO18:5166 3E 3C            ld   a,3C
 RO18:5168 EA D2 C4         ld   (C4D2),a
 RO18:516B FA D0 C4         ld   a,(C4D0)
 RO18:516E CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:5171 3E 52            ld   a,52
 RO18:5173 EA D5 C4         ld   (C4D5),a
 RO18:5176 3E 65            ld   a,65
 RO18:5178 EA D6 C4         ld   (C4D6),a
 RO18:517B 3E 18            ld   a,18
 RO18:517D EA D7 C4         ld   (C4D7),a       // Instruction $18:$5265: finishing explosion going left sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:5180 C3 8A 02         jp   028A           // Animation Instruction: Resets $C4DE to 1, Wait 60 frames before respawning White Moon's attack bullet effectively 12 pixels right, 8 pixels up of landing location as second part version, attack bullet shifts right/left unchanged, up/down unchanged for 5 frames before managing finishing explosion stuff
 RO18:5183 AF               xor  a
 RO18:5184 EA D3 C4         ld   (C4D3),a
 RO18:5187 3E 13            ld   a,13
 RO18:5189 EA D4 C4         ld   (C4D4),a
 RO18:518C 11 CD 43         ld   de,43CD        // Blunted Explosion
 RO18:518F 3E 20            ld   a,20
 RO18:5191 06 14            ld   b,14
 RO18:5193 0E 10            ld   c,10
 RO18:5195 11 CD 43         ld   de,43CD        // Blunted Explosion
 RO18:5198 C9               ret                 // Prepares for setting up Blunted Explosion sprite, also sets Timer 2 to 19 frames
 RO18:5199 0E 10            ld   c,10
 RO18:519B 06 14            ld   b,14
 RO18:519D 11 C2 43         ld   de,43C2        // Unit explosion horizontal flip
 RO18:51A0 3E 20            ld   a,20
 RO18:51A2 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:51A5 EA D0 C4         ld   (C4D0),a
 RO18:51A8 C9               ret                 // Sets up Unit Explosion Horizontal Flip sprite
 RO18:51A9 0E 10            ld   c,10
 RO18:51AB 06 14            ld   b,14
 RO18:51AD 11 B7 43         ld   de,43B7        // Unit explosion
 RO18:51B0 3E 20            ld   a,20
 RO18:51B2 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:51B5 EA D0 C4         ld   (C4D0),a
 RO18:51B8 C9               ret                 // Sets up Unit Explosion sprite
 RO18:51B9 0E 10            ld   c,10
 RO18:51BB 06 14            ld   b,14
 RO18:51BD 11 A1 43         ld   de,43A1        // Anti-Ship Missile Explosion sprite
 RO18:51C0 3E 20            ld   a,20
 RO18:51C2 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:51C5 EA D0 C4         ld   (C4D0),a
 RO18:51C8 C9               ret                 // Sets up Anti-Ship Missile Explosion sprite
 RO18:51C9 0E 10            ld   c,10
 RO18:51CB 06 14            ld   b,14
 RO18:51CD 11 AC 43         ld   de,43AC        // Red Star VS White Moon Surface-To-Air Explosion
 RO18:51D0 3E 20            ld   a,20
 RO18:51D2 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:51D5 EA D0 C4         ld   (C4D0),a
 RO18:51D8 C9               ret                 // Sets up Red Star VS White Moon Surface-To-Air Explosion sprite
 RO18:51D9 CD 83 51         call 5183           // Prepares for setting up Blunted Explosion sprite, also sets Timer 2 to 19 frames
 RO18:51DC CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:51DF EA D0 C4         ld   (C4D0),a
 RO18:51E2 C9               ret                 // Sets up Blunted Explosion sprite, basic existence timer of 19 frames
 RO18:51E3 AF               xor  a
 RO18:51E4 EA CC C4         ld   (C4CC),a
 RO18:51E7 EA CD C4         ld   (C4CD),a
 RO18:51EA EA CE C4         ld   (C4CE),a
 RO18:51ED EA CF C4         ld   (C4CF),a
 RO18:51F0 EA D5 C4         ld   (C4D5),a
 RO18:51F3 EA D6 C4         ld   (C4D6),a
 RO18:51F6 EA D7 C4         ld   (C4D7),a
 RO18:51F9 EA D3 C4         ld   (C4D3),a
 RO18:51FC 3E 13            ld   a,13
 RO18:51FE EA D4 C4         ld   (C4D4),a       // Timer before sprite expiration: 19 frames
 RO18:5201 FA D0 C4         ld   a,(C4D0)
 RO18:5204 CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:5207 FA D9 C4         ld   a,(C4D9)
 RO18:520A EA AF C4         ld   (C4AF),a
 RO18:520D FA D8 C4         ld   a,(C4D8)
 RO18:5210 EA AD C4         ld   (C4AD),a
 RO18:5213 EF 16 45 48                          // If unit portion needs to be removed due to HP reduction, unit portion gets removed, and A is set to 0; otherwise, A is set to 1
 RO18:5217 FE 00            cp   a,00
 RO18:5219 20 25            jr   nz,5240        // Branches if unit portion didn't need to be removed
 RO18:521B CD 99 51         call 5199           // Sets up Unit Explosion Horizontal Flip sprite
 RO18:521E FA C8 C4         ld   a,(C4C8)
 RO18:5221 C6 08            add  a,08
 RO18:5223 EA C8 C4         ld   (C4C8),a
 RO18:5226 47               ld   b,a
 RO18:5227 FA CA C4         ld   a,(C4CA)
 RO18:522A 4F               ld   c,a
 RO18:522B FA D0 C4         ld   a,(C4D0)
 RO18:522E CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:5231 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:5234 CD CF 48         call 48CF           // Sets up Hit Sound and Quake Effect of given bullet
 RO18:5237 FA DB C4         ld   a,(C4DB)       // Hit Sound
 RO18:523A CD 44 38         call 3844
 RO18:523D C3 8A 02         jp   028A
 RO18:5240 CD D9 51         call 51D9           // Sets up Blunted Explosion sprite, basic existence timer of 19 frames
 RO18:5243 FA C8 C4         ld   a,(C4C8)
 RO18:5246 C6 08            add  a,08
 RO18:5248 EA C8 C4         ld   (C4C8),a
 RO18:524B 47               ld   b,a
 RO18:524C FA CA C4         ld   a,(C4CA)
 RO18:524F 4F               ld   c,a
 RO18:5250 FA D0 C4         ld   a,(C4D0)
 RO18:5253 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:5256 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:5259 CD CF 48         call 48CF           // Sets up Hit Sound and Quake Effect of given bullet
 RO18:525C FA DB C4         ld   a,(C4DB)       // Hit Sound
 RO18:525F CD 44 38         call 3844
 RO18:5262 C3 8A 02         jp   028A           // Animation instruction: finishing explosion going right sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:5265 AF               xor  a
 RO18:5266 EA CC C4         ld   (C4CC),a
 RO18:5269 EA CD C4         ld   (C4CD),a
 RO18:526C EA CE C4         ld   (C4CE),a
 RO18:526F EA CF C4         ld   (C4CF),a
 RO18:5272 EA D5 C4         ld   (C4D5),a
 RO18:5275 EA D6 C4         ld   (C4D6),a
 RO18:5278 EA D7 C4         ld   (C4D7),a
 RO18:527B EA D3 C4         ld   (C4D3),a
 RO18:527E 3E 13            ld   a,13
 RO18:5280 EA D4 C4         ld   (C4D4),a       // Timer before sprite expiration: 19 frames
 RO18:5283 FA D0 C4         ld   a,(C4D0)
 RO18:5286 CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:5289 FA D9 C4         ld   a,(C4D9)
 RO18:528C EA AF C4         ld   (C4AF),a
 RO18:528F FA D8 C4         ld   a,(C4D8)
 RO18:5292 EA AD C4         ld   (C4AD),a
 RO18:5295 EF 16 45 48                          // If unit portion needs to be removed due to HP reduction, unit portion gets removed, and A is set to 0; otherwise, A is set to 1
 RO18:5299 FE 00            cp   a,00
 RO18:529B 20 25            jr   nz,52C2
 RO18:529D CD A9 51         call 51A9           // Sets up Unit Explosion sprite
 RO18:52A0 FA C8 C4         ld   a,(C4C8)
 RO18:52A3 D6 08            sub  a,08
 RO18:52A5 EA C8 C4         ld   (C4C8),a
 RO18:52A8 47               ld   b,a
 RO18:52A9 FA CA C4         ld   a,(C4CA)
 RO18:52AC 4F               ld   c,a
 RO18:52AD FA D0 C4         ld   a,(C4D0)
 RO18:52B0 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:52B3 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:52B6 CD CF 48         call 48CF           // Sets up Hit Sound and Quake Effect of given bullet
 RO18:52B9 FA DB C4         ld   a,(C4DB)       // Hit Sound
 RO18:52BC CD 44 38         call 3844
 RO18:52BF C3 8A 02         jp   028A
 RO18:52C2 CD D9 51         call 51D9           // Sets up Blunted Explosion sprite, basic existence timer of 19 frames
 RO18:52C5 FA C8 C4         ld   a,(C4C8)
 RO18:52C8 D6 08            sub  a,08
 RO18:52CA EA C8 C4         ld   (C4C8),a
 RO18:52CD 47               ld   b,a
 RO18:52CE FA CA C4         ld   a,(C4CA)
 RO18:52D1 4F               ld   c,a
 RO18:52D2 FA D0 C4         ld   a,(C4D0)
 RO18:52D5 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:52D8 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:52DB CD CF 48         call 48CF           // Sets up Hit Sound and Quake Effect of given bullet
 RO18:52DE FA DB C4         ld   a,(C4DB)       // Hit Sound
 RO18:52E1 CD 44 38         call 3844
 RO18:52E4 C3 8A 02         jp   028A           // Animation instruction: finishing explosion going left sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:52E7 AF               xor  a
 RO18:52E8 EA CC C4         ld   (C4CC),a
 RO18:52EB EA CD C4         ld   (C4CD),a
 RO18:52EE EA CE C4         ld   (C4CE),a
 RO18:52F1 EA CF C4         ld   (C4CF),a
 RO18:52F4 EA D5 C4         ld   (C4D5),a
 RO18:52F7 EA D6 C4         ld   (C4D6),a
 RO18:52FA EA D7 C4         ld   (C4D7),a
 RO18:52FD EA D3 C4         ld   (C4D3),a
 RO18:5300 3E 13            ld   a,13
 RO18:5302 EA D4 C4         ld   (C4D4),a       // Timer before sprite expiration: 19 frames
 RO18:5305 FA D0 C4         ld   a,(C4D0)
 RO18:5308 CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:530B FA D9 C4         ld   a,(C4D9)
 RO18:530E EA AF C4         ld   (C4AF),a
 RO18:5311 FA D8 C4         ld   a,(C4D8)
 RO18:5314 EA AD C4         ld   (C4AD),a
 RO18:5317 EF 16 45 48                          // If unit portion needs to be removed due to HP reduction, unit portion gets removed, and A is set to 0; otherwise, A is set to 1
 RO18:531B FE 00            cp   a,00
 RO18:531D 20 20            jr   nz,533F
 RO18:531F CD B9 51         call 51B9           // Sets up Anti-Ship Missile Explosion sprite
 RO18:5322 FA C8 C4         ld   a,(C4C8)
 RO18:5325 47               ld   b,a
 RO18:5326 FA CA C4         ld   a,(C4CA)
 RO18:5329 4F               ld   c,a
 RO18:532A FA D0 C4         ld   a,(C4D0)
 RO18:532D CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:5330 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:5333 CD CF 48         call 48CF           // Sets up Hit Sound and Quake Effect of given bullet
 RO18:5336 FA DB C4         ld   a,(C4DB)       // Hit Sound
 RO18:5339 CD 44 38         call 3844
 RO18:533C C3 8A 02         jp   028A
 RO18:533F CD D9 51         call 51D9           // Sets up Blunted Explosion sprite, basic existence timer of 19 frames
 RO18:5342 FA C8 C4         ld   a,(C4C8)
 RO18:5345 47               ld   b,a
 RO18:5346 FA CA C4         ld   a,(C4CA)
 RO18:5349 4F               ld   c,a
 RO18:534A FA D0 C4         ld   a,(C4D0)
 RO18:534D CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:5350 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:5353 CD CF 48         call 48CF           // Sets up Hit Sound and Quake Effect of given bullet
 RO18:5356 FA DB C4         ld   a,(C4DB)       // Hit Sound
 RO18:5359 CD 44 38         call 3844
 RO18:535C C3 8A 02         jp   028A           // Animation instruction: finishing explosion by Anti-Ship Missile sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect
 RO18:535F AF               xor  a
 RO18:5360 EA CC C4         ld   (C4CC),a
 RO18:5363 EA CD C4         ld   (C4CD),a
 RO18:5366 EA CE C4         ld   (C4CE),a
 RO18:5369 EA CF C4         ld   (C4CF),a
 RO18:536C EA D5 C4         ld   (C4D5),a
 RO18:536F EA D6 C4         ld   (C4D6),a
 RO18:5372 EA D7 C4         ld   (C4D7),a
 RO18:5375 EA D3 C4         ld   (C4D3),a
 RO18:5378 3E 13            ld   a,13
 RO18:537A EA D4 C4         ld   (C4D4),a       // Timer before sprite expiration: 19 frames
 RO18:537D FA D0 C4         ld   a,(C4D0)
 RO18:5380 CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:5383 FA D9 C4         ld   a,(C4D9)
 RO18:5386 EA AF C4         ld   (C4AF),a
 RO18:5389 FA D8 C4         ld   a,(C4D8)
 RO18:538C EA AD C4         ld   (C4AD),a
 RO18:538F EF 16 45 48                          // If unit portion needs to be removed due to HP reduction, unit portion gets removed, and A is set to 0; otherwise, A is set to 1
 RO18:5393 FE 00            cp   a,00
 RO18:5395 20 20            jr   nz,53B7        // Branches if no portion removal
 RO18:5397 CD C9 51         call 51C9           // Sets up Red Star VS White Moon Surface-To-Air Explosion sprite
 RO18:539A FA C8 C4         ld   a,(C4C8)
 RO18:539D 47               ld   b,a
 RO18:539E FA CA C4         ld   a,(C4CA)
 RO18:53A1 4F               ld   c,a
 RO18:53A2 FA D0 C4         ld   a,(C4D0)
 RO18:53A5 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:53A8 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:53AB CD CF 48         call 48CF           // Sets up Hit Sound and Quake Effect of given bullet
 RO18:53AE FA DB C4         ld   a,(C4DB)       // Hit Sound
 RO18:53B1 CD 44 38         call 3844
 RO18:53B4 C3 8A 02         jp   028A
 RO18:53B7 CD D9 51         call 51D9           // Sets up Blunted Explosion sprite, basic existence timer of 19 frames
 RO18:53BA FA C8 C4         ld   a,(C4C8)
 RO18:53BD 47               ld   b,a
 RO18:53BE FA CA C4         ld   a,(C4CA)
 RO18:53C1 4F               ld   c,a
 RO18:53C2 FA D0 C4         ld   a,(C4D0)
 RO18:53C5 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:53C8 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:53CB CD CF 48         call 48CF           // Sets up Hit Sound and Quake Effect of given bullet
 RO18:53CE FA DB C4         ld   a,(C4DB)       // Hit Sound
 RO18:53D1 CD 44 38         call 3844
 RO18:53D4 C3 8A 02         jp   028A           // Animation instruction: finishing explosion by (Red Star) Surface-To-Air sprite, remove unit portion as necessary, lasts 19 frames and sets up Hit Sound and Quake Effect

 RO18:53D7 AF               xor  a
 RO18:53D8 EA 15 C6         ld   (C615),a
 RO18:53DB EA 18 C6         ld   (C618),a
 RO18:53DE C9               ret                 // Blanks $C615 and $C618
 RO18:53DF CD FD 10         call 10FD
 RO18:53E2 38 1B            jr   c,53FF
 RO18:53E4 FE 01            cp   a,01
 RO18:53E6 20 0D            jr   nz,53F5
 RO18:53E8 CD ED 58         call 58ED
 RO18:53EB 3E 01            ld   a,01
 RO18:53ED EA 18 C6         ld   (C618),a
 RO18:53F0 AF               xor  a
 RO18:53F1 EA 15 C6         ld   (C615),a
 RO18:53F4 C9               ret  
 RO18:53F5 CD 30 54         call 5430
 RO18:53F8 AF               xor  a
 RO18:53F9 3E 01            ld   a,01
 RO18:53FB EA 15 C6         ld   (C615),a
 RO18:53FE C9               ret  
 RO18:53FF CD 30 54         call 5430
 RO18:5402 3E 01            ld   a,01
 RO18:5404 EA 14 C6         ld   (C614),a
 RO18:5407 37               scf  
 RO18:5408 C9               ret  
 RO18:5409 FA 15 C6         ld   a,(C615)
 RO18:540C B7               or   a
 RO18:540D 28 1C            jr   z,542B
 RO18:540F 21 18 C6         ld   hl,C618
 RO18:5412 11 18 C6         ld   de,C618
 RO18:5415 0E 02            ld   c,02
 RO18:5417 CD 51 5B         call 5B51
 RO18:541A 38 05            jr   c,5421
 RO18:541C CD DF 59         call 59DF
 RO18:541F 30 0A            jr   nc,542B
 RO18:5421 CD 30 54         call 5430
 RO18:5424 3E 01            ld   a,01
 RO18:5426 EA 14 C6         ld   (C614),a
 RO18:5429 37               scf  
 RO18:542A C9               ret  
 RO18:542B AF               xor  a
 RO18:542C EA 14 C6         ld   (C614),a
 RO18:542F C9               ret  
 RO18:5430 C9               ret  
 RO18:5431 CD AC 05         call 05AC           // Establishes current direct and newly pressed controls, also sets up Soft Reset method
 RO18:5434 F0 90            ld   a,(ff00+90)
 RO18:5436 E6 01            and  a,01           // A
 RO18:5438 20 F6            jr   nz,5430        // Ends immediately if A had been pressed
 RO18:543A CD AC 05         call 05AC           // Establishes current direct and newly pressed controls, also sets up Soft Reset method
 RO18:543D F0 90            ld   a,(ff00+90)
 RO18:543F E6 01            and  a,01           // A
 RO18:5441 20 ED            jr   nz,5430        // Ends immediately if A had been pressed
 RO18:5443 C9               ret  
 RO18:5444 CD E3 58         call 58E3           // IR Port Data Read disabled, LED Off, Receiving IR Signal; ($C901) = -1
 RO18:5447 C9               ret  
 RO18:5448 FA 15 C6         ld   a,(C615)
 RO18:544B B7               or   a
 RO18:544C 20 07            jr   nz,5455
 RO18:544E CD ED 58         call 58ED
 RO18:5451 38 0C            jr   c,545F
 RO18:5453 18 05            jr   545A
 RO18:5455 CD 21 5A         call 5A21
 RO18:5458 38 05            jr   c,545F
 RO18:545A AF               xor  a
 RO18:545B EA 14 C6         ld   (C614),a
 RO18:545E C9               ret  
 RO18:545F CD 30 54         call 5430
 RO18:5462 3E 02            ld   a,02
 RO18:5464 EA 14 C6         ld   (C614),a
 RO18:5467 37               scf  
 RO18:5468 C9               ret  
 RO18:5469 C5               push bc
 RO18:546A F0 82            ld   a,(ff00+82)
 RO18:546C F5               push af
 RO18:546D 3E 04            ld   a,04
 RO18:546F E0 82            ld   (ff00+82),a
 RO18:5471 E0 70            ld   (ff00+70),a
 RO18:5473 CD 81 54         call 5481
 RO18:5476 CB 11            rl   c
 RO18:5478 F1               pop  af
 RO18:5479 E0 82            ld   (ff00+82),a
 RO18:547B E0 70            ld   (ff00+70),a
 RO18:547D CB 19            rr   c
 RO18:547F C1               pop  bc
 RO18:5480 C9               ret  
 RO18:5481 0E 09            ld   c,09
 RO18:5483 21 E5 54         ld   hl,54E5
 RO18:5486 11 6E DB         ld   de,DB6E
 RO18:5489 2A               ldi  a,(hl)
 RO18:548A 12               ld   (de),a
 RO18:548B 13               inc  de
 RO18:548C 0D               dec  c
 RO18:548D 20 FA            jr   nz,5489
 RO18:548F FA 15 C6         ld   a,(C615)
 RO18:5492 B7               or   a
 RO18:5493 20 0D            jr   nz,54A2
 RO18:5495 CD ED 58         call 58ED
 RO18:5498 38 3D            jr   c,54D7
 RO18:549A FA 18 C6         ld   a,(C618)
 RO18:549D B7               or   a
 RO18:549E 28 37            jr   z,54D7
 RO18:54A0 18 1F            jr   54C1
 RO18:54A2 21 6E DB         ld   hl,DB6E
 RO18:54A5 11 77 DB         ld   de,DB77
 RO18:54A8 0E 09            ld   c,09
 RO18:54AA CD C2 5A         call 5AC2
 RO18:54AD 38 28            jr   c,54D7
 RO18:54AF 21 6E DB         ld   hl,DB6E
 RO18:54B2 11 77 DB         ld   de,DB77
 RO18:54B5 0E 09            ld   c,09
 RO18:54B7 CD 51 5B         call 5B51
 RO18:54BA 38 1B            jr   c,54D7
 RO18:54BC CD DF 59         call 59DF
 RO18:54BF 38 16            jr   c,54D7
 RO18:54C1 0E 09            ld   c,09
 RO18:54C3 21 6E DB         ld   hl,DB6E
 RO18:54C6 11 77 DB         ld   de,DB77
 RO18:54C9 1A               ld   a,(de)
 RO18:54CA BE               cp   (hl)
 RO18:54CB 20 14            jr   nz,54E1
 RO18:54CD 13               inc  de
 RO18:54CE 23               inc  hl
 RO18:54CF 0D               dec  c
 RO18:54D0 20 F7            jr   nz,54C9
 RO18:54D2 AF               xor  a
 RO18:54D3 EA 14 C6         ld   (C614),a
 RO18:54D6 C9               ret  
 RO18:54D7 CD 30 54         call 5430
 RO18:54DA 3E 02            ld   a,02
 RO18:54DC EA 14 C6         ld   (C614),a
 RO18:54DF 37               scf  
 RO18:54E0 C9               ret  
 RO18:54E1 3E 03            ld   a,03
 RO18:54E3 18 F7            jr   54DC
 RO18:54E5 47               ld   b,a
 RO18:54E6 42               ld   b,d
 RO18:54E7 6F               ld   l,a
 RO18:54E8 79               ld   a,c
 RO18:54E9 57               ld   d,a
 RO18:54EA 41               ld   b,c
 RO18:54EB 52               ld   d,d
 RO18:54EC 53               ld   d,e
 RO18:54ED 33               inc  sp
 RO18:54EE EA 16 C6         ld   (C616),a
 RO18:54F1 FA 15 C6         ld   a,(C615)
 RO18:54F4 B7               or   a
 RO18:54F5 20 0D            jr   nz,5504
 RO18:54F7 CD ED 58         call 58ED
 RO18:54FA 38 40            jr   c,553C
 RO18:54FC FA 18 C6         ld   a,(C618)
 RO18:54FF B7               or   a
 RO18:5500 28 3A            jr   z,553C
 RO18:5502 18 1F            jr   5523
 RO18:5504 21 16 C6         ld   hl,C616
 RO18:5507 11 17 C6         ld   de,C617
 RO18:550A 0E 01            ld   c,01
 RO18:550C CD C2 5A         call 5AC2
 RO18:550F 38 2B            jr   c,553C
 RO18:5511 21 16 C6         ld   hl,C616
 RO18:5514 11 17 C6         ld   de,C617
 RO18:5517 0E 01            ld   c,01
 RO18:5519 CD 51 5B         call 5B51
 RO18:551C 38 1E            jr   c,553C
 RO18:551E CD DF 59         call 59DF
 RO18:5521 38 19            jr   c,553C
 RO18:5523 1E 00            ld   e,00
 RO18:5525 FA 16 C6         ld   a,(C616)
 RO18:5528 21 17 C6         ld   hl,C617
 RO18:552B BE               cp   (hl)
 RO18:552C 28 08            jr   z,5536
 RO18:552E 38 04            jr   c,5534
 RO18:5530 1E 01            ld   e,01
 RO18:5532 18 02            jr   5536
 RO18:5534 1E FF            ld   e,FF
 RO18:5536 AF               xor  a
 RO18:5537 EA 14 C6         ld   (C614),a
 RO18:553A 7B               ld   a,e
 RO18:553B C9               ret  
 RO18:553C CD 30 54         call 5430
 RO18:553F 3E 02            ld   a,02
 RO18:5541 EA 14 C6         ld   (C614),a
 RO18:5544 37               scf  
 RO18:5545 C9               ret  
 RO18:5546 F0 82            ld   a,(ff00+82)
 RO18:5548 F5               push af
 RO18:5549 78               ld   a,b
 RO18:554A E0 82            ld   (ff00+82),a
 RO18:554C E0 70            ld   (ff00+70),a
 RO18:554E FA 15 C6         ld   a,(C615)
 RO18:5551 B7               or   a
 RO18:5552 28 7A            jr   z,55CE
 RO18:5554 79               ld   a,c
 RO18:5555 B7               or   a
 RO18:5556 28 05            jr   z,555D
 RO18:5558 3E 80            ld   a,80
 RO18:555A B9               cp   c
 RO18:555B 30 21            jr   nc,557E
 RO18:555D C5               push bc
 RO18:555E D5               push de
 RO18:555F E5               push hl
 RO18:5560 0E 80            ld   c,80
 RO18:5562 CD 51 5B         call 5B51
 RO18:5565 E1               pop  hl
 RO18:5566 D1               pop  de
 RO18:5567 C1               pop  bc
 RO18:5568 38 79            jr   c,55E3
 RO18:556A 79               ld   a,c
 RO18:556B D6 80            sub  a,80
 RO18:556D 4F               ld   c,a
 RO18:556E 3E 80            ld   a,80
 RO18:5570 85               add  l
 RO18:5571 6F               ld   l,a
 RO18:5572 3E 00            ld   a,00
 RO18:5574 8C               adc  h
 RO18:5575 67               ld   h,a
 RO18:5576 3E 80            ld   a,80
 RO18:5578 83               add  e
 RO18:5579 5F               ld   e,a
 RO18:557A 3E 00            ld   a,00
 RO18:557C 8A               adc  d
 RO18:557D 57               ld   d,a
 RO18:557E CD 51 5B         call 5B51
 RO18:5581 38 60            jr   c,55E3
 RO18:5583 CD DF 59         call 59DF
 RO18:5586 38 5B            jr   c,55E3
 RO18:5588 18 4F            jr   55D9
 RO18:558A F0 82            ld   a,(ff00+82)
 RO18:558C F5               push af
 RO18:558D 78               ld   a,b
 RO18:558E E0 82            ld   (ff00+82),a
 RO18:5590 E0 70            ld   (ff00+70),a
 RO18:5592 FA 15 C6         ld   a,(C615)
 RO18:5595 B7               or   a
 RO18:5596 28 36            jr   z,55CE
 RO18:5598 79               ld   a,c
 RO18:5599 B7               or   a
 RO18:559A 28 05            jr   z,55A1
 RO18:559C 3E 80            ld   a,80
 RO18:559E B9               cp   c
 RO18:559F 30 21            jr   nc,55C2
 RO18:55A1 C5               push bc
 RO18:55A2 D5               push de
 RO18:55A3 E5               push hl
 RO18:55A4 0E 80            ld   c,80
 RO18:55A6 CD C2 5A         call 5AC2
 RO18:55A9 E1               pop  hl
 RO18:55AA D1               pop  de
 RO18:55AB C1               pop  bc
 RO18:55AC 38 35            jr   c,55E3
 RO18:55AE 79               ld   a,c
 RO18:55AF D6 80            sub  a,80
 RO18:55B1 4F               ld   c,a
 RO18:55B2 3E 80            ld   a,80
 RO18:55B4 85               add  l
 RO18:55B5 6F               ld   l,a
 RO18:55B6 3E 00            ld   a,00
 RO18:55B8 8C               adc  h
 RO18:55B9 67               ld   h,a
 RO18:55BA 3E 80            ld   a,80
 RO18:55BC 83               add  e
 RO18:55BD 5F               ld   e,a
 RO18:55BE 3E 00            ld   a,00
 RO18:55C0 8A               adc  d
 RO18:55C1 57               ld   d,a
 RO18:55C2 CD C2 5A         call 5AC2
 RO18:55C5 38 1C            jr   c,55E3
 RO18:55C7 CD DF 59         call 59DF
 RO18:55CA 38 17            jr   c,55E3
 RO18:55CC 18 0B            jr   55D9
 RO18:55CE CD ED 58         call 58ED
 RO18:55D1 38 10            jr   c,55E3
 RO18:55D3 FA 18 C6         ld   a,(C618)
 RO18:55D6 B7               or   a
 RO18:55D7 28 0A            jr   z,55E3
 RO18:55D9 F1               pop  af
 RO18:55DA E0 82            ld   (ff00+82),a
 RO18:55DC E0 70            ld   (ff00+70),a
 RO18:55DE AF               xor  a
 RO18:55DF EA 14 C6         ld   (C614),a
 RO18:55E2 C9               ret  
 RO18:55E3 CD 30 54         call 5430
 RO18:55E6 F1               pop  af
 RO18:55E7 E0 82            ld   (ff00+82),a
 RO18:55E9 E0 70            ld   (ff00+70),a
 RO18:55EB 3E 02            ld   a,02
 RO18:55ED EA 14 C6         ld   (C614),a
 RO18:55F0 37               scf  
 RO18:55F1 C9               ret  
 RO18:55F2 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO18:55F5 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO18:55F8 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO18:55FB 3E FC            ld   a,FC
 RO18:55FD E0 95            ld   (ff00+95),a
 RO18:55FF AF               xor  a
 RO18:5600 E0 96            ld   (ff00+96),a
 RO18:5602 EF 10 A8 68                          // Sets up basic covered graphics values
 RO18:5606 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO18:560A CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO18:560D CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO18:5610 3E 00            ld   a,00
 RO18:5612 E0 83            ld   (ff00+83),a
 RO18:5614 E0 4F            ld   (ff00+4F),a
 RO18:5616 3E 00            ld   a,00
 RO18:5618 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO18:561C 01 00 00         ld   bc,0000
 RO18:561F 11 05 13         ld   de,1305        // 0~18,0~4
 RO18:5622 EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:5626 01 0D 00         ld   bc,000D
 RO18:5629 11 05 13         ld   de,1305        // 0~18,13~17
 RO18:562C EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:5630 F0 83            ld   a,(ff00+83)
 RO18:5632 F5               push af
 RO18:5633 3E 00            ld   a,00
 RO18:5635 E0 83            ld   (ff00+83),a
 RO18:5637 E0 4F            ld   (ff00+4F),a
 RO18:5639 AF               xor  a
 RO18:563A 01 01 01         ld   bc,0101
 RO18:563D 11 03 11         ld   de,1103
 RO18:5640 EF 15 D3 6A                          // Empties VRA0 map tiles in rectangle 1~17,1~3
 RO18:5644 3E 01            ld   a,01
 RO18:5646 E0 83            ld   (ff00+83),a
 RO18:5648 E0 4F            ld   (ff00+4F),a
 RO18:564A AF               xor  a
 RO18:564B 01 01 01         ld   bc,0101
 RO18:564E 11 03 11         ld   de,1103
 RO18:5651 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 1~17,1~3
 RO18:5655 3E 00            ld   a,00
 RO18:5657 E0 83            ld   (ff00+83),a
 RO18:5659 E0 4F            ld   (ff00+4F),a
 RO18:565B AF               xor  a
 RO18:565C 01 0E 01         ld   bc,010E
 RO18:565F 11 03 11         ld   de,1103
 RO18:5662 EF 15 D3 6A                          // Empties VRA0 map tiles in rectangle 1~17,14~16
 RO18:5666 3E 01            ld   a,01
 RO18:5668 E0 83            ld   (ff00+83),a
 RO18:566A E0 4F            ld   (ff00+4F),a
 RO18:566C AF               xor  a
 RO18:566D 01 0E 01         ld   bc,010E
 RO18:5670 11 03 11         ld   de,1103
 RO18:5673 EF 15 D3 6A                          // Empties VRA0 map tiles in rectangle 1~17,14~16
 RO18:5677 3E 00            ld   a,00
 RO18:5679 E0 83            ld   (ff00+83),a
 RO18:567B E0 4F            ld   (ff00+4F),a
 RO18:567D 01 02 01         ld   bc,0102
 RO18:5680 CD D4 0E         call 0ED4           // HL = $9841
 RO18:5683 11 B0 56         ld   de,56B0
 RO18:5686 CD 63 0F         call 0F63           // (HL) holds text starting at (DE)
 RO18:5689 01 03 01         ld   bc,0103
 RO18:568C CD D4 0E         call 0ED4           // HL = $9861
 RO18:568F 11 C2 56         ld   de,56C2
 RO18:5692 CD 63 0F         call 0F63           // (HL) holds text starting at (DE)
 RO18:5695 3E 01            ld   a,01
 RO18:5697 E0 83            ld   (ff00+83),a
 RO18:5699 E0 4F            ld   (ff00+4F),a
 RO18:569B 21 00 92         ld   hl,9200
 RO18:569E EF 0C 28 58                          // Meter graphics set in VRA1(9200~927F)
 RO18:56A2 3E 01            ld   a,01
 RO18:56A4 CD 90 58         call 5890           // 20 max value meter graphics established at Coordinates 10,16 (A is the current fill value)
 RO18:56A7 CD BD 09         call 09BD           // Updates BG Palettes to $0A00 table
 RO18:56AA F1               pop  af
 RO18:56AB E0 83            ld   (ff00+83),a
 RO18:56AD E0 4F            ld   (ff00+4F),a
 RO18:56AF C9               ret  

 RO18:56B0 6E 67 8E 62 6E 8D 72 63 6C 8D 9F 79 14 CF 2D B8 60 00    // IR Signal Up Mark...
 RO18:56C2 81 66 62 61 8C 6E 73 71 66 9A 69 73 68 98 6B 62 2E 00    // ...please face close.

 RO18:56D4 F0 82            ld   a,(ff00+82)
 RO18:56D6 F5               push af
 RO18:56D7 3E 04            ld   a,04
 RO18:56D9 E0 82            ld   (ff00+82),a
 RO18:56DB E0 70            ld   (ff00+70),a
 RO18:56DD 7C               ld   a,h
 RO18:56DE B7               or   a
 RO18:56DF 20 0A            jr   nz,56EB
 RO18:56E1 29               add  hl,hl
 RO18:56E2 11 22 57         ld   de,5722
 RO18:56E5 19               add  hl,de
 RO18:56E6 2A               ldi  a,(hl)
 RO18:56E7 66               ld   h,(hl)
 RO18:56E8 6F               ld   l,a
 RO18:56E9 06 18            ld   b,18
 RO18:56EB 0E 11            ld   c,11
 RO18:56ED 11 5A DB         ld   de,DB5A
 RO18:56F0 CD A6 09         call 09A6           // A = B:(HL)
 RO18:56F3 B7               or   a
 RO18:56F4 28 03            jr   z,56F9
 RO18:56F6 23               inc  hl
 RO18:56F7 18 02            jr   56FB
 RO18:56F9 3E 20            ld   a,20
 RO18:56FB 12               ld   (de),a
 RO18:56FC 13               inc  de
 RO18:56FD 0D               dec  c
 RO18:56FE 20 F0            jr   nz,56F0        // 17 cycles
 RO18:5700 F0 83            ld   a,(ff00+83)
 RO18:5702 F5               push af
 RO18:5703 3E 00            ld   a,00
 RO18:5705 E0 83            ld   (ff00+83),a
 RO18:5707 E0 4F            ld   (ff00+4F),a
 RO18:5709 AF               xor  a
 RO18:570A 12               ld   (de),a
 RO18:570B 01 01 01         ld   bc,0101
 RO18:570E CD D4 0E         call 0ED4           // HL = $9821
 RO18:5711 11 5A DB         ld   de,DB5A
 RO18:5714 CD 63 0F         call 0F63           // (HL) holds text starting at (DE)
 RO18:5717 F1               pop  af
 RO18:5718 E0 83            ld   (ff00+83),a
 RO18:571A E0 4F            ld   (ff00+4F),a
 RO18:571C F1               pop  af
 RO18:571D E0 82            ld   (ff00+82),a
 RO18:571F E0 70            ld   (ff00+70),a
 RO18:5721 C9               ret                 // Inserts text of online communication status at 1,1 (L is which message to use if H is 0; if H isn't 0, HL is coordinates of message in ROM Block B)

 RO18:5722 2C 57                                // Preparing
 RO18:5724 3B 57                                // Waiting
 RO18:5726 49 57                                // Signal is here
 RO18:5728 58 57                                // Can't connect
 RO18:572A 66 57                                // Signal error

 RO18:572C 6E 72 97 68               ld   l,b
 RO18:5730 94 AD 8D 9E               sbc  (hl)
 RO18:5734 71 AD 63 9B 6D 2E 00

 RO18:573B 6E 72 97 68               ld   l,b
 RO18:573F 70 62 67               ld   h,a
 RO18:5742 71 AD 63 9B 6D 2E 00

 RO18:5749 70 98 62 7F               ld   a,a
 RO18:574D 72 63 6C 8D               adc  l
 RO18:5751 71 AD 63 9B 6D 2E 00

 RO18:5758 6E 72 97 68               ld   l,b
 RO18:575C 9B 67 7F 6E 8D               adc  l
 RO18:5761 9B 6C 70 2E 00

 RO18:5766 72 63 6C 8D               adc  l
 RO18:576A B4 D7 2D 8E               adc  (hl)
 RO18:576E 7A AF               xor  a
 RO18:5770 6E 62               ld   h,d
 RO18:5772 6C 7F 6C 70 2E 00


 RO18:5778 F0 82            ld   a,(ff00+82)
 RO18:577A F5               push af
 RO18:577B 3E 04            ld   a,04
 RO18:577D E0 82            ld   (ff00+82),a
 RO18:577F E0 70            ld   (ff00+70),a
 RO18:5781 7C               ld   a,h
 RO18:5782 B7               or   a
 RO18:5783 20 0A            jr   nz,578F
 RO18:5785 29               add  hl,hl
 RO18:5786 11 0A 58         ld   de,580A
 RO18:5789 19               add  hl,de
 RO18:578A 2A               ldi  a,(hl)
 RO18:578B 66               ld   h,(hl)
 RO18:578C 6F               ld   l,a
 RO18:578D 06 18            ld   b,18
 RO18:578F 78               ld   a,b
 RO18:5790 EA 6D DB         ld   (DB6D),a
 RO18:5793 06 02            ld   b,02
 RO18:5795 11 5A DB         ld   de,DB5A        // Bigger loop begins here
 RO18:5798 0E 11            ld   c,11
 RO18:579A C5               push bc
 RO18:579B FA 6D DB         ld   a,(DB6D)
 RO18:579E 47               ld   b,a
 RO18:579F CD A6 09         call 09A6           // A = B:(HL)
 RO18:57A2 C1               pop  bc
 RO18:57A3 B7               or   a
 RO18:57A4 28 2D            jr   z,57D3
 RO18:57A6 C5               push bc             // Loop begins here
 RO18:57A7 FA 6D DB         ld   a,(DB6D)
 RO18:57AA 47               ld   b,a
 RO18:57AB CD A6 09         call 09A6           // A = B:(HL)
 RO18:57AE C1               pop  bc
 RO18:57AF FE 00            cp   a,00
 RO18:57B1 28 07            jr   z,57BA
 RO18:57B3 FE 01            cp   a,01
 RO18:57B5 28 03            jr   z,57BA
 RO18:57B7 23               inc  hl
 RO18:57B8 18 02            jr   57BC
 RO18:57BA 3E 20            ld   a,20
 RO18:57BC 12               ld   (de),a
 RO18:57BD 13               inc  de
 RO18:57BE 0D               dec  c
 RO18:57BF 20 E5            jr   nz,57A6
 RO18:57C1 AF               xor  a
 RO18:57C2 12               ld   (de),a
 RO18:57C3 C5               push bc
 RO18:57C4 FA 6D DB         ld   a,(DB6D)
 RO18:57C7 47               ld   b,a
 RO18:57C8 CD A6 09         call 09A6           // A = B:(HL)
 RO18:57CB C1               pop  bc
 RO18:57CC FE 01            cp   a,01
 RO18:57CE 20 0C            jr   nz,57DC
 RO18:57D0 23               inc  hl
 RO18:57D1 18 09            jr   57DC
 RO18:57D3 3E 20            ld   a,20
 RO18:57D5 12               ld   (de),a
 RO18:57D6 13               inc  de
 RO18:57D7 0D               dec  c
 RO18:57D8 20 FB            jr   nz,57D5
 RO18:57DA AF               xor  a
 RO18:57DB 12               ld   (de),a
 RO18:57DC C5               push bc
 RO18:57DD D5               push de
 RO18:57DE E5               push hl
 RO18:57DF F0 83            ld   a,(ff00+83)
 RO18:57E1 F5               push af
 RO18:57E2 3E 00            ld   a,00
 RO18:57E4 E0 83            ld   (ff00+83),a
 RO18:57E6 E0 4F            ld   (ff00+4F),a
 RO18:57E8 3E 02            ld   a,02
 RO18:57EA 90               sub  b
 RO18:57EB C6 0E            add  a,0E
 RO18:57ED 4F               ld   c,a
 RO18:57EE 06 01            ld   b,01
 RO18:57F0 CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO18:57F3 11 5A DB         ld   de,DB5A
 RO18:57F6 CD 63 0F         call 0F63           // (HL) holds text starting at (DE)
 RO18:57F9 F1               pop  af
 RO18:57FA E0 83            ld   (ff00+83),a
 RO18:57FC E0 4F            ld   (ff00+4F),a
 RO18:57FE E1               pop  hl
 RO18:57FF D1               pop  de
 RO18:5800 C1               pop  bc
 RO18:5801 05               dec  b
 RO18:5802 20 91            jr   nz,5795
 RO18:5804 F1               pop  af
 RO18:5805 E0 82            ld   (ff00+82),a
 RO18:5807 E0 70            ld   (ff00+70),a
 RO18:5809 C9               ret                 // Inserts text of online communication button check message at 14,1 (L is which message to use if H is 0; if H isn't 0, HL is coordinates of message in ROM Block B)

 RO18:580A 12 58                                // Ready?
 RO18:580C 30 58                                // Waiting
 RO18:580E 4E 58                                // Recommence (...?)
 RO18:5810 70 58                                // Same as above

 RO18:5812 94 AD 8D 9E               sbc  (hl)
 RO18:5816 8E               adc  (hl)
 RO18:5817 9B 67               ld   h,a
 RO18:5819 70               ld   (hl),b
 RO18:581A 87               add  a
 RO18:581B 2C               inc  l
 RO18:581C 9C 71 87 66               ld   h,(hl)
 RO18:5820 8E 01
 RO18:5822 41 F1 C0 DD               -    
 RO18:5826 60               ld   h,b
 RO18:5827 65 6C 73               ld   (hl),e
 RO18:582A 68 98 6B 62               ld   h,d
 RO18:582E 2E 00

 RO18:5830 6C 9D 87 68               ld   l,b
 RO18:5834 65 7F               ld   a,a
 RO18:5836 71               ld   (hl),c
 RO18:5837 68 98 6B 62               ld   h,d
 RO18:583B 2E 01
 RO18:583D 41 F1 C0 DD               -    
 RO18:5841 60               ld   h,b
 RO18:5842 65 6D               ld   l,l
 RO18:5844 74               ld   (hl),h
 RO18:5845 71 AD 63 6C               ld   l,h
 RO18:5849 6C               ld   l,h
 RO18:584A 7F 6D               ld   l,l
 RO18:584C 2E 00

 RO18:584E 6B 62 6C AE               xor  (hl)
 RO18:5852 66 87               add  a
 RO18:5854 84 88 75               ld   (hl),l
 RO18:5857 65 6C 73               ld   (hl),e
 RO18:585A 68 98 6B 62               ld   h,d
 RO18:585E 2E 01
 RO18:5860 75 76 66               ld   h,(hl)
 RO18:5863 F1 C0 DD               -    
 RO18:5866 60               ld   h,b
 RO18:5867 65 6C 73               ld   (hl),e
 RO18:586A 68 98 6B 62               ld   h,d
 RO18:586E 2E 00

 RO18:5870 6B 62 6C AE               xor  (hl)
 RO18:5874 66 87               add  a
 RO18:5876 84 88 75               ld   (hl),l
 RO18:5879 65 6C 73               ld   (hl),e
 RO18:587C 68 98               sbc  b
 RO18:587E 6B 62               ld   h,d
 RO18:5880 2E 01
 RO18:5882 41 F1 C0 DD               -    
 RO18:5886 60               ld   h,b
 RO18:5887 65 6C 73               ld   (hl),e
 RO18:588A 68 98 6B 62               ld   h,d
 RO18:588E 2E 00

 RO18:5890 E5               push hl
 RO18:5891 D5               push de
 RO18:5892 01 20 14         ld   bc,1420
 RO18:5895 21 0A 9A         ld   hl,9A0A        // A, 20, 32, D, E, coordinates 10,16
 RO18:5898 EF 0C 36 58                          // Meter graphics established  (A is fill value, B is max value, C is first used potential character, HL is meter starting location)
 RO18:589C F0 83            ld   a,(ff00+83)
 RO18:589E F5               push af
 RO18:589F 3E 01            ld   a,01
 RO18:58A1 E0 83            ld   (ff00+83),a
 RO18:58A3 E0 4F            ld   (ff00+4F),a
 RO18:58A5 3E 08            ld   a,08
 RO18:58A7 21 0A 9A         ld   hl,9A0A
 RO18:58AA 01 08 00         ld   bc,0008
 RO18:58AD CD 84 3B         call 3B84           // VRA1($9A0A ~ $9A11) = 8 (Coordinates: 10~17,16)
 RO18:58B0 F1               pop  af
 RO18:58B1 E0 83            ld   (ff00+83),a
 RO18:58B3 E0 4F            ld   (ff00+4F),a
 RO18:58B5 D1               pop  de
 RO18:58B6 E1               pop  hl
 RO18:58B7 C9               ret                 // 20 max value meter graphics established at Coordinates 10,16 (A is the current fill value)
 RO18:58B8 EA AB FF         ld   (FFAB),a
 RO18:58BB EA 00 40         ld   (4000),a
 RO18:58BE C9               ret  
 RO18:58BF 0E 56            ld   c,56
 RO18:58C1 CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:58C4 FA 09 C9         ld   a,(C909)
 RO18:58C7 CB 47            bit  0,a            // A Button?
 RO18:58C9 20 05            jr   nz,58D0
 RO18:58CB F2               ld   a,(ff00+c)
 RO18:58CC CB 4F            bit  1,a
 RO18:58CE 20 F1            jr   nz,58C1
 RO18:58D0 37               scf  
 RO18:58D1 C9               ret  
 RO18:58D2 AF               xor  a
 RO18:58D3 C9               ret  
 RO18:58D4 F3               di   
 RO18:58D5 F0 56            ld   a,(ff00+56)
 RO18:58D7 E6 C0            and  a,C0
 RO18:58D9 FE C0            cp   a,C0
 RO18:58DB C8               ret  z              // End immediately if IR Port Data Read is already enabled
 RO18:58DC CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:58DF CD 14 12         call 1214           // ($C902) 8 byte holds: 6/14, 8/20, 2/8, 4/13, 5/12, 110/220, 0, 0 (Normal Speed uses first value, Double Speed uses second)
 RO18:58E2 C9               ret                 // Disables Interrupt, makes sure that IR Port Data Read is enabled; if it needs to, ($C900) 10 byte holds 1, -1, 6/14, 8/20, 2/8, 4/13, 5/12, 110/220, 0, 0 (Normal Speed uses first value, Double Speed uses second)
 RO18:58E3 3E 00            ld   a,00
 RO18:58E5 E0 56            ld   (ff00+56),a    // Data Read disabled, LED Off, Receiving IR signal
 RO18:58E7 C3 5A 12         jp   125A           // Ending with IR Port Data Read disabled, LED Off, Receiving IR Signal; ($C901) = -1
 RO18:58EA C9               ret  
 RO18:58EB FB               ei   
 RO18:58EC C9               ret  
 RO18:58ED CD D4 58         call 58D4           // Disables Interrupt, makes sure that IR Port Data Read is enabled; if it needs to, ($C900) 10 byte holds 1, -1, 6/14, 8/20, 2/8, 4/13, 5/12, 110/220, 0, 0 (Normal Speed uses first value, Double Speed uses second)
 RO18:58F0 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:58F3 CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:58F6 FA 09 C9         ld   a,(C909)
 RO18:58F9 CB 47            bit  0,a            // A Button?
 RO18:58FB 20 36            jr   nz,5933
 RO18:58FD CD C3 12         call 12C3
 RO18:5900 FA 01 C9         ld   a,(C901)
 RO18:5903 FE 8B            cp   a,8B
 RO18:5905 20 EC            jr   nz,58F3
 RO18:5907 21 EC C8         ld   hl,C8EC
 RO18:590A 06 08            ld   b,08
 RO18:590C CD 3B 14         call 143B
 RO18:590F FA 01 C9         ld   a,(C901)
 RO18:5912 FE 8B            cp   a,8B
 RO18:5914 20 DA            jr   nz,58F0
 RO18:5916 CD 2A 15         call 152A
 RO18:5919 FA 01 C9         ld   a,(C901)
 RO18:591C FE 8B            cp   a,8B
 RO18:591E 20 D0            jr   nz,58F0
 RO18:5920 FA EC C8         ld   a,(C8EC)
 RO18:5923 FE 0D            cp   a,0D
 RO18:5925 30 C9            jr   nc,58F0
 RO18:5927 21 44 59         ld   hl,5944
 RO18:592A CD 39 59         call 5939
 RO18:592D 30 C1            jr   nc,58F0
 RO18:592F 37               scf  
 RO18:5930 C9               ret  
 RO18:5931 37               scf  
 RO18:5932 C9               ret  
 RO18:5933 CD EB 58         call 58EB
 RO18:5936 AF               xor  a
 RO18:5937 37               scf  
 RO18:5938 C9               ret  
 RO18:5939 87               add  a
 RO18:593A 85               add  l
 RO18:593B 6F               ld   l,a            // L += 2A
 RO18:593C 3E 00            ld   a,00
 RO18:593E 8C               adc  h
 RO18:593F 67               ld   h,a            // HL += 2A
 RO18:5940 2A               ldi  a,(hl)
 RO18:5941 66               ld   h,(hl)
 RO18:5942 6F               ld   l,a
 RO18:5943 E9               jp   hl

 RO18:5944 5E 59               ld   e,c
 RO18:5946 64 59               ld   e,c
 RO18:5948 5E 59               ld   e,c
 RO18:594A 5E 59               ld   e,c
 RO18:594C 5E 59               ld   e,c
 RO18:594E 5E 59               ld   e,c
 RO18:5950 5E 59               ld   e,c
 RO18:5952 5E 59               ld   e,c
 RO18:5954 69 59               ld   e,c
 RO18:5956 5E 59               ld   e,c
 RO18:5958 5E 59               ld   e,c
 RO18:595A A4 59               ld   e,c
 RO18:595C 5E 59

 RO18:595E CD EB 58         call 58EB
 RO18:5961 E1               pop  hl
 RO18:5962 B7               or   a
 RO18:5963 C9               ret  
 RO18:5964 CD A4 59         call 59A4
 RO18:5967 18 F5            jr   595E
 RO18:5969 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:596C CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:596F FA 09 C9         ld   a,(C909)
 RO18:5972 CB 47            bit  0,a            // A Button?
 RO18:5974 20 2C            jr   nz,59A2
 RO18:5976 CD 02 13         call 1302
 RO18:5979 FA 01 C9         ld   a,(C901)
 RO18:597C FE 8B            cp   a,8B
 RO18:597E 20 EC            jr   nz,596C
 RO18:5980 FA EE C8         ld   a,(C8EE)
 RO18:5983 6F               ld   l,a
 RO18:5984 FA EF C8         ld   a,(C8EF)
 RO18:5987 67               ld   h,a
 RO18:5988 FA F2 C8         ld   a,(C8F2)
 RO18:598B 47               ld   b,a
 RO18:598C CD 57 13         call 1357
 RO18:598F FA 01 C9         ld   a,(C901)
 RO18:5992 FE 8B            cp   a,8B
 RO18:5994 20 D3            jr   nz,5969
 RO18:5996 CD 25 15         call 1525
 RO18:5999 FA 01 C9         ld   a,(C901)
 RO18:599C FE 8B            cp   a,8B
 RO18:599E 20 C9            jr   nz,5969
 RO18:59A0 AF               xor  a
 RO18:59A1 C9               ret  
 RO18:59A2 37               scf  
 RO18:59A3 C9               ret  
 RO18:59A4 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:59A7 CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:59AA FA 09 C9         ld   a,(C909)
 RO18:59AD CB 47            bit  0,a            // A Button?
 RO18:59AF 20 2C            jr   nz,59DD
 RO18:59B1 CD C3 12         call 12C3
 RO18:59B4 FA 01 C9         ld   a,(C901)
 RO18:59B7 FE 8B            cp   a,8B
 RO18:59B9 20 EC            jr   nz,59A7
 RO18:59BB FA F0 C8         ld   a,(C8F0)
 RO18:59BE 6F               ld   l,a
 RO18:59BF FA F1 C8         ld   a,(C8F1)
 RO18:59C2 67               ld   h,a
 RO18:59C3 FA F2 C8         ld   a,(C8F2)
 RO18:59C6 47               ld   b,a
 RO18:59C7 CD 3B 14         call 143B
 RO18:59CA FA 01 C9         ld   a,(C901)
 RO18:59CD FE 8B            cp   a,8B
 RO18:59CF 20 D3            jr   nz,59A4
 RO18:59D1 CD 2A 15         call 152A
 RO18:59D4 FA 01 C9         ld   a,(C901)
 RO18:59D7 FE 8B            cp   a,8B
 RO18:59D9 20 C9            jr   nz,59A4
 RO18:59DB AF               xor  a
 RO18:59DC C9               ret  
 RO18:59DD 37               scf  
 RO18:59DE C9               ret  
 RO18:59DF CD D4 58         call 58D4           // Disables Interrupt, makes sure that IR Port Data Read is enabled; if it needs to, ($C900) 10 byte holds 1, -1, 6/14, 8/20, 2/8, 4/13, 5/12, 110/220, 0, 0 (Normal Speed uses first value, Double Speed uses second)
 RO18:59E2 3E 00            ld   a,00
 RO18:59E4 CD AA 5A         call 5AAA
 RO18:59E7 CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:59EA FA 09 C9         ld   a,(C909)
 RO18:59ED CB 47            bit  0,a            // A Button?
 RO18:59EF 20 29            jr   nz,5A1A
 RO18:59F1 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:59F4 CD 39 5B         call 5B39
 RO18:59F7 FA 01 C9         ld   a,(C901)
 RO18:59FA FE 8B            cp   a,8B
 RO18:59FC 20 1C            jr   nz,5A1A
 RO18:59FE 21 EC C8         ld   hl,C8EC
 RO18:5A01 06 08            ld   b,08
 RO18:5A03 CD 57 13         call 1357
 RO18:5A06 FA 01 C9         ld   a,(C901)
 RO18:5A09 FE 8B            cp   a,8B
 RO18:5A0B 20 DA            jr   nz,59E7
 RO18:5A0D CD 25 15         call 1525
 RO18:5A10 FA 01 C9         ld   a,(C901)
 RO18:5A13 FE 8B            cp   a,8B
 RO18:5A15 20 D0            jr   nz,59E7
 RO18:5A17 AF               xor  a
 RO18:5A18 18 01            jr   5A1B
 RO18:5A1A 37               scf  
 RO18:5A1B F5               push af
 RO18:5A1C CD EB 58         call 58EB
 RO18:5A1F F1               pop  af
 RO18:5A20 C9               ret  
 RO18:5A21 3E 55            ld   a,55
 RO18:5A23 EA F4 C8         ld   (C8F4),a
 RO18:5A26 3E AA            ld   a,AA
 RO18:5A28 EA F5 C8         ld   (C8F5),a
 RO18:5A2B CD D4 58         call 58D4           // Disables Interrupt, makes sure that IR Port Data Read is enabled; if it needs to, ($C900) 10 byte holds 1, -1, 6/14, 8/20, 2/8, 4/13, 5/12, 110/220, 0, 0 (Normal Speed uses first value, Double Speed uses second)
 RO18:5A2E 21 F4 C8         ld   hl,C8F4
 RO18:5A31 11 F4 C8         ld   de,C8F4
 RO18:5A34 0E 02            ld   c,02
 RO18:5A36 3E 01            ld   a,01
 RO18:5A38 CD AA 5A         call 5AAA
 RO18:5A3B CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:5A3E FA 09 C9         ld   a,(C909)
 RO18:5A41 CB 47            bit  0,a            // A Button?
 RO18:5A43 20 61            jr   nz,5AA6
 RO18:5A45 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:5A48 CD 39 5B         call 5B39
 RO18:5A4B FA 01 C9         ld   a,(C901)
 RO18:5A4E FE 8B            cp   a,8B
 RO18:5A50 20 54            jr   nz,5AA6
 RO18:5A52 21 EC C8         ld   hl,C8EC
 RO18:5A55 06 08            ld   b,08
 RO18:5A57 CD 57 13         call 1357
 RO18:5A5A FA 01 C9         ld   a,(C901)
 RO18:5A5D FE 8B            cp   a,8B
 RO18:5A5F 20 45            jr   nz,5AA6
 RO18:5A61 CD 25 15         call 1525
 RO18:5A64 FA 01 C9         ld   a,(C901)
 RO18:5A67 FE 8B            cp   a,8B
 RO18:5A69 20 3B            jr   nz,5AA6
 RO18:5A6B CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:5A6E FA 09 C9         ld   a,(C909)
 RO18:5A71 CB 47            bit  0,a            // A Button?
 RO18:5A73 20 31            jr   nz,5AA6
 RO18:5A75 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:5A78 CD 02 13         call 1302
 RO18:5A7B FA 01 C9         ld   a,(C901)
 RO18:5A7E FE 8B            cp   a,8B
 RO18:5A80 20 24            jr   nz,5AA6
 RO18:5A82 FA EE C8         ld   a,(C8EE)
 RO18:5A85 6F               ld   l,a
 RO18:5A86 FA EF C8         ld   a,(C8EF)
 RO18:5A89 67               ld   h,a
 RO18:5A8A FA F2 C8         ld   a,(C8F2)
 RO18:5A8D 47               ld   b,a
 RO18:5A8E CD 57 13         call 1357
 RO18:5A91 FA 01 C9         ld   a,(C901)
 RO18:5A94 FE 8B            cp   a,8B
 RO18:5A96 20 0E            jr   nz,5AA6
 RO18:5A98 CD 25 15         call 1525
 RO18:5A9B FA 01 C9         ld   a,(C901)
 RO18:5A9E FE 8B            cp   a,8B
 RO18:5AA0 20 04            jr   nz,5AA6
 RO18:5AA2 AF               xor  a
 RO18:5AA3 C3 1B 5A         jp   5A1B
 RO18:5AA6 37               scf  
 RO18:5AA7 C3 1B 5A         jp   5A1B
 RO18:5AAA EA EC C8         ld   (C8EC),a
 RO18:5AAD 7D               ld   a,l
 RO18:5AAE EA EE C8         ld   (C8EE),a
 RO18:5AB1 7C               ld   a,h
 RO18:5AB2 EA EF C8         ld   (C8EF),a
 RO18:5AB5 7B               ld   a,e
 RO18:5AB6 EA F0 C8         ld   (C8F0),a
 RO18:5AB9 7A               ld   a,d
 RO18:5ABA EA F1 C8         ld   (C8F1),a
 RO18:5ABD 79               ld   a,c
 RO18:5ABE EA F2 C8         ld   (C8F2),a
 RO18:5AC1 C9               ret  
 RO18:5AC2 CD D4 58         call 58D4           // Disables Interrupt, makes sure that IR Port Data Read is enabled; if it needs to, ($C900) 10 byte holds 1, -1, 6/14, 8/20, 2/8, 4/13, 5/12, 110/220, 0, 0 (Normal Speed uses first value, Double Speed uses second)
 RO18:5AC5 3E 08            ld   a,08
 RO18:5AC7 CD AA 5A         call 5AAA
 RO18:5ACA CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:5ACD FA 09 C9         ld   a,(C909)
 RO18:5AD0 CB 47            bit  0,a            // A Button?
 RO18:5AD2 20 61            jr   nz,5B35
 RO18:5AD4 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:5AD7 CD 39 5B         call 5B39
 RO18:5ADA FA 01 C9         ld   a,(C901)
 RO18:5ADD FE 8B            cp   a,8B
 RO18:5ADF 20 54            jr   nz,5B35
 RO18:5AE1 21 EC C8         ld   hl,C8EC
 RO18:5AE4 06 08            ld   b,08
 RO18:5AE6 CD 57 13         call 1357
 RO18:5AE9 FA 01 C9         ld   a,(C901)
 RO18:5AEC FE 8B            cp   a,8B
 RO18:5AEE 20 DA            jr   nz,5ACA
 RO18:5AF0 CD 25 15         call 1525
 RO18:5AF3 FA 01 C9         ld   a,(C901)
 RO18:5AF6 FE 8B            cp   a,8B
 RO18:5AF8 20 D0            jr   nz,5ACA
 RO18:5AFA CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:5AFD CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:5B00 FA 09 C9         ld   a,(C909)
 RO18:5B03 CB 47            bit  0,a            // A Button?
 RO18:5B05 20 2E            jr   nz,5B35
 RO18:5B07 CD C3 12         call 12C3
 RO18:5B0A FA 01 C9         ld   a,(C901)
 RO18:5B0D FE 8B            cp   a,8B
 RO18:5B0F 20 EC            jr   nz,5AFD
 RO18:5B11 FA F0 C8         ld   a,(C8F0)
 RO18:5B14 6F               ld   l,a
 RO18:5B15 FA F1 C8         ld   a,(C8F1)
 RO18:5B18 67               ld   h,a
 RO18:5B19 FA F2 C8         ld   a,(C8F2)
 RO18:5B1C 47               ld   b,a
 RO18:5B1D CD 3B 14         call 143B
 RO18:5B20 FA 01 C9         ld   a,(C901)
 RO18:5B23 FE 8B            cp   a,8B
 RO18:5B25 20 D3            jr   nz,5AFA
 RO18:5B27 CD 2A 15         call 152A
 RO18:5B2A FA 01 C9         ld   a,(C901)
 RO18:5B2D FE 8B            cp   a,8B
 RO18:5B2F 20 C9            jr   nz,5AFA
 RO18:5B31 AF               xor  a
 RO18:5B32 C3 1B 5A         jp   5A1B
 RO18:5B35 37               scf  
 RO18:5B36 C3 1B 5A         jp   5A1B
 RO18:5B39 CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:5B3C FA 09 C9         ld   a,(C909)
 RO18:5B3F CB 47            bit  0,a            // A Button?
 RO18:5B41 20 0C            jr   nz,5B4F
 RO18:5B43 CD 02 13         call 1302
 RO18:5B46 FA 01 C9         ld   a,(C901)
 RO18:5B49 FE 8B            cp   a,8B
 RO18:5B4B 20 EC            jr   nz,5B39
 RO18:5B4D AF               xor  a
 RO18:5B4E C9               ret  
 RO18:5B4F 37               scf  
 RO18:5B50 C9               ret  
 RO18:5B51 CD D4 58         call 58D4           // Disables Interrupt, makes sure that IR Port Data Read is enabled; if it needs to, ($C900) 10 byte holds 1, -1, 6/14, 8/20, 2/8, 4/13, 5/12, 110/220, 0, 0 (Normal Speed uses first value, Double Speed uses second)
 RO18:5B54 3E 0B            ld   a,0B
 RO18:5B56 CD AA 5A         call 5AAA
 RO18:5B59 CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:5B5C FA 09 C9         ld   a,(C909)
 RO18:5B5F CB 47            bit  0,a            // A Button?
 RO18:5B61 20 61            jr   nz,5BC4
 RO18:5B63 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:5B66 CD 39 5B         call 5B39
 RO18:5B69 FA 01 C9         ld   a,(C901)
 RO18:5B6C FE 8B            cp   a,8B
 RO18:5B6E 20 54            jr   nz,5BC4
 RO18:5B70 21 EC C8         ld   hl,C8EC
 RO18:5B73 06 08            ld   b,08
 RO18:5B75 CD 57 13         call 1357
 RO18:5B78 FA 01 C9         ld   a,(C901)
 RO18:5B7B FE 8B            cp   a,8B
 RO18:5B7D 20 DA            jr   nz,5B59
 RO18:5B7F CD 25 15         call 1525
 RO18:5B82 FA 01 C9         ld   a,(C901)
 RO18:5B85 FE 8B            cp   a,8B
 RO18:5B87 20 D0            jr   nz,5B59
 RO18:5B89 CD 4F 12         call 124F           // IR Port Data Read enabled, LED Off, Receiving IR Signal; ($C901) = -1, ($C900) = 1
 RO18:5B8C CD 35 15         call 1535           // Establishes current player controls for IR system
 RO18:5B8F FA 09 C9         ld   a,(C909)
 RO18:5B92 CB 47            bit  0,a            // A Button?
 RO18:5B94 20 2E            jr   nz,5BC4
 RO18:5B96 CD 02 13         call 1302
 RO18:5B99 FA 01 C9         ld   a,(C901)
 RO18:5B9C FE 8B            cp   a,8B
 RO18:5B9E 20 EC            jr   nz,5B8C
 RO18:5BA0 FA EE C8         ld   a,(C8EE)
 RO18:5BA3 6F               ld   l,a
 RO18:5BA4 FA EF C8         ld   a,(C8EF)
 RO18:5BA7 67               ld   h,a
 RO18:5BA8 FA F2 C8         ld   a,(C8F2)
 RO18:5BAB 47               ld   b,a
 RO18:5BAC CD 57 13         call 1357
 RO18:5BAF FA 01 C9         ld   a,(C901)
 RO18:5BB2 FE 8B            cp   a,8B
 RO18:5BB4 20 D3            jr   nz,5B89
 RO18:5BB6 CD 25 15         call 1525
 RO18:5BB9 FA 01 C9         ld   a,(C901)
 RO18:5BBC FE 8B            cp   a,8B
 RO18:5BBE 20 C9            jr   nz,5B89
 RO18:5BC0 AF               xor  a
 RO18:5BC1 C3 1B 5A         jp   5A1B
 RO18:5BC4 37               scf  
 RO18:5BC5 C3 1B 5A         jp   5A1B
 RO18:5BC8 F0 82            ld   a,(ff00+82)
 RO18:5BCA F5               push af
 RO18:5BCB 3E 04            ld   a,04
 RO18:5BCD E0 82            ld   (ff00+82),a
 RO18:5BCF E0 70            ld   (ff00+70),a
 RO18:5BD1 AF               xor  a
 RO18:5BD2 EA 52 DC         ld   (DC52),a
 RO18:5BD5 EA 54 DC         ld   (DC54),a
 RO18:5BD8 EA 56 DC         ld   (DC56),a
 RO18:5BDB EA 58 DC         ld   (DC58),a
 RO18:5BDE EA 5A DC         ld   (DC5A),a
 RO18:5BE1 3E 04            ld   a,04
 RO18:5BE3 E0 82            ld   (ff00+82),a
 RO18:5BE5 E0 70            ld   (ff00+70),a
 RO18:5BE7 AF               xor  a
 RO18:5BE8 EA 2B DC         ld   (DC2B),a
 RO18:5BEB F1               pop  af
 RO18:5BEC E0 82            ld   (ff00+82),a
 RO18:5BEE E0 70            ld   (ff00+70),a
 RO18:5BF0 C9               ret                 // Clears WRA4($DC52~DC5A) Even Inclusive Addresses and WRA4($DC2B)
 RO18:5BF1 C3 FA 5B         jp   5BFA           // VS Mode Method Selection outline
 RO18:5BF4 C9               ret  
 RO18:5BF5 EF 19 8F 51                          
 RO18:5BF9 C9               ret  
 RO18:5BFA CD 65 5E         call 5E65           // VS Method Selection master control
 RO18:5BFD FE 00            cp   a,00           // MAN
 RO18:5BFF CA 70 5C         jp   z,5C70         // VS Mode Man Selected outline
 RO18:5C02 FE 01            cp   a,01           // IR COMM
 RO18:5C04 CA A0 5C         jp   z,5CA0         // VS Mode IR Comm selected outline
 RO18:5C07 C9               ret                 // End immediately for B Button Press
 RO18:5C08 CD A4 62         call 62A4           // IR Comm Send/Get Selection master control; ends with A = 0 for Send, 1 for Get, or -1 for Back
 RO18:5C0B FE 00            cp   a,00
 RO18:5C0D 28 05            jr   z,5C14
 RO18:5C0F FE 01            cp   a,01
 RO18:5C11 28 27            jr   z,5C3A
 RO18:5C13 C9               ret  
 RO18:5C14 F0 82            ld   a,(ff00+82)    // Send comes here
 RO18:5C16 F5               push af
 RO18:5C17 3E 04            ld   a,04
 RO18:5C19 E0 82            ld   (ff00+82),a
 RO18:5C1B E0 70            ld   (ff00+70),a
 RO18:5C1D AF               xor  a
 RO18:5C1E EA 2B DC         ld   (DC2B),a
 RO18:5C21 F1               pop  af
 RO18:5C22 E0 82            ld   (ff00+82),a
 RO18:5C24 E0 70            ld   (ff00+70),a
 RO18:5C26 3E 04            ld   a,04           // Send
 RO18:5C28 EF 13 E3 47                          // Map Editor Quick Menu master control
 RO18:5C2C FE FF            cp   a,FF
 RO18:5C2E 28 D8            jr   z,5C08
 RO18:5C30 EF 0C 00 6B                          
 RO18:5C34 FE 01            cp   a,01
 RO18:5C36 28 DC            jr   z,5C14
 RO18:5C38 18 26            jr   5C60
 RO18:5C3A F0 82            ld   a,(ff00+82)    // Get comes here
 RO18:5C3C F5               push af
 RO18:5C3D 3E 04            ld   a,04
 RO18:5C3F E0 82            ld   (ff00+82),a
 RO18:5C41 E0 70            ld   (ff00+70),a
 RO18:5C43 AF               xor  a
 RO18:5C44 EA 2B DC         ld   (DC2B),a
 RO18:5C47 F1               pop  af
 RO18:5C48 E0 82            ld   (ff00+82),a
 RO18:5C4A E0 70            ld   (ff00+70),a
 RO18:5C4C 3E 05            ld   a,05           // Get
 RO18:5C4E EF 13 E3 47                          // Map Editor Quick Menu master control
 RO18:5C52 FE FF            cp   a,FF
 RO18:5C54 28 B2            jr   z,5C08
 RO18:5C56 EF 0C 20 6B                          
 RO18:5C5A FE 01            cp   a,01
 RO18:5C5C 28 DC            jr   z,5C3A
 RO18:5C5E 18 00            jr   5C60
 RO18:5C60 C3 08 5C         jp   5C08
 RO18:5C63 CD 65 5E         call 5E65           // VS Method Selection master control
 RO18:5C66 FE 00            cp   a,00           // MAN
 RO18:5C68 28 06            jr   z,5C70         // VS Mode Man Selected outline
 RO18:5C6A FE 01            cp   a,01           // IR COMM
 RO18:5C6C CA A0 5C         jp   z,5CA0         // VS Mode IR Comm selected outline
 RO18:5C6F C9               ret                 // End immediately for Back
 RO18:5C70 EF 0F 69 40                          // VS Quick Save check, ending with A = 1 for no Quick Save, 0 for opening Quick Save, or A = -1 for B Button press
 RO18:5C74 FE 00            cp   a,00           // Opening Quick Save Check
 RO18:5C76 28 0A            jr   z,5C82
 RO18:5C78 FE 01            cp   a,01           // No Quick Save Check
 RO18:5C7A CA DA 5C         jp   z,5CDA         // VS Mode Map Type Selection outline
 RO18:5C7D FE FF            cp   a,FF
 RO18:5C7F C3 63 5C         jp   5C63           // Back returns to a bit of redundant coding....
 RO18:5C82 EF 0F 73 40                          // Reestablishes VS Quick Save data
 RO18:5C86 3E 04            ld   a,04
 RO18:5C88 EA 2F C6         ld   (C62F),a
 RO18:5C8B EF 0B 26 6B                          // Core Gameplay master control
 RO18:5C8F AF               xor  a
 RO18:5C90 C9               ret  
 RO18:5C91 CD C6 60         call 60C6           // IR Comm Country Selection master control
 RO18:5C94 FE 00            cp   a,00           // Red Star
 RO18:5C96 CA DA 5C         jp   z,5CDA         // VS Mode Map Type Selection outline
 RO18:5C99 FE 01            cp   a,01           // White Moon
 RO18:5C9B CA 66 5D         jp   z,5D66         // Online Play for Receiving/White Moon Player
 RO18:5C9E 18 C3            jr   5C63           // Back to VS Method Selection for B Button press
 RO18:5CA0 EF 0F 69 40                          // VS Quick Save check, ending with A = 1 for no Quick Save, 0 for opening Quick Save, or A = -1 for B Button press
 RO18:5CA4 FE 00            cp   a,00
 RO18:5CA6 28 09            jr   z,5CB1         // Supposed to download save; DO NOT DO THIS!
 RO18:5CA8 FE 01            cp   a,01
 RO18:5CAA 28 1F            jr   z,5CCB         // VS Mode IR Comm Country Selection outline
 RO18:5CAC FE FF            cp   a,FF
 RO18:5CAE C3 63 5C         jp   5C63           // Back to VS Method Selection for B Button press
 RO18:5CB1 EF 0B 73 40                          // INTENDED: Reestablishes VS Quick Save data
 RO18:5CB5 3E 00            ld   a,00
 RO18:5CB7 EF 0C 9E 69                          
 RO18:5CBB FE 01            cp   a,01           // Connection failure check
 RO18:5CBD CA 63 5C         jp   z,5C63         // Back to VS Method Selection for connection failure
 RO18:5CC0 3E 04            ld   a,04
 RO18:5CC2 EA 2F C6         ld   (C62F),a
 RO18:5CC5 EF 0B 26 6B                          // Core Gameplay master control
 RO18:5CC9 AF               xor  a
 RO18:5CCA C9               ret  
 RO18:5CCB CD C6 60         call 60C6           // IR Comm Country Selection master control
 RO18:5CCE FE 00            cp   a,00           // Red Star
 RO18:5CD0 28 08            jr   z,5CDA         // VS Mode Map Type Selection outline
 RO18:5CD2 FE 01            cp   a,01           // White Moon
 RO18:5CD4 CA 66 5D         jp   z,5D66         // Online Play for Receiving/White Moon Player
 RO18:5CD7 C3 63 5C         jp   5C63           // Back to VS Method Selection for Back
 RO18:5CDA CD 47 65         call 6547           // VS Map Type Select master control
 RO18:5CDD FE 00            cp   a,00           // Standard Mode
 RO18:5CDF 28 11            jr   z,5CF2
 RO18:5CE1 FE 01            cp   a,01           // Edit
 RO18:5CE3 28 17            jr   z,5CFC
 RO18:5CE5 FA 30 C6         ld   a,(C630)       // Active VS Mode
 RO18:5CE8 FE 00            cp   a,00           // Man
 RO18:5CEA CA 63 5C         jp   z,5C63         // Back to VS Method selection if passing along the GBC like a MAN
 RO18:5CED FE 01            cp   a,01           // IR Comm
 RO18:5CEF CA 91 5C         jp   z,5C91         // Back to IR Comm Country Selection if using IR Comm
 RO18:5CF2 EF 15 37 71                          // Standard Mode Map Selection including Map Preview and Map Intel; A = 0 for full confirmation of choice, or -1 for full cancellation
 RO18:5CF6 FE FF            cp   a,FF
 RO18:5CF8 28 E0            jr   z,5CDA         // Back to VS Map Type Select master control if Cancelled
 RO18:5CFA 18 14            jr   5D10           // VS Mode Standard Map Play
 RO18:5CFC 3E 01            ld   a,01           // Play
 RO18:5CFE EF 13 E3 47                          // Map Editor Quick Menu master control
 RO18:5D02 FE FF            cp   a,FF           // Back?
 RO18:5D04 28 D4            jr   z,5CDA         // Back to VS Map Type Select on B Button press
 RO18:5D06 EF 28 C1 40                          // Map preview, ending with A = -1 for B Button, or 0 for A Button; latter has BC as view selection center tile
 RO18:5D0A FE FF            cp   a,FF
 RO18:5D0C 20 2D            jr   nz,5D3B        // VS Mode Edit Map Play
 RO18:5D0E 18 EC            jr   5CFC           // Back to Map Editor Quick Menu on B Button press
 RO18:5D10 FA 30 C6         ld   a,(C630)       // Active VS Mode
 RO18:5D13 FE 00            cp   a,00           // Man
 RO18:5D15 28 04            jr   z,5D1B
 RO18:5D17 FE 01            cp   a,01           // IR Comm
 RO18:5D19 28 0B            jr   z,5D26
 RO18:5D1B 3E 04            ld   a,04
 RO18:5D1D EA 2F C6         ld   (C62F),a
 RO18:5D20 EF 0B 26 6B                          // Core Gameplay master control
 RO18:5D24 AF               xor  a
 RO18:5D25 C9               ret  
 RO18:5D26 3E 00            ld   a,00
 RO18:5D28 EF 0C 9E 69                          
 RO18:5D2C FE 01            cp   a,01           // Zero Flag set by no signal
 RO18:5D2E 28 C2            jr   z,5CF2
 RO18:5D30 3E 04            ld   a,04
 RO18:5D32 EA 2F C6         ld   (C62F),a
 RO18:5D35 EF 0B 26 6B                          // Core Gameplay master control
 RO18:5D39 AF               xor  a
 RO18:5D3A C9               ret  
 RO18:5D3B FA 30 C6         ld   a,(C630)       // Active VS Mode
 RO18:5D3E FE 00            cp   a,00           // MAN
 RO18:5D40 28 04            jr   z,5D46
 RO18:5D42 FE 01            cp   a,01           // IR COMM
 RO18:5D44 28 0B            jr   z,5D51
 RO18:5D46 3E 04            ld   a,04
 RO18:5D48 EA 2F C6         ld   (C62F),a
 RO18:5D4B EF 0B 26 6B                          // Core Gameplay master control
 RO18:5D4F AF               xor  a
 RO18:5D50 C9               ret  
 RO18:5D51 3E 00            ld   a,00
 RO18:5D53 EF 0C 9E 69                          
 RO18:5D57 FE 01            cp   a,01           // Zero Flag set by no signal
 RO18:5D59 28 A1            jr   z,5CFC
 RO18:5D5B 3E 04            ld   a,04
 RO18:5D5D EA 2F C6         ld   (C62F),a
 RO18:5D60 EF 0B 26 6B                          // Core Gameplay master control
 RO18:5D64 AF               xor  a
 RO18:5D65 C9               ret  
 RO18:5D66 3E 01            ld   a,01           // White Moon starts here
 RO18:5D68 EF 0C 9E 69                          
 RO18:5D6C FE 01            cp   a,01           // Zero Flag set by no signal
 RO18:5D6E CA 91 5C         jp   z,5C91         // Back to IR Comm Country Selection for connection failure
 RO18:5D71 3E 04            ld   a,04
 RO18:5D73 EA 2F C6         ld   (C62F),a
 RO18:5D76 EF 0B 26 6B                          // Core Gameplay master control
 RO18:5D7A AF               xor  a
 RO18:5D7B C9               ret  
 RO18:5D7C CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO18:5D7F CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO18:5D82 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO18:5D85 AF               xor  a
 RO18:5D86 E0 95            ld   (ff00+95),a
 RO18:5D88 E0 96            ld   (ff00+96),a
 RO18:5D8A EF 10 A8 68                          // Sets up basic covered graphics values
 RO18:5D8E EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO18:5D92 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO18:5D95 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO18:5D98 3E 00            ld   a,00
 RO18:5D9A E0 83            ld   (ff00+83),a
 RO18:5D9C E0 4F            ld   (ff00+4F),a
 RO18:5D9E 3E 00            ld   a,00
 RO18:5DA0 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO18:5DA4 3E 01            ld   a,01
 RO18:5DA6 E0 83            ld   (ff00+83),a
 RO18:5DA8 E0 4F            ld   (ff00+4F),a
 RO18:5DAA 11 E2 76         ld   de,76E2        // MAN/IR COMM, B: Back, Complete Icon
 RO18:5DAD 21 00 90         ld   hl,9000
 RO18:5DB0 01 60 02         ld   bc,0260
 RO18:5DB3 EF 15 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:5DB7 11 C1 67         ld   de,67C1        // B: Back
 RO18:5DBA 21 60 92         ld   hl,9260
 RO18:5DBD 01 40 00         ld   bc,0040
 RO18:5DC0 EF 14 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:5DC4 3E 00            ld   a,00
 RO18:5DC6 06 08            ld   b,08
 RO18:5DC8 21 42 79         ld   hl,7942
 RO18:5DCB 0E 15            ld   c,15
 RO18:5DCD CD D9 06         call 06D9           // ($C4E0) to ($C51F) hold $15:($7942) to $15:($7981)
 RO18:5DD0 CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO18:5DD3 CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO18:5DD6 01 01 03         ld   bc,0301
 RO18:5DD9 11 03 0E         ld   de,0E03        // Top Text Table
 RO18:5DDC EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:5DE0 F0 83            ld   a,(ff00+83)
 RO18:5DE2 F5               push af
 RO18:5DE3 3E 01            ld   a,01
 RO18:5DE5 E0 83            ld   (ff00+83),a
 RO18:5DE7 E0 4F            ld   (ff00+4F),a
 RO18:5DE9 01 02 04         ld   bc,0402
 RO18:5DEC 11 01 0C         ld   de,0C01
 RO18:5DEF AF               xor  a
 RO18:5DF0 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:5DF4 F1               pop  af
 RO18:5DF5 E0 83            ld   (ff00+83),a
 RO18:5DF7 E0 4F            ld   (ff00+4F),a
 RO18:5DF9 01 0C 01         ld   bc,010C
 RO18:5DFC 11 05 12         ld   de,1205        // Bottom Text Table
 RO18:5DFF EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO18:5E03 01 02 05         ld   bc,0502
 RO18:5E06 21 5B 5E         ld   hl,5E5B        // "Battle Method"
 RO18:5E09 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO18:5E0C 3E 0A            ld   a,0A
 RO18:5E0E 01 06 06         ld   bc,0606
 RO18:5E11 11 02 08         ld   de,0802
 RO18:5E14 26 01            ld   h,01           // "MAN"
 RO18:5E16 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:5E1A 3E 0A            ld   a,0A
 RO18:5E1C 01 08 06         ld   bc,0608
 RO18:5E1F 11 02 08         ld   de,0802
 RO18:5E22 26 11            ld   h,11           // "IR COMM."
 RO18:5E24 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:5E28 3E 0A            ld   a,0A
 RO18:5E2A 01 11 0F         ld   bc,0F11
 RO18:5E2D 11 01 01         ld   de,0101
 RO18:5E30 26 26            ld   h,26           // "B: Back"
 RO18:5E32 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:5E36 3E 08            ld   a,08
 RO18:5E38 01 11 10         ld   bc,1011
 RO18:5E3B 11 01 03         ld   de,0301
 RO18:5E3E 26 27            ld   h,27
 RO18:5E40 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:5E44 3E 20            ld   a,20
 RO18:5E46 0E 00            ld   c,00
 RO18:5E48 06 15            ld   b,15
 RO18:5E4A 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO18:5E4D CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:5E50 EA 53 DC         ld   (DC53),a
 RO18:5E53 CD 0B 5F         call 5F0B           // Establishes graphics coordinates of Pointing Right Bullet on VS Method selection
 RO18:5E56 EF 27 E6 6A                          // Establish VS Mode Description Text
 RO18:5E5A C9               ret  

 RO18:5E5B 70 62 6E 8D 20 7E 63 7E 63 00

 RO18:5E65 F0 82            ld   a,(ff00+82)
 RO18:5E67 F5               push af
 RO18:5E68 3E 04            ld   a,04
 RO18:5E6A E0 82            ld   (ff00+82),a
 RO18:5E6C E0 70            ld   (ff00+70),a
 RO18:5E6E CD 7C 5D         call 5D7C           // Establishes VS Method selection screen graphics
 RO18:5E71 3E 02            ld   a,02
 RO18:5E73 CD 16 38         call 3816           // Menu theme
 RO18:5E76 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO18:5E79 CD A2 05         call 05A2           // Button update, next frame
 RO18:5E7C CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:5E7F 3E 00            ld   a,00
 RO18:5E81 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:5E85 F0 92            ld   a,(ff00+92)
 RO18:5E87 CB 47            bit  0,a            // A
 RO18:5E89 28 20            jr   z,5EAB
 RO18:5E8B FA 53 DC         ld   a,(DC53)       // Pointing Right Bullet
 RO18:5E8E EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO18:5E92 FA 52 DC         ld   a,(DC52)
 RO18:5E95 FE 00            cp   a,00
 RO18:5E97 28 04            jr   z,5E9D
 RO18:5E99 FE 01            cp   a,01
 RO18:5E9B 28 07            jr   z,5EA4
 RO18:5E9D 3E 00            ld   a,00           // Man
 RO18:5E9F EA 30 C6         ld   (C630),a
 RO18:5EA2 18 51            jr   5EF5
 RO18:5EA4 3E 01            ld   a,01           // IR Comm
 RO18:5EA6 EA 30 C6         ld   (C630),a
 RO18:5EA9 18 4A            jr   5EF5
 RO18:5EAB CB 4F            bit  1,a            // B
 RO18:5EAD 28 09            jr   z,5EB8
 RO18:5EAF 3E 0C            ld   a,0C
 RO18:5EB1 CD 44 38         call 3844
 RO18:5EB4 3E FF            ld   a,FF
 RO18:5EB6 18 3D            jr   5EF5
 RO18:5EB8 CB 77            bit  6,a            // Up
 RO18:5EBA 28 1B            jr   z,5ED7
 RO18:5EBC 3E 01            ld   a,01
 RO18:5EBE CD 44 38         call 3844
 RO18:5EC1 FA 52 DC         ld   a,(DC52)
 RO18:5EC4 3D               dec  a
 RO18:5EC5 FE FF            cp   a,FF
 RO18:5EC7 20 02            jr   nz,5ECB
 RO18:5EC9 3E 01            ld   a,01           // Rotation
 RO18:5ECB EA 52 DC         ld   (DC52),a
 RO18:5ECE CD 0B 5F         call 5F0B           // Establishes graphics coordinates of Pointing Right Bullet on VS Method selection
 RO18:5ED1 EF 27 E6 6A                          // Establish VS Mode Description Text
 RO18:5ED5 18 A2            jr   5E79           // Further standby for button input after pressing Up
 RO18:5ED7 CB 7F            bit  7,a            // Down
 RO18:5ED9 28 18            jr   z,5EF3
 RO18:5EDB 3E 01            ld   a,01
 RO18:5EDD CD 44 38         call 3844
 RO18:5EE0 FA 52 DC         ld   a,(DC52)
 RO18:5EE3 3C               inc  a
 RO18:5EE4 FE 02            cp   a,02
 RO18:5EE6 20 01            jr   nz,5EE9
 RO18:5EE8 AF               xor  a              // Rotation
 RO18:5EE9 EA 52 DC         ld   (DC52),a
 RO18:5EEC CD 0B 5F         call 5F0B           // Establishes graphics coordinates of Pointing Right Bullet on VS Method selection
 RO18:5EEF EF 27 E6 6A                          // Establish VS Mode Description Text
 RO18:5EF3 18 84            jr   5E79           // Further standby for button input after pressing Down
 RO18:5EF5 F5               push af
 RO18:5EF6 FA 52 DC         ld   a,(DC52)
 RO18:5EF9 EA 44 CC         ld   (CC44),a
 RO18:5EFC CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO18:5EFF CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO18:5F02 F1               pop  af
 RO18:5F03 57               ld   d,a
 RO18:5F04 F1               pop  af
 RO18:5F05 E0 82            ld   (ff00+82),a
 RO18:5F07 E0 70            ld   (ff00+70),a
 RO18:5F09 7A               ld   a,d
 RO18:5F0A C9               ret  
 RO18:5F0B FA 52 DC         ld   a,(DC52)
 RO18:5F0E 06 10            ld   b,10
 RO18:5F10 CD 95 29         call 2995           // HL = A * B
 RO18:5F13 7D               ld   a,l
 RO18:5F14 C6 48            add  a,48
 RO18:5F16 4F               ld   c,a
 RO18:5F17 06 38            ld   b,38
 RO18:5F19 FA 53 DC         ld   a,(DC53)       // Pointing Right Bullet
 RO18:5F1C CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:5F1F C9               ret                 // Establishes graphics coordinates of Pointing Right Bullet on VS Method selection
 RO18:5F20 FA 54 DC         ld   a,(DC54)       // Country Choice
 RO18:5F23 06 18            ld   b,18
 RO18:5F25 CD 95 29         call 2995           // HL = A * B
 RO18:5F28 7D               ld   a,l
 RO18:5F29 C6 40            add  a,40
 RO18:5F2B 4F               ld   c,a
 RO18:5F2C 06 28            ld   b,28
 RO18:5F2E FA 55 DC         ld   a,(DC55)       // Pointing Right Bullet
 RO18:5F31 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:5F34 C9               ret                 // Establishes graphics coordinates of Pointing Right Bullet on IR Comm Country selection
 RO18:5F35 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO18:5F38 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO18:5F3B CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO18:5F3E EF 10 A8 68                          // Sets up basic covered graphics values
 RO18:5F42 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO18:5F46 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO18:5F49 AF               xor  a
 RO18:5F4A E0 95            ld   (ff00+95),a
 RO18:5F4C E0 96            ld   (ff00+96),a
 RO18:5F4E CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO18:5F51 3E 00            ld   a,00
 RO18:5F53 E0 83            ld   (ff00+83),a
 RO18:5F55 E0 4F            ld   (ff00+4F),a
 RO18:5F57 3E 00            ld   a,00
 RO18:5F59 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO18:5F5D 3E 01            ld   a,01
 RO18:5F5F E0 83            ld   (ff00+83),a
 RO18:5F61 E0 4F            ld   (ff00+4F),a
 RO18:5F63 11 F2 77         ld   de,77F2        // "IR COMM."
 RO18:5F66 21 00 90         ld   hl,9000
 RO18:5F69 01 00 01         ld   bc,0100
 RO18:5F6C EF 15 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:5F70 11 C1 67         ld   de,67C1        // "B: Back"
 RO18:5F73 21 00 91         ld   hl,9100
 RO18:5F76 01 40 00         ld   bc,0040
 RO18:5F79 EF 14 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:5F7D 11 73 67         ld   de,6773        // Country Icons
 RO18:5F80 21 40 91         ld   hl,9140
 RO18:5F83 01 80 00         ld   bc,0080
 RO18:5F86 EF 27 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:5F8A 3E 00            ld   a,00
 RO18:5F8C 06 08            ld   b,08
 RO18:5F8E 21 42 79         ld   hl,7942
 RO18:5F91 0E 15            ld   c,15
 RO18:5F93 CD D9 06         call 06D9           // ($C4E0) to ($C51F) hold $15:($7942) to $15:($7981)
 RO18:5F96 CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO18:5F99 CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO18:5F9C 01 04 04         ld   bc,0404
 RO18:5F9F 11 07 0C         ld   de,0C07
 RO18:5FA2 EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:5FA6 21 31 60         ld   hl,6031        // "Red Star"
 RO18:5FA9 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:5FAC 21 3A 60         ld   hl,603A        // "White Moon"
 RO18:5FAF CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:5FB2 F0 83            ld   a,(ff00+83)
 RO18:5FB4 F5               push af
 RO18:5FB5 3E 01            ld   a,01
 RO18:5FB7 E0 83            ld   (ff00+83),a
 RO18:5FB9 E0 4F            ld   (ff00+4F),a
 RO18:5FBB 01 05 05         ld   bc,0505
 RO18:5FBE 11 05 0A         ld   de,0A05
 RO18:5FC1 AF               xor  a
 RO18:5FC2 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:5FC6 F1               pop  af
 RO18:5FC7 E0 83            ld   (ff00+83),a
 RO18:5FC9 E0 4F            ld   (ff00+4F),a
 RO18:5FCB 01 0C 01         ld   bc,010C
 RO18:5FCE 11 05 12         ld   de,1205
 RO18:5FD1 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO18:5FD5 3E 0A            ld   a,0A
 RO18:5FD7 01 01 06         ld   bc,0601
 RO18:5FDA 11 02 08         ld   de,0802
 RO18:5FDD 26 00            ld   h,00           // "IR COMM."
 RO18:5FDF EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:5FE3 3E 0A            ld   a,0A
 RO18:5FE5 01 11 0F         ld   bc,0F11
 RO18:5FE8 11 01 01         ld   de,0101
 RO18:5FEB 26 10            ld   h,10           // "B"
 RO18:5FED EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:5FF1 3E 08            ld   a,08
 RO18:5FF3 01 11 10         ld   bc,1011
 RO18:5FF6 11 01 03         ld   de,0301
 RO18:5FF9 26 11            ld   h,11           // "Back"
 RO18:5FFB EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:5FFF 3E 0B            ld   a,0B
 RO18:6001 01 05 05         ld   bc,0505
 RO18:6004 11 02 02         ld   de,0202
 RO18:6007 26 14            ld   h,14           // Red Star Icon
 RO18:6009 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:600D 3E 0B            ld   a,0B
 RO18:600F 01 08 05         ld   bc,0508
 RO18:6012 11 02 02         ld   de,0202
 RO18:6015 26 18            ld   h,18           // White Moon Icon
 RO18:6017 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:601B 3E 20            ld   a,20
 RO18:601D 0E 00            ld   c,00
 RO18:601F 06 15            ld   b,15
 RO18:6021 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO18:6024 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:6027 EA 55 DC         ld   (DC55),a
 RO18:602A CD 20 5F         call 5F20           // Establishes graphics coordinates of Pointing Right Bullet on IR Comm Country selection
 RO18:602D CD 44 60         call 6044           // Choice description text setup for IR Comm VS Mode
 RO18:6030 C9               ret  

 RO18:6031 08 06
 RO18:6033 DA FF EC BD C0 2D 00

 RO18:603A 08 09
 RO18:603C CE DC B2 C4 D1 2D DD 00

 RO18:6044 F0 83            ld   a,(ff00+83)
 RO18:6046 F5               push af
 RO18:6047 3E 00            ld   a,00
 RO18:6049 E0 83            ld   (ff00+83),a
 RO18:604B E0 4F            ld   (ff00+4F),a
 RO18:604D 01 0D 02         ld   bc,020D
 RO18:6050 11 03 10         ld   de,1003
 RO18:6053 AF               xor  a
 RO18:6054 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:6058 F1               pop  af
 RO18:6059 E0 83            ld   (ff00+83),a
 RO18:605B E0 4F            ld   (ff00+4F),a
 RO18:605D FA 54 DC         ld   a,(DC54)       // Country Choice
 RO18:6060 FE 00            cp   a,00
 RO18:6062 28 02            jr   z,6066
 RO18:6064 18 05            jr   606B
 RO18:6066 21 75 60         ld   hl,6075        // "Battle as Red Star. Please avoid same."
 RO18:6069 18 03            jr   606E
 RO18:606B 21 9D 60         ld   hl,609D        // "Battle as White Moon. Please avoid same."
 RO18:606E 01 0D 02         ld   bc,020D
 RO18:6071 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO18:6074 C9               ret                 // Choice description text setup for IR Comm VS Mode

 RO18:6075 DA FF EC BD C0 2D 9B 70 70 66 62 7F 6D 2E 01
 RO18:6084 70 62 6E 8D 61 62 73 74 71 8E 63 90 8D 60 01
 RO18:6093 64 87 8D 9B 68 98 6B 62 2E 00

 RO18:609D CE DC B2 C4 D1 2D DD 9B 70 70 66 62 7F 6D 2E 01
 RO18:60AD 70 62 6E 8D 61 62 73 74 71 8E 63 90 8D 60 01
 RO18:60BC 64 87 8D 9B 68 98 6B 62 2E 00

 RO18:60C6 F0 82            ld   a,(ff00+82)
 RO18:60C8 F5               push af
 RO18:60C9 3E 04            ld   a,04
 RO18:60CB E0 82            ld   (ff00+82),a
 RO18:60CD E0 70            ld   (ff00+70),a
 RO18:60CF CD 35 5F         call 5F35           // Establishes graphics as a whole of IR Comm Country selection
 RO18:60D2 3E 02            ld   a,02
 RO18:60D4 CD 16 38         call 3816           // Menu theme
 RO18:60D7 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO18:60DA CD A2 05         call 05A2           // Button update, next frame
 RO18:60DD CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:60E0 3E 00            ld   a,00
 RO18:60E2 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:60E6 F0 92            ld   a,(ff00+92)
 RO18:60E8 CB 47            bit  0,a            // A
 RO18:60EA 28 0C            jr   z,60F8
 RO18:60EC FA 55 DC         ld   a,(DC55)       // Pointing Right Bullet
 RO18:60EF EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO18:60F3 FA 54 DC         ld   a,(DC54)       // Country Choice
 RO18:60F6 18 48            jr   6140           // Ends with A = Choice for A Button Press
 RO18:60F8 CB 4F            bit  1,a            // B
 RO18:60FA 28 09            jr   z,6105
 RO18:60FC 3E 0C            ld   a,0C
 RO18:60FE CD 44 38         call 3844
 RO18:6101 3E FF            ld   a,FF
 RO18:6103 18 3B            jr   6140           // Ends with A = -1 for B Button Press
 RO18:6105 CB 77            bit  6,a            // Up
 RO18:6107 28 1A            jr   z,6123
 RO18:6109 3E 01            ld   a,01
 RO18:610B CD 44 38         call 3844
 RO18:610E FA 54 DC         ld   a,(DC54)       // Country Choice
 RO18:6111 3D               dec  a
 RO18:6112 FE FF            cp   a,FF
 RO18:6114 20 02            jr   nz,6118
 RO18:6116 3E 01            ld   a,01
 RO18:6118 EA 54 DC         ld   (DC54),a
 RO18:611B CD 20 5F         call 5F20           // Establishes graphics coordinates of Pointing Right Bullet on IR Comm Country selection
 RO18:611E CD 44 60         call 6044           // Choice description text setup for IR Comm VS Mode
 RO18:6121 18 B7            jr   60DA           // Further standby for button input after pressing Up
 RO18:6123 CB 7F            bit  7,a            // Down
 RO18:6125 28 17            jr   z,613E
 RO18:6127 3E 01            ld   a,01
 RO18:6129 CD 44 38         call 3844
 RO18:612C FA 54 DC         ld   a,(DC54)       // Country Choice
 RO18:612F 3C               inc  a
 RO18:6130 FE 02            cp   a,02
 RO18:6132 20 01            jr   nz,6135
 RO18:6134 AF               xor  a
 RO18:6135 EA 54 DC         ld   (DC54),a
 RO18:6138 CD 20 5F         call 5F20           // Establishes graphics coordinates of Pointing Right Bullet on IR Comm Country selection
 RO18:613B CD 44 60         call 6044           // Choice description text setup for IR Comm VS Mode
 RO18:613E 18 9A            jr   60DA           // Further standby for button input after pressing Down
 RO18:6140 F5               push af
 RO18:6141 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO18:6144 CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO18:6147 F1               pop  af
 RO18:6148 57               ld   d,a
 RO18:6149 F1               pop  af
 RO18:614A E0 82            ld   (ff00+82),a
 RO18:614C E0 70            ld   (ff00+70),a
 RO18:614E 7A               ld   a,d
 RO18:614F C9               ret  
 RO18:6150 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO18:6153 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO18:6156 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO18:6159 AF               xor  a
 RO18:615A E0 95            ld   (ff00+95),a
 RO18:615C E0 96            ld   (ff00+96),a
 RO18:615E EF 10 A8 68                          // Sets up basic covered graphics values
 RO18:6162 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO18:6166 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO18:6169 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO18:616C 3E 00            ld   a,00
 RO18:616E E0 83            ld   (ff00+83),a
 RO18:6170 E0 4F            ld   (ff00+4F),a
 RO18:6172 3E 00            ld   a,00
 RO18:6174 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO18:6178 01 04 05         ld   bc,0504
 RO18:617B 11 03 0A         ld   de,0A03
 RO18:617E EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:6182 F0 83            ld   a,(ff00+83)
 RO18:6184 F5               push af
 RO18:6185 3E 01            ld   a,01
 RO18:6187 E0 83            ld   (ff00+83),a
 RO18:6189 E0 4F            ld   (ff00+4F),a
 RO18:618B AF               xor  a
 RO18:618C 01 05 06         ld   bc,0605
 RO18:618F 11 01 08         ld   de,0801
 RO18:6192 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:6196 F1               pop  af
 RO18:6197 E0 83            ld   (ff00+83),a
 RO18:6199 E0 4F            ld   (ff00+4F),a
 RO18:619B 21 2F 63         ld   hl,632F        // "Map Send" (6,5)
 RO18:619E CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:61A1 01 07 05         ld   bc,0507
 RO18:61A4 11 03 0A         ld   de,0A03
 RO18:61A7 EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:61AB F0 83            ld   a,(ff00+83)
 RO18:61AD F5               push af
 RO18:61AE 3E 01            ld   a,01
 RO18:61B0 E0 83            ld   (ff00+83),a
 RO18:61B2 E0 4F            ld   (ff00+4F),a
 RO18:61B4 AF               xor  a
 RO18:61B5 01 08 06         ld   bc,0608
 RO18:61B8 11 01 08         ld   de,0801
 RO18:61BB EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:61BF F1               pop  af
 RO18:61C0 E0 83            ld   (ff00+83),a
 RO18:61C2 E0 4F            ld   (ff00+4F),a
 RO18:61C4 21 39 63         ld   hl,6339        // "Map Get" (6,8)
 RO18:61C7 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:61CA 01 0C 01         ld   bc,010C
 RO18:61CD 11 05 12         ld   de,1205
 RO18:61D0 EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:61D4 F0 83            ld   a,(ff00+83)
 RO18:61D6 F5               push af
 RO18:61D7 3E 01            ld   a,01
 RO18:61D9 E0 83            ld   (ff00+83),a
 RO18:61DB E0 4F            ld   (ff00+4F),a
 RO18:61DD AF               xor  a
 RO18:61DE 01 0D 02         ld   bc,020D
 RO18:61E1 11 03 10         ld   de,1003
 RO18:61E4 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:61E8 F1               pop  af
 RO18:61E9 E0 83            ld   (ff00+83),a
 RO18:61EB E0 4F            ld   (ff00+4F),a
 RO18:61ED F0 83            ld   a,(ff00+83)
 RO18:61EF F5               push af
 RO18:61F0 3E 01            ld   a,01
 RO18:61F2 E0 83            ld   (ff00+83),a
 RO18:61F4 E0 4F            ld   (ff00+4F),a
 RO18:61F6 11 C1 67         ld   de,67C1        // "B: Back"
 RO18:61F9 21 00 90         ld   hl,9000
 RO18:61FC 01 40 00         ld   bc,0040
 RO18:61FF EF 14 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:6203 11 10 5A         ld   de,5A10        // "MAP"
 RO18:6206 21 40 90         ld   hl,9040
 RO18:6209 01 40 01         ld   bc,0140
 RO18:620C EF 15 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:6210 F1               pop  af
 RO18:6211 E0 83            ld   (ff00+83),a
 RO18:6213 E0 4F            ld   (ff00+4F),a
 RO18:6215 F0 83            ld   a,(ff00+83)
 RO18:6217 F5               push af
 RO18:6218 3E 20            ld   a,20
 RO18:621A 0E 00            ld   c,00
 RO18:621C 06 15            ld   b,15
 RO18:621E 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO18:6221 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:6224 EA 57 DC         ld   (DC57),a
 RO18:6227 F1               pop  af
 RO18:6228 E0 83            ld   (ff00+83),a
 RO18:622A E0 4F            ld   (ff00+4F),a
 RO18:622C 3E 0A            ld   a,0A
 RO18:622E 01 01 05         ld   bc,0501
 RO18:6231 11 02 0A         ld   de,0A02
 RO18:6234 26 04            ld   h,04           // "MAP"
 RO18:6236 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:623A 3E 0A            ld   a,0A
 RO18:623C 01 11 0F         ld   bc,0F11
 RO18:623F 11 01 01         ld   de,0101
 RO18:6242 26 00            ld   h,00           // "B"
 RO18:6244 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:6248 3E 08            ld   a,08
 RO18:624A 01 11 10         ld   bc,1011
 RO18:624D 11 01 03         ld   de,0301
 RO18:6250 26 01            ld   h,01           // "Back"
 RO18:6252 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:6256 CD 5A 62         call 625A           // Manages graphics involving highlighted choice on IR Comm Send/Get Choice screen
 RO18:6259 C9               ret                 // Initializes graphics of IR Comm Send/Get Choice screen
 RO18:625A FA 56 DC         ld   a,(DC56)
 RO18:625D 06 18            ld   b,18
 RO18:625F CD 95 29         call 2995           // HL = A * B
 RO18:6262 7D               ld   a,l
 RO18:6263 C6 3C            add  a,3C
 RO18:6265 4F               ld   c,a
 RO18:6266 06 30            ld   b,30
 RO18:6268 FA 57 DC         ld   a,(DC57)
 RO18:626B CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:626E F0 83            ld   a,(ff00+83)
 RO18:6270 F5               push af
 RO18:6271 3E 00            ld   a,00
 RO18:6273 E0 83            ld   (ff00+83),a
 RO18:6275 E0 4F            ld   (ff00+4F),a
 RO18:6277 01 0D 02         ld   bc,020D
 RO18:627A 11 03 10         ld   de,1003
 RO18:627D AF               xor  a
 RO18:627E EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:6282 F1               pop  af
 RO18:6283 E0 83            ld   (ff00+83),a
 RO18:6285 E0 4F            ld   (ff00+4F),a
 RO18:6287 FA 56 DC         ld   a,(DC56)
 RO18:628A FE 00            cp   a,00
 RO18:628C 28 02            jr   z,6290
 RO18:628E 18 0A            jr   629A
 RO18:6290 21 43 63         ld   hl,6343        // "Use IR Comm to send your built Map Data."
 RO18:6293 01 0D 02         ld   bc,020D
 RO18:6296 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO18:6299 C9               ret  
 RO18:629A 21 69 63         ld   hl,6369        // "Use IR Comm to get Map Data."
 RO18:629D 01 0D 02         ld   bc,020D
 RO18:62A0 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO18:62A3 C9               ret                 // Manages graphics involving highlighted choice on IR Comm Send/Get Choice screen
 RO18:62A4 F0 82            ld   a,(ff00+82)
 RO18:62A6 F5               push af
 RO18:62A7 3E 04            ld   a,04
 RO18:62A9 E0 82            ld   (ff00+82),a
 RO18:62AB E0 70            ld   (ff00+70),a
 RO18:62AD CD 50 61         call 6150           // Initializes graphics of IR Comm Send/Get Choice screen
 RO18:62B0 3E 02            ld   a,02
 RO18:62B2 CD 16 38         call 3816           // Menu theme
 RO18:62B5 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO18:62B8 CD A2 05         call 05A2           // Button update, next frame
 RO18:62BB CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:62BE 3E 00            ld   a,00
 RO18:62C0 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:62C4 F0 92            ld   a,(ff00+92)
 RO18:62C6 CB 77            bit  6,a            // Up
 RO18:62C8 28 1A            jr   z,62E4
 RO18:62CA 3E 01            ld   a,01
 RO18:62CC CD 44 38         call 3844
 RO18:62CF FA 56 DC         ld   a,(DC56)
 RO18:62D2 3D               dec  a
 RO18:62D3 FE FF            cp   a,FF
 RO18:62D5 28 03            jr   z,62DA         // Rotation branch
 RO18:62D7 AF               xor  a
 RO18:62D8 18 02            jr   62DC
 RO18:62DA 3E 01            ld   a,01
 RO18:62DC EA 56 DC         ld   (DC56),a
 RO18:62DF CD 5A 62         call 625A           // Manages graphics involving highlighted choice on IR Comm Send/Get Choice screen
 RO18:62E2 18 D4            jr   62B8           // Further standby for button input after pressing Up
 RO18:62E4 CB 7F            bit  7,a            // Down
 RO18:62E6 28 1A            jr   z,6302
 RO18:62E8 3E 01            ld   a,01
 RO18:62EA CD 44 38         call 3844
 RO18:62ED FA 56 DC         ld   a,(DC56)
 RO18:62F0 3C               inc  a
 RO18:62F1 FE 02            cp   a,02
 RO18:62F3 28 04            jr   z,62F9         // Rotation branch
 RO18:62F5 3E 01            ld   a,01
 RO18:62F7 18 01            jr   62FA
 RO18:62F9 AF               xor  a
 RO18:62FA EA 56 DC         ld   (DC56),a
 RO18:62FD CD 5A 62         call 625A           // Manages graphics involving highlighted choice on IR Comm Send/Get Choice screen
 RO18:6300 18 B6            jr   62B8           // Further standby for button input after pressing Down
 RO18:6302 CB 47            bit  0,a            // A
 RO18:6304 28 0A            jr   z,6310
 RO18:6306 3E 02            ld   a,02
 RO18:6308 CD 44 38         call 3844
 RO18:630B FA 56 DC         ld   a,(DC56)
 RO18:630E 18 0F            jr   631F           // Ends with A = Choice for A Button press
 RO18:6310 CB 4F            bit  1,a            // B
 RO18:6312 28 09            jr   z,631D
 RO18:6314 3E 0C            ld   a,0C
 RO18:6316 CD 44 38         call 3844
 RO18:6319 3E FF            ld   a,FF
 RO18:631B 18 02            jr   631F           // Ends with A = -1 for B Button press
 RO18:631D 18 99            jr   62B8           // Standby for button input
 RO18:631F F5               push af
 RO18:6320 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO18:6323 CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO18:6326 F1               pop  af
 RO18:6327 57               ld   d,a
 RO18:6328 F1               pop  af
 RO18:6329 E0 82            ld   (ff00+82),a
 RO18:632B E0 70            ld   (ff00+70),a
 RO18:632D 7A               ld   a,d
 RO18:632E C9               ret                 // IR Comm Send/Get Selection master control; ends with A = 0 for Send, 1 for Get, or -1 for Back

 RO18:632F 06 05
 RO18:6331 CF FF F4 60 61 91 89 00
 RO18:6339 06 08
 RO18:633B CF FF F4 60 83 87 63 00

 RO18:6343 49 52 72 63 6C 8D 60 72 66 AF 73 01
 RO18:634F 94 9F 8D 8E 72 68 AF 70 CF FF F4 EB 2D C0 60 01
 RO18:635F 61 62 73 76 61 91 7F 6D 2E 00

 RO18:6369 49 52 72 63 6C 8D 60 72 66 AF 73 01
 RO18:6375 CF FF F4 EB 2D C0 60 01
 RO18:637D 61 62 73 66 87 83 87 62 7F 6D 2E 00

 RO18:6389 FA 5A DC         ld   a,(DC5A)
 RO18:638C 06 18            ld   b,18
 RO18:638E CD 95 29         call 2995           // HL = A * B
 RO18:6391 7D               ld   a,l
 RO18:6392 C6 3C            add  a,3C
 RO18:6394 4F               ld   c,a
 RO18:6395 06 28            ld   b,28
 RO18:6397 FA 5B DC         ld   a,(DC5B)       // Pointing Right Bullet on VS Map Type Select
 RO18:639A CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:639D C9               ret                 // Establishes graphic coordinates of Pointing Right Bullet on VS Map Type Select
 RO18:639E CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO18:63A1 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO18:63A4 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO18:63A7 EF 10 A8 68                          // Sets up basic covered graphics values
 RO18:63AB EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO18:63AF CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO18:63B2 AF               xor  a
 RO18:63B3 E0 95            ld   (ff00+95),a
 RO18:63B5 E0 96            ld   (ff00+96),a
 RO18:63B7 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO18:63BA 3E 00            ld   a,00
 RO18:63BC E0 83            ld   (ff00+83),a
 RO18:63BE E0 4F            ld   (ff00+4F),a
 RO18:63C0 3E 00            ld   a,00
 RO18:63C2 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO18:63C6 3E 01            ld   a,01
 RO18:63C8 E0 83            ld   (ff00+83),a
 RO18:63CA E0 4F            ld   (ff00+4F),a
 RO18:63CC FA 44 CC         ld   a,(CC44)
 RO18:63CF FE 00            cp   a,00           // MAN
 RO18:63D1 28 02            jr   z,63D5
 RO18:63D3 18 1D            jr   63F2
 RO18:63D5 11 F2 76         ld   de,76F2        // "MAN"
 RO18:63D8 21 00 90         ld   hl,9000
 RO18:63DB 01 00 01         ld   bc,0100
 RO18:63DE EF 15 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:63E2 3E 0A            ld   a,0A
 RO18:63E4 01 01 06         ld   bc,0601
 RO18:63E7 11 02 08         ld   de,0802
 RO18:63EA 26 00            ld   h,00
 RO18:63EC EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:63F0 18 1B            jr   640D
 RO18:63F2 11 F2 77         ld   de,77F2        // "IR COMM"
 RO18:63F5 21 00 90         ld   hl,9000
 RO18:63F8 01 00 01         ld   bc,0100
 RO18:63FB EF 15 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:63FF 3E 0A            ld   a,0A
 RO18:6401 01 01 06         ld   bc,0601
 RO18:6404 11 02 08         ld   de,0802
 RO18:6407 26 00            ld   h,00
 RO18:6409 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:640D 11 C1 67         ld   de,67C1        // "B: Back"
 RO18:6410 21 00 91         ld   hl,9100
 RO18:6413 01 40 00         ld   bc,0040
 RO18:6416 EF 14 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:641A 3E 00            ld   a,00
 RO18:641C 06 08            ld   b,08
 RO18:641E 21 42 79         ld   hl,7942
 RO18:6421 0E 15            ld   c,15
 RO18:6423 CD D9 06         call 06D9           // ($C4E0) to ($C51F) hold $15:($7942) to $15:($7981)
 RO18:6426 CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO18:6429 CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO18:642C 01 04 04         ld   bc,0404
 RO18:642F 11 03 0C         ld   de,0C03
 RO18:6432 EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:6436 F0 83            ld   a,(ff00+83)
 RO18:6438 F5               push af
 RO18:6439 3E 01            ld   a,01
 RO18:643B E0 83            ld   (ff00+83),a
 RO18:643D E0 4F            ld   (ff00+4F),a
 RO18:643F 01 05 05         ld   bc,0505
 RO18:6442 11 01 0A         ld   de,0A01
 RO18:6445 AF               xor  a
 RO18:6446 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:644A F1               pop  af
 RO18:644B E0 83            ld   (ff00+83),a
 RO18:644D E0 4F            ld   (ff00+4F),a
 RO18:644F 21 CC 65         ld   hl,65CC        // "STANDARD MODE"
 RO18:6452 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:6455 01 07 04         ld   bc,0407
 RO18:6458 11 03 0C         ld   de,0C03
 RO18:645B EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO18:645F F0 83            ld   a,(ff00+83)
 RO18:6461 F5               push af
 RO18:6462 3E 01            ld   a,01
 RO18:6464 E0 83            ld   (ff00+83),a
 RO18:6466 E0 4F            ld   (ff00+4F),a
 RO18:6468 01 08 05         ld   bc,0508
 RO18:646B 11 01 0A         ld   de,0A01
 RO18:646E AF               xor  a
 RO18:646F EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:6473 F1               pop  af
 RO18:6474 E0 83            ld   (ff00+83),a
 RO18:6476 E0 4F            ld   (ff00+4F),a
 RO18:6478 21 D8 65         ld   hl,65D8        // "EDIT"
 RO18:647B CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:647E 01 0C 01         ld   bc,010C
 RO18:6481 11 05 12         ld   de,1205        // Description Text Table
 RO18:6484 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO18:6488 F0 83            ld   a,(ff00+83)
 RO18:648A F5               push af
 RO18:648B 3E 01            ld   a,01
 RO18:648D E0 83            ld   (ff00+83),a
 RO18:648F E0 4F            ld   (ff00+4F),a
 RO18:6491 01 0D 02         ld   bc,020D
 RO18:6494 11 03 10         ld   de,1003
 RO18:6497 AF               xor  a
 RO18:6498 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:649C F1               pop  af
 RO18:649D E0 83            ld   (ff00+83),a
 RO18:649F E0 4F            ld   (ff00+4F),a
 RO18:64A1 3E 0A            ld   a,0A
 RO18:64A3 01 11 0F         ld   bc,0F11
 RO18:64A6 11 01 01         ld   de,0101
 RO18:64A9 26 10            ld   h,10           // "B"
 RO18:64AB EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:64AF 3E 08            ld   a,08
 RO18:64B1 01 11 10         ld   bc,1011
 RO18:64B4 11 01 03         ld   de,0301
 RO18:64B7 26 11            ld   h,11           // "Back"
 RO18:64B9 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO18:64BD 3E 20            ld   a,20
 RO18:64BF 0E 00            ld   c,00
 RO18:64C1 06 15            ld   b,15
 RO18:64C3 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO18:64C6 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:64C9 EA 5B DC         ld   (DC5B),a
 RO18:64CC CD 89 63         call 6389           // Establishes graphic coordinates of Pointing Right Bullet on VS Map Type Select
 RO18:64CF CD D3 64         call 64D3           // Print description of highlighted choice on VS Map Type Selection
 RO18:64D2 C9               ret  
 RO18:64D3 F0 83            ld   a,(ff00+83)
 RO18:64D5 F5               push af
 RO18:64D6 3E 00            ld   a,00
 RO18:64D8 E0 83            ld   (ff00+83),a
 RO18:64DA E0 4F            ld   (ff00+4F),a
 RO18:64DC 01 0D 02         ld   bc,020D
 RO18:64DF 11 03 10         ld   de,1003
 RO18:64E2 AF               xor  a
 RO18:64E3 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO18:64E7 F1               pop  af
 RO18:64E8 E0 83            ld   (ff00+83),a
 RO18:64EA E0 4F            ld   (ff00+4F),a
 RO18:64EC FA 5A DC         ld   a,(DC5A)       // Highlighted Choice
 RO18:64EF FE 00            cp   a,00
 RO18:64F1 28 02            jr   z,64F5
 RO18:64F3 18 05            jr   64FA
 RO18:64F5 21 04 65         ld   hl,6504        // Standard Mode Map
 RO18:64F8 18 03            jr   64FD
 RO18:64FA 21 21 65         ld   hl,6521        // Edit Mode Map
 RO18:64FD 01 0D 02         ld   bc,020D
 RO18:6500 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO18:6503 C9               ret                 // Print description of highlighted choice on VS Map Type Selection

 RO18:6504 BD C0 DD E8 2D EC D3 2D EC 79 01
 RO18:650F CF FF F4 60 64 87 8D 9B 01
 RO18:6518 70 62 6E 8D 6C 7F 6D 2E 00

 RO18:6521 B4 EB F8 FF C4 6C 70 CF FF F4 84 01
 RO18:652D E8 B3 DD DB 2D EC 6C 70 CF FF F4 60 01
 RO18:653A 64 87 8D 9B 70 62 6E 8D 6C 7F 6D 2E 00

 RO18:6547 F0 82            ld   a,(ff00+82)
 RO18:6549 F5               push af
 RO18:654A 3E 04            ld   a,04
 RO18:654C E0 82            ld   (ff00+82),a
 RO18:654E E0 70            ld   (ff00+70),a
 RO18:6550 CD 9E 63         call 639E           // Establishes graphics of VS Map Type Select as a whole
 RO18:6553 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO18:6556 CD A2 05         call 05A2           // Button update, next frame
 RO18:6559 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:655C 3E 00            ld   a,00
 RO18:655E EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:6562 F0 92            ld   a,(ff00+92)
 RO18:6564 CB 47            bit  0,a            // A
 RO18:6566 28 0C            jr   z,6574
 RO18:6568 FA 5B DC         ld   a,(DC5B)       // Pointing Right Bullet on VS Map Type Select
 RO18:656B EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO18:656F FA 5A DC         ld   a,(DC5A)
 RO18:6572 18 48            jr   65BC
 RO18:6574 CB 4F            bit  1,a            // B
 RO18:6576 28 09            jr   z,6581
 RO18:6578 3E 0C            ld   a,0C
 RO18:657A CD 44 38         call 3844
 RO18:657D 3E FF            ld   a,FF
 RO18:657F 18 3B            jr   65BC
 RO18:6581 CB 77            bit  6,a            // Up
 RO18:6583 28 1A            jr   z,659F
 RO18:6585 3E 01            ld   a,01
 RO18:6587 CD 44 38         call 3844
 RO18:658A FA 5A DC         ld   a,(DC5A)
 RO18:658D 3D               dec  a
 RO18:658E FE FF            cp   a,FF
 RO18:6590 20 02            jr   nz,6594
 RO18:6592 3E 01            ld   a,01
 RO18:6594 EA 5A DC         ld   (DC5A),a
 RO18:6597 CD 89 63         call 6389           // Establishes graphic coordinates of Pointing Right Bullet on VS Map Type Select
 RO18:659A CD D3 64         call 64D3           // Print description of highlighted choice on VS Map Type Selection
 RO18:659D 18 B7            jr   6556
 RO18:659F CB 7F            bit  7,a            // Down
 RO18:65A1 28 17            jr   z,65BA
 RO18:65A3 3E 01            ld   a,01
 RO18:65A5 CD 44 38         call 3844
 RO18:65A8 FA 5A DC         ld   a,(DC5A)
 RO18:65AB 3C               inc  a
 RO18:65AC FE 02            cp   a,02
 RO18:65AE 20 01            jr   nz,65B1
 RO18:65B0 AF               xor  a
 RO18:65B1 EA 5A DC         ld   (DC5A),a
 RO18:65B4 CD 89 63         call 6389           // Establishes graphic coordinates of Pointing Right Bullet on VS Map Type Select
 RO18:65B7 CD D3 64         call 64D3           // Print description of highlighted choice on VS Map Type Selection
 RO18:65BA 18 9A            jr   6556
 RO18:65BC F5               push af
 RO18:65BD CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO18:65C0 CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO18:65C3 F1               pop  af
 RO18:65C4 57               ld   d,a
 RO18:65C5 F1               pop  af
 RO18:65C6 E0 82            ld   (ff00+82),a
 RO18:65C8 E0 70            ld   (ff00+70),a
 RO18:65CA 7A               ld   a,d
 RO18:65CB C9               ret  

 RO18:65CC 05 05
 RO18:65CE BD C0 DD E8 2D EC D3 2D EC 00

 RO18:65D8 05 08
 RO18:65DA B4 EB F8 FF C4 00

 RO18:65E0 F0 82            ld   a,(ff00+82)
 RO18:65E2 F5               push af
 RO18:65E3 3E 03            ld   a,03
 RO18:65E5 E0 82            ld   (ff00+82),a
 RO18:65E7 E0 70            ld   (ff00+70),a
 RO18:65E9 AF               xor  a
 RO18:65EA EA 58 DC         ld   (DC58),a
 RO18:65ED EA 59 DC         ld   (DC59),a
 RO18:65F0 EA 5A DC         ld   (DC5A),a
 RO18:65F3 EA 5B DC         ld   (DC5B),a
 RO18:65F6 EA 5C DC         ld   (DC5C),a
 RO18:65F9 EA 5D DC         ld   (DC5D),a
 RO18:65FC EA 5E DC         ld   (DC5E),a
 RO18:65FF EA 5F DC         ld   (DC5F),a
 RO18:6602 EA 60 DC         ld   (DC60),a
 RO18:6605 EA 61 DC         ld   (DC61),a
 RO18:6608 EA 62 DC         ld   (DC62),a
 RO18:660B EA 63 DC         ld   (DC63),a
 RO18:660E EA 64 DC         ld   (DC64),a
 RO18:6611 EA 7A DC         ld   (DC7A),a
 RO18:6614 F1               pop  af
 RO18:6615 E0 82            ld   (ff00+82),a
 RO18:6617 E0 70            ld   (ff00+70),a
 RO18:6619 C9               ret                 // Blanks all Unit List memory bytes
 RO18:661A F0 82            ld   a,(ff00+82)
 RO18:661C F5               push af
 RO18:661D 3E 03            ld   a,03
 RO18:661F E0 82            ld   (ff00+82),a
 RO18:6621 E0 70            ld   (ff00+70),a
 RO18:6623 FA 33 C6         ld   a,(C633)
 RO18:6626 E6 01            and  a,01
 RO18:6628 28 02            jr   z,662C
 RO18:662A 18 1A            jr   6646           // Branches for White Moon
 RO18:662C FA 5C DC         ld   a,(DC5C)
 RO18:662F EA 58 DC         ld   (DC58),a
 RO18:6632 FA 5D DC         ld   a,(DC5D)
 RO18:6635 EA 59 DC         ld   (DC59),a
 RO18:6638 FA 5E DC         ld   a,(DC5E)
 RO18:663B EA 5A DC         ld   (DC5A),a
 RO18:663E FA 5F DC         ld   a,(DC5F)
 RO18:6641 EA 5B DC         ld   (DC5B),a
 RO18:6644 18 18            jr   665E
 RO18:6646 FA 60 DC         ld   a,(DC60)
 RO18:6649 EA 58 DC         ld   (DC58),a
 RO18:664C FA 61 DC         ld   a,(DC61)
 RO18:664F EA 59 DC         ld   (DC59),a
 RO18:6652 FA 62 DC         ld   a,(DC62)
 RO18:6655 EA 5A DC         ld   (DC5A),a
 RO18:6658 FA 63 DC         ld   a,(DC63)
 RO18:665B EA 5B DC         ld   (DC5B),a
 RO18:665E F1               pop  af
 RO18:665F E0 82            ld   (ff00+82),a
 RO18:6661 E0 70            ld   (ff00+70),a
 RO18:6663 C9               ret                 // Grabs active player's stored memory for Unit List
 RO18:6664 F0 82            ld   a,(ff00+82)
 RO18:6666 F5               push af
 RO18:6667 3E 03            ld   a,03
 RO18:6669 E0 82            ld   (ff00+82),a
 RO18:666B E0 70            ld   (ff00+70),a
 RO18:666D FA 33 C6         ld   a,(C633)
 RO18:6670 E6 01            and  a,01
 RO18:6672 28 02            jr   z,6676
 RO18:6674 18 1A            jr   6690
 RO18:6676 FA 58 DC         ld   a,(DC58)
 RO18:6679 EA 5C DC         ld   (DC5C),a
 RO18:667C FA 59 DC         ld   a,(DC59)
 RO18:667F EA 5D DC         ld   (DC5D),a
 RO18:6682 FA 5A DC         ld   a,(DC5A)
 RO18:6685 EA 5E DC         ld   (DC5E),a
 RO18:6688 FA 5B DC         ld   a,(DC5B)
 RO18:668B EA 5F DC         ld   (DC5F),a
 RO18:668E 18 18            jr   66A8
 RO18:6690 FA 58 DC         ld   a,(DC58)
 RO18:6693 EA 60 DC         ld   (DC60),a
 RO18:6696 FA 59 DC         ld   a,(DC59)
 RO18:6699 EA 61 DC         ld   (DC61),a
 RO18:669C FA 5A DC         ld   a,(DC5A)
 RO18:669F EA 62 DC         ld   (DC62),a
 RO18:66A2 FA 5B DC         ld   a,(DC5B)
 RO18:66A5 EA 63 DC         ld   (DC63),a
 RO18:66A8 F1               pop  af
 RO18:66A9 E0 82            ld   (ff00+82),a
 RO18:66AB E0 70            ld   (ff00+70),a
 RO18:66AD C9               ret                 // Stores information of Unit List into active player's stored memory
 RO18:66AE CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO18:66B1 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO18:66B4 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO18:66B7 CD 94 67         call 6794           // Establishes basic stats for units on Unit list
 RO18:66BA FA 33 C6         ld   a,(C633)
 RO18:66BD E6 01            and  a,01
 RO18:66BF 28 02            jr   z,66C3
 RO18:66C1 18 05            jr   66C8
 RO18:66C3 FA 09 CD         ld   a,(CD09)
 RO18:66C6 18 03            jr   66CB
 RO18:66C8 FA 0A CD         ld   a,(CD0A)
 RO18:66CB EA 66 DC         ld   (DC66),a       // ($DC66) is active player's headcount
 RO18:66CE EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:66D2 EF 10 A8 68                          // Sets up basic covered graphics values
 RO18:66D6 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO18:66DA CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO18:66DD AF               xor  a
 RO18:66DE E0 95            ld   (ff00+95),a
 RO18:66E0 E0 96            ld   (ff00+96),a
 RO18:66E2 EA 80 DC         ld   (DC80),a
 RO18:66E5 EA 81 DC         ld   (DC81),a
 RO18:66E8 EA 82 DC         ld   (DC82),a
 RO18:66EB EA 83 DC         ld   (DC83),a
 RO18:66EE EA 84 DC         ld   (DC84),a
 RO18:66F1 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO18:66F4 3E 00            ld   a,00
 RO18:66F6 E0 83            ld   (ff00+83),a
 RO18:66F8 E0 4F            ld   (ff00+4F),a
 RO18:66FA 3E 00            ld   a,00
 RO18:66FC EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO18:6700 3E 00            ld   a,00
 RO18:6702 06 08            ld   b,08
 RO18:6704 21 78 7E         ld   hl,7E78
 RO18:6707 CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($7E78) to ($7EB7)
 RO18:670A CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO18:670D 3E 01            ld   a,01
 RO18:670F 06 01            ld   b,01
 RO18:6711 21 C2 6C         ld   hl,6CC2
 RO18:6714 0E 15            ld   c,15
 RO18:6716 CD D9 06         call 06D9           // ($C4E0 + A * 8) to ($C4E0 + A * 8 + B * 8 - 1) hold C:(HL) to C:(HL + B * 8 - 1)
 RO18:6719 CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO18:671C 3E 05            ld   a,05
 RO18:671E EF 0B 5D 76                          // Establishes faction color palettes in ($C4E0) table (A is number of palettes skipped in table)
 RO18:6722 F0 83            ld   a,(ff00+83)
 RO18:6724 F5               push af
 RO18:6725 3E 01            ld   a,01
 RO18:6727 E0 83            ld   (ff00+83),a
 RO18:6729 E0 4F            ld   (ff00+4F),a
 RO18:672B 11 B8 7A         ld   de,7AB8
 RO18:672E 21 00 90         ld   hl,9000
 RO18:6731 01 C0 03         ld   bc,03C0
 RO18:6734 CD 50 3B         call 3B50           // VRA1($9000~$93BF) = ($7AB8~$7E77)
 RO18:6737 21 00 90         ld   hl,9000
 RO18:673A 01 10 00         ld   bc,0010
 RO18:673D AF               xor  a
 RO18:673E CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO18:6741 F1               pop  af
 RO18:6742 E0 83            ld   (ff00+83),a
 RO18:6744 E0 4F            ld   (ff00+4F),a
 RO18:6746 CD 98 67         call 6798           // Establishes information graphics on Unit List
 RO18:6749 F0 83            ld   a,(ff00+83)
 RO18:674B F5               push af
 RO18:674C 3E 20            ld   a,20
 RO18:674E 0E 00            ld   c,00
 RO18:6750 06 15            ld   b,15
 RO18:6752 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO18:6755 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:6758 EA 53 DC         ld   (DC53),a       // Pointing Right Bullet
 RO18:675B CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:675E 3E 20            ld   a,20
 RO18:6760 0E 00            ld   c,00
 RO18:6762 06 15            ld   b,15
 RO18:6764 11 B4 6F         ld   de,6FB4        // Pointing Up Mini-Arrow
 RO18:6767 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:676A EA 54 DC         ld   (DC54),a
 RO18:676D 01 2C 58         ld   bc,582C
 RO18:6770 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:6773 3E 20            ld   a,20
 RO18:6775 0E 00            ld   c,00
 RO18:6777 06 15            ld   b,15
 RO18:6779 11 8A 6F         ld   de,6F8A        // Pointing Down Mini-Arrow
 RO18:677C CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:677F EA 55 DC         ld   (DC55),a
 RO18:6782 01 94 58         ld   bc,5894
 RO18:6785 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:6788 F1               pop  af
 RO18:6789 E0 83            ld   (ff00+83),a
 RO18:678B E0 4F            ld   (ff00+4F),a
 RO18:678D 01 01 01         ld   bc,0101
 RO18:6790 CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates BC
 RO18:6793 C9               ret                 // Establishes Unit List graphics as a whole
 RO18:6794 CD 02 7F         call 7F02           // Establishes basic stats for units on Unit list
 RO18:6797 C9               ret  
 RO18:6798 01 00 00         ld   bc,0000
 RO18:679B 11 03 0D         ld   de,0D03
 RO18:679E EF 10 09 6A                          // Tile placement and coloring handled for [$9800 0,0] table size 13x3 using [$DC6C] and [$DC6D] as the base
 RO18:67A2 F0 83            ld   a,(ff00+83)
 RO18:67A4 F5               push af
 RO18:67A5 3E 01            ld   a,01
 RO18:67A7 E0 83            ld   (ff00+83),a
 RO18:67A9 E0 4F            ld   (ff00+4F),a
 RO18:67AB AF               xor  a
 RO18:67AC 01 01 01         ld   bc,0101
 RO18:67AF 11 01 0B         ld   de,0B01
 RO18:67B2 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 1~11,1
 RO18:67B6 F1               pop  af
 RO18:67B7 E0 83            ld   (ff00+83),a
 RO18:67B9 E0 4F            ld   (ff00+4F),a
 RO18:67BB 01 00 0D         ld   bc,0D00
 RO18:67BE 11 03 07         ld   de,0703
 RO18:67C1 EF 10 09 6A                          // Tile placement and coloring handled for [$9800 13,0] table size 7x3 using [$DC6C] and [$DC6D] as the base
 RO18:67C5 CD 72 6C         call 6C72           // Establishes unit count text in Unit List
 RO18:67C8 F0 83            ld   a,(ff00+83)
 RO18:67CA F5               push af
 RO18:67CB 3E 01            ld   a,01
 RO18:67CD E0 83            ld   (ff00+83),a
 RO18:67CF E0 4F            ld   (ff00+4F),a
 RO18:67D1 AF               xor  a
 RO18:67D2 01 01 0E         ld   bc,0E01
 RO18:67D5 11 01 05         ld   de,0501
 RO18:67D8 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 14~18,1
 RO18:67DC F1               pop  af
 RO18:67DD E0 83            ld   (ff00+83),a
 RO18:67DF E0 4F            ld   (ff00+4F),a
 RO18:67E1 01 03 01         ld   bc,0103
 RO18:67E4 11 0E 12         ld   de,120E
 RO18:67E7 EF 10 09 6A                          // Tile placement and coloring handled for [$9800 1,3] table size 18x14 using [$DC6C] and [$DC6D] as the base
 RO18:67EB F0 83            ld   a,(ff00+83)
 RO18:67ED F5               push af
 RO18:67EE 3E 01            ld   a,01
 RO18:67F0 E0 83            ld   (ff00+83),a
 RO18:67F2 E0 4F            ld   (ff00+4F),a
 RO18:67F4 AF               xor  a
 RO18:67F5 01 04 02         ld   bc,0204
 RO18:67F8 11 0C 10         ld   de,100C
 RO18:67FB EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 2~17,4~15
 RO18:67FF F1               pop  af
 RO18:6800 E0 83            ld   (ff00+83),a
 RO18:6802 E0 4F            ld   (ff00+4F),a
 RO18:6804 3E 0A            ld   a,0A
 RO18:6806 01 11 02         ld   bc,0211
 RO18:6809 11 01 03         ld   de,0301
 RO18:680C 26 04            ld   h,04           // "START"
 RO18:680E EF 15 FD 67                          // (VRA0:$9800 2~4,17) = 4~6, (VRA1:$9800 2~4,17) = 10
 RO18:6812 3E 08            ld   a,08
 RO18:6814 01 11 05         ld   bc,0511
 RO18:6817 11 01 05         ld   de,0501
 RO18:681A 26 07            ld   h,07           // "Organize"
 RO18:681C EF 15 FD 67                          // (VRA0:$9800 5~9,17) = 7~11, (VRA1:$9800 5~9,17) = 8
 RO18:6820 3E 0A            ld   a,0A
 RO18:6822 01 11 0E         ld   bc,0E11
 RO18:6825 11 01 01         ld   de,0101
 RO18:6828 26 0C            ld   h,0C           // "B"
 RO18:682A EF 15 FD 67                          // (VRA0:$9800 14,17) = 12, (VRA1:$9800 14,17) = 10
 RO18:682E 3E 08            ld   a,08
 RO18:6830 01 11 0F         ld   bc,0F11
 RO18:6833 11 01 03         ld   de,0301
 RO18:6836 26 0D            ld   h,0D           // "Back"
 RO18:6838 EF 15 FD 67                          // (VRA0:$9800 15~17,17) = 13~15, (VRA1:$9800 15~17,17) = 8
 RO18:683C 01 05 04         ld   bc,0405
 RO18:683F EF 17 1B 73                          // Establishes 14 underscore characters at coordinates BC
 RO18:6843 01 07 04         ld   bc,0407
 RO18:6846 EF 17 1B 73                          // Establishes 14 underscore characters at coordinates BC
 RO18:684A 01 09 04         ld   bc,0409
 RO18:684D EF 17 1B 73                          // Establishes 14 underscore characters at coordinates BC
 RO18:6851 01 0B 04         ld   bc,040B
 RO18:6854 EF 17 1B 73                          // Establishes 14 underscore characters at coordinates BC
 RO18:6858 01 0D 04         ld   bc,040D
 RO18:685B EF 17 1B 73                          // Establishes 14 underscore characters at coordinates BC
 RO18:685F 01 0F 04         ld   bc,040F
 RO18:6862 EF 17 1B 73                          // Establishes 14 underscore characters at coordinates BC
 RO18:6866 CD 73 68         call 6873           // Establishes stat icons for units on Unit List
 RO18:6869 CD 1B 6A         call 6A1B           // Establishes printing information foundation on Unit List
 RO18:686C CD 84 6A         call 6A84           // Prints listed units' stats on Unit List
 RO18:686F CD 37 35         call 3537           // Establishes all unchecked text into appropriate VRAM bank; bit 7,($C00F) being inactive or LY => 142 stops after only one text portion and leaves it considered unchecked
 RO18:6872 C9               ret                 // Establishes information graphics on Unit List
 RO18:6873 AF               xor  a
 RO18:6874 EA 65 DC         ld   (DC65),a
 RO18:6877 FA 65 DC         ld   a,(DC65)       // Loop begins here
 RO18:687A FE 06            cp   a,06
 RO18:687C 28 59            jr   z,68D7         // Ends immediately after 6 cycles
 RO18:687E F5               push af
 RO18:687F FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6882 4F               ld   c,a
 RO18:6883 F1               pop  af
 RO18:6884 B9               cp   c
 RO18:6885 28 50            jr   z,68D7         // End immediately if already at headcount
 RO18:6887 26 00            ld   h,00
 RO18:6889 2E 0F            ld   l,0F           // HL = 15
 RO18:688B 01 04 05         ld   bc,0504
 RO18:688E FA 65 DC         ld   a,(DC65)
 RO18:6891 87               add  a
 RO18:6892 81               add  c
 RO18:6893 4F               ld   c,a            // 5,4 + cycles * 2
 RO18:6894 16 02            ld   d,02
 RO18:6896 3E 0B            ld   a,0B
 RO18:6898 11 01 01         ld   de,0101
 RO18:689B 26 01            ld   h,01           // Heart for HP
 RO18:689D EF 15 FD 67                          // (VRA0:$9800 5,4 + cycles * 2) = 1, (VRA1:$9800 5,4 + cycles * 2) = 11
 RO18:68A1 01 04 0A         ld   bc,0A04
 RO18:68A4 FA 65 DC         ld   a,(DC65)
 RO18:68A7 87               add  a
 RO18:68A8 81               add  c
 RO18:68A9 4F               ld   c,a
 RO18:68AA 16 02            ld   d,02
 RO18:68AC 3E 0B            ld   a,0B
 RO18:68AE 11 01 01         ld   de,0101
 RO18:68B1 26 02            ld   h,02           // Fuel Can
 RO18:68B3 EF 15 FD 67                          // (VRA0:$9800 10,4 + cycles * 2) = 2, (VRA1:$9800 10,4 + cycles * 2) = 11
 RO18:68B7 01 04 0F         ld   bc,0F04
 RO18:68BA FA 65 DC         ld   a,(DC65)
 RO18:68BD 87               add  a
 RO18:68BE 81               add  c
 RO18:68BF 4F               ld   c,a
 RO18:68C0 16 02            ld   d,02
 RO18:68C2 3E 0B            ld   a,0B
 RO18:68C4 11 01 01         ld   de,0101
 RO18:68C7 26 03            ld   h,03           // Level
 RO18:68C9 EF 15 FD 67                          // (VRA0:$9800 15,4 + cycles * 2) = 3, (VRA1:$9800 15,4 + cycles * 2) = 11
 RO18:68CD FA 65 DC         ld   a,(DC65)
 RO18:68D0 3C               inc  a
 RO18:68D1 EA 65 DC         ld   (DC65),a
 RO18:68D4 C3 77 68         jp   6877
 RO18:68D7 C9               ret                 // Establishes stat icons for units on Unit List
 RO18:68D8 FA 5B DC         ld   a,(DC5B)
 RO18:68DB 4F               ld   c,a
 RO18:68DC FA 58 DC         ld   a,(DC58)
 RO18:68DF 81               add  c              // A = ($DC58) + ($DC5B)
 RO18:68E0 F5               push af
 RO18:68E1 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:68E4 4F               ld   c,a            // C = Active player's unit headcount
 RO18:68E5 F1               pop  af
 RO18:68E6 B9               cp   c
 RO18:68E7 38 01            jr   c,68EA
 RO18:68E9 91               sub  c
 RO18:68EA C9               ret                 // A is set to highlighted unit on Unit List
 RO18:68EB E5               push hl
 RO18:68EC C5               push bc
 RO18:68ED FA 6D DC         ld   a,(DC6D)
 RO18:68F0 3C               inc  a
 RO18:68F1 4F               ld   c,a
 RO18:68F2 06 03            ld   b,03
 RO18:68F4 FA CB FF         ld   a,(FFCB)
 RO18:68F7 F5               push af
 RO18:68F8 C5               push bc
 RO18:68F9 AF               xor  a
 RO18:68FA EA CB FF         ld   (FFCB),a
 RO18:68FD 3E 2F            ld   a,2F           // Reserve
 RO18:68FF CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO18:6902 C1               pop  bc
 RO18:6903 3E 01            ld   a,01
 RO18:6905 EA CB FF         ld   (FFCB),a
 RO18:6908 3E 0B            ld   a,0B
 RO18:690A CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO18:690D F1               pop  af
 RO18:690E EA CB FF         ld   (FFCB),a
 RO18:6911 C1               pop  bc
 RO18:6912 E1               pop  hl
 RO18:6913 C9               ret                 // Reserve flag for currently printing stats unit established
 RO18:6914 E5               push hl
 RO18:6915 C5               push bc
 RO18:6916 FA 6D DC         ld   a,(DC6D)
 RO18:6919 3C               inc  a
 RO18:691A 4F               ld   c,a
 RO18:691B 06 03            ld   b,03
 RO18:691D FA CB FF         ld   a,(FFCB)
 RO18:6920 F5               push af
 RO18:6921 C5               push bc
 RO18:6922 AF               xor  a
 RO18:6923 EA CB FF         ld   (FFCB),a
 RO18:6926 3E 30            ld   a,30           // Transport
 RO18:6928 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO18:692B C1               pop  bc
 RO18:692C 3E 01            ld   a,01
 RO18:692E EA CB FF         ld   (FFCB),a
 RO18:6931 3E 0B            ld   a,0B
 RO18:6933 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO18:6936 F1               pop  af
 RO18:6937 EA CB FF         ld   (FFCB),a
 RO18:693A C1               pop  bc
 RO18:693B E1               pop  hl
 RO18:693C C9               ret                 // "Transport" flag for currently printing stats unit established
 RO18:693D E5               push hl
 RO18:693E C5               push bc
 RO18:693F FA 6D DC         ld   a,(DC6D)
 RO18:6942 3C               inc  a
 RO18:6943 4F               ld   c,a
 RO18:6944 06 03            ld   b,03
 RO18:6946 FA CB FF         ld   a,(FFCB)
 RO18:6949 F5               push af
 RO18:694A C5               push bc
 RO18:694B AF               xor  a
 RO18:694C EA CB FF         ld   (FFCB),a
 RO18:694F 3E 31            ld   a,31           // End Turn
 RO18:6951 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO18:6954 C1               pop  bc
 RO18:6955 3E 01            ld   a,01
 RO18:6957 EA CB FF         ld   (FFCB),a
 RO18:695A 3E 0B            ld   a,0B
 RO18:695C CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO18:695F F1               pop  af
 RO18:6960 EA CB FF         ld   (FFCB),a
 RO18:6963 C1               pop  bc
 RO18:6964 E1               pop  hl
 RO18:6965 C9               ret                 // "End Turn" flag for currently printing stats unit established
 RO18:6966 E5               push hl
 RO18:6967 C5               push bc
 RO18:6968 FA 6D DC         ld   a,(DC6D)
 RO18:696B 3C               inc  a
 RO18:696C 4F               ld   c,a
 RO18:696D 06 03            ld   b,03
 RO18:696F FA CB FF         ld   a,(FFCB)
 RO18:6972 F5               push af
 RO18:6973 C5               push bc
 RO18:6974 AF               xor  a
 RO18:6975 EA CB FF         ld   (FFCB),a
 RO18:6978 3E 32            ld   a,32           // End+Transport
 RO18:697A CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 + C / 8, A; [$FFCA] incremented
 RO18:697D C1               pop  bc
 RO18:697E 3E 01            ld   a,01
 RO18:6980 EA CB FF         ld   (FFCB),a
 RO18:6983 3E 0B            ld   a,0B
 RO18:6985 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 24 + C / 8, A; [$FFCA] incremented
 RO18:6988 F1               pop  af
 RO18:6989 EA CB FF         ld   (FFCB),a
 RO18:698C C1               pop  bc
 RO18:698D E1               pop  hl
 RO18:698E C9               ret                 // "End Turn + Transport" flag for currently printing stats unit established
 RO18:698F 6F               ld   l,a
 RO18:6990 26 00            ld   h,00
 RO18:6992 29               add  hl,hl
 RO18:6993 29               add  hl,hl
 RO18:6994 29               add  hl,hl
 RO18:6995 29               add  hl,hl
 RO18:6996 11 00 D0         ld   de,D000
 RO18:6999 19               add  hl,de
 RO18:699A 01 05 00         ld   bc,0005
 RO18:699D 09               add  hl,bc          // Load Count
 RO18:699E F0 82            ld   a,(ff00+82)
 RO18:69A0 F5               push af
 RO18:69A1 3E 03            ld   a,03
 RO18:69A3 E0 82            ld   (ff00+82),a
 RO18:69A5 E0 70            ld   (ff00+70),a
 RO18:69A7 7E               ld   a,(hl)
 RO18:69A8 57               ld   d,a
 RO18:69A9 F1               pop  af
 RO18:69AA E0 82            ld   (ff00+82),a
 RO18:69AC E0 70            ld   (ff00+70),a
 RO18:69AE 7A               ld   a,d
 RO18:69AF C9               ret                 // A = Unit's Load Count
 RO18:69B0 E5               push hl
 RO18:69B1 C5               push bc
 RO18:69B2 FA 6C DC         ld   a,(DC6C)       // #
 RO18:69B5 0E 03            ld   c,03
 RO18:69B7 EF 12 66 40                          // A = Unit's Status
 RO18:69BB EA 7C DC         ld   (DC7C),a
 RO18:69BE FA 6C DC         ld   a,(DC6C)       // #
 RO18:69C1 CD 8F 69         call 698F           // A = Unit's Load Count
 RO18:69C4 FE 00            cp   a,00
 RO18:69C6 28 1A            jr   z,69E2
 RO18:69C8 FA 6C DC         ld   a,(DC6C)       // #
 RO18:69CB 0E 03            ld   c,03
 RO18:69CD EF 12 66 40                          // A = Unit's Status
 RO18:69D1 EA 7C DC         ld   (DC7C),a
 RO18:69D4 CB 7F            bit  7,a
 RO18:69D6 28 0A            jr   z,69E2
 RO18:69D8 C1               pop  bc
 RO18:69D9 E1               pop  hl
 RO18:69DA E5               push hl
 RO18:69DB C5               push bc
 RO18:69DC CD 66 69         call 6966           // "End Turn + Transport" flag for currently printing stats unit established
 RO18:69DF C1               pop  bc
 RO18:69E0 E1               pop  hl
 RO18:69E1 C9               ret  
 RO18:69E2 FA 7C DC         ld   a,(DC7C)       // Branch result of nothing on-board unit or turn not ended
 RO18:69E5 CB 7F            bit  7,a
 RO18:69E7 28 0A            jr   z,69F3         // Branch for turn not ended
 RO18:69E9 C1               pop  bc
 RO18:69EA E1               pop  hl
 RO18:69EB E5               push hl
 RO18:69EC C5               push bc
 RO18:69ED CD 3D 69         call 693D           // "End Turn" flag for currently printing stats unit established
 RO18:69F0 C1               pop  bc
 RO18:69F1 E1               pop  hl
 RO18:69F2 C9               ret  
 RO18:69F3 FA 7C DC         ld   a,(DC7C)       // Branch result of turn not ended
 RO18:69F6 CB 4F            bit  1,a
 RO18:69F8 28 0A            jr   z,6A04         // Branch for unit not in Reserve
 RO18:69FA C1               pop  bc
 RO18:69FB E1               pop  hl
 RO18:69FC E5               push hl
 RO18:69FD C5               push bc
 RO18:69FE CD EB 68         call 68EB           // Reserve flag for currently printing stats unit established
 RO18:6A01 C1               pop  bc
 RO18:6A02 E1               pop  hl
 RO18:6A03 C9               ret  
 RO18:6A04 FA 6C DC         ld   a,(DC6C)       // #
 RO18:6A07 CD 8F 69         call 698F           // A = Unit's Load Count
 RO18:6A0A FE 00            cp   a,00
 RO18:6A0C 28 0A            jr   z,6A18
 RO18:6A0E C1               pop  bc
 RO18:6A0F E1               pop  hl
 RO18:6A10 E5               push hl
 RO18:6A11 C5               push bc
 RO18:6A12 CD 14 69         call 6914           // "Transport" flag for currently printing stats unit established
 RO18:6A15 C1               pop  bc
 RO18:6A16 E1               pop  hl
 RO18:6A17 C9               ret  
 RO18:6A18 C1               pop  bc
 RO18:6A19 E1               pop  hl
 RO18:6A1A C9               ret                 // Establishes currently printing stats unit's status graphic
 RO18:6A1B FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6A1E 4F               ld   c,a
 RO18:6A1F FA 64 DC         ld   a,(DC64)
 RO18:6A22 B9               cp   c
 RO18:6A23 38 07            jr   c,6A2C         // Skip is over capacity handling that shouldn't ever happen
 RO18:6A25 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6A28 3D               dec  a
 RO18:6A29 EA 64 DC         ld   (DC64),a
 RO18:6A2C FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6A2F 3D               dec  a
 RO18:6A30 FE 05            cp   a,05
 RO18:6A32 38 0E            jr   c,6A42
 RO18:6A34 FA 64 DC         ld   a,(DC64)
 RO18:6A37 C6 06            add  a,06
 RO18:6A39 4F               ld   c,a
 RO18:6A3A FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6A3D B9               cp   c
 RO18:6A3E 38 29            jr   c,6A69
 RO18:6A40 18 19            jr   6A5B
 RO18:6A42 AF               xor  a              // Comes here from 5 or fewer units
 RO18:6A43 EA 5B DC         ld   (DC5B),a
 RO18:6A46 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6A49 4F               ld   c,a
 RO18:6A4A FA 58 DC         ld   a,(DC58)
 RO18:6A4D B9               cp   c
 RO18:6A4E 38 0A            jr   c,6A5A         // Skip is over capacity handling that shouldn't ever happen
 RO18:6A50 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6A53 3D               dec  a
 RO18:6A54 EA 58 DC         ld   (DC58),a
 RO18:6A57 CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:6A5A C9               ret  
 RO18:6A5B FA 64 DC         ld   a,(DC64)       // Comes here from not bottom 6 units
 RO18:6A5E EA 5B DC         ld   (DC5B),a
 RO18:6A61 AF               xor  a
 RO18:6A62 EA 58 DC         ld   (DC58),a
 RO18:6A65 CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:6A68 C9               ret  
 RO18:6A69 FA 64 DC         ld   a,(DC64)       // Comes here from bottom 6 units
 RO18:6A6C C6 06            add  a,06
 RO18:6A6E F5               push af
 RO18:6A6F FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6A72 4F               ld   c,a
 RO18:6A73 F1               pop  af
 RO18:6A74 91               sub  c
 RO18:6A75 EA 58 DC         ld   (DC58),a
 RO18:6A78 CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:6A7B FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6A7E D6 06            sub  a,06
 RO18:6A80 EA 5B DC         ld   (DC5B),a
 RO18:6A83 C9               ret                 // Establishes printing information foundation on Unit List
 RO18:6A84 FA 5B DC         ld   a,(DC5B)
 RO18:6A87 EA 67 DC         ld   (DC67),a
 RO18:6A8A AF               xor  a
 RO18:6A8B EA 65 DC         ld   (DC65),a
 RO18:6A8E FA 66 DC         ld   a,(DC66)       // Active player's unit headcount (loop begins here)
 RO18:6A91 4F               ld   c,a
 RO18:6A92 FA 65 DC         ld   a,(DC65)
 RO18:6A95 FE 06            cp   a,06
 RO18:6A97 CA 1D 6C         jp   z,6C1D         // Ends immediately after 6 cycles
 RO18:6A9A B9               cp   c
 RO18:6A9B CA 09 6C         jp   z,6C09         // Remaining unit stats rows are emptied if no more units
 RO18:6A9E 3C               inc  a
 RO18:6A9F EA 65 DC         ld   (DC65),a
 RO18:6AA2 FA 67 DC         ld   a,(DC67)
 RO18:6AA5 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:6AA9 2A               ldi  a,(hl)
 RO18:6AAA EA 68 DC         ld   (DC68),a       // Type
 RO18:6AAD 2A               ldi  a,(hl)
 RO18:6AAE EA 69 DC         ld   (DC69),a       // HP
 RO18:6AB1 2A               ldi  a,(hl)
 RO18:6AB2 EA 6A DC         ld   (DC6A),a       // Fuel
 RO18:6AB5 2A               ldi  a,(hl)
 RO18:6AB6 EA 6B DC         ld   (DC6B),a       // Level
 RO18:6AB9 7E               ld   a,(hl)
 RO18:6ABA EA 6C DC         ld   (DC6C),a       // #
 RO18:6ABD FA 65 DC         ld   a,(DC65)
 RO18:6AC0 3D               dec  a
 RO18:6AC1 06 40            ld   b,40
 RO18:6AC3 CD 95 29         call 2995           // HL = Cycles * 64
 RO18:6AC6 3E 01            ld   a,01
 RO18:6AC8 E0 83            ld   (ff00+83),a
 RO18:6ACA E0 4F            ld   (ff00+4F),a
 RO18:6ACC 01 00 88         ld   bc,8800
 RO18:6ACF 09               add  hl,bc
 RO18:6AD0 FA 6C DC         ld   a,(DC6C)       // #
 RO18:6AD3 EF 0B 6C 76                          // (HL ~ HL+63) holds unit map graphics (A = Unit #)
 RO18:6AD7 01 04 02         ld   bc,0204
 RO18:6ADA FA 65 DC         ld   a,(DC65)
 RO18:6ADD 3D               dec  a
 RO18:6ADE 87               add  a
 RO18:6ADF 81               add  c
 RO18:6AE0 4F               ld   c,a            // C = 4 + Cycles * 2
 RO18:6AE1 EA 6D DC         ld   (DC6D),a
 RO18:6AE4 06 02            ld   b,02
 RO18:6AE6 CD D4 0E         call 0ED4           // HL = $9800:2,4 + Cycles * 2
 RO18:6AE9 06 01            ld   b,01
 RO18:6AEB FA 68 DC         ld   a,(DC68)       // Type
 RO18:6AEE 57               ld   d,a
 RO18:6AEF 0E 05            ld   c,05
 RO18:6AF1 C5               push bc
 RO18:6AF2 D5               push de
 RO18:6AF3 E5               push hl
 RO18:6AF4 FA 65 DC         ld   a,(DC65)
 RO18:6AF7 3D               dec  a
 RO18:6AF8 06 04            ld   b,04
 RO18:6AFA CD 95 29         call 2995           // HL = Cycles * 4
 RO18:6AFD 7D               ld   a,l
 RO18:6AFE C6 80            add  a,80
 RO18:6B00 E1               pop  hl
 RO18:6B01 D1               pop  de
 RO18:6B02 C1               pop  bc
 RO18:6B03 E5               push hl
 RO18:6B04 EF 0B C9 76                          // Establishes unit graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is unit type)
 RO18:6B08 E1               pop  hl
 RO18:6B09 CD B0 69         call 69B0           // Establishes currently printing stats unit's status graphic
 RO18:6B0C FA 6D DC         ld   a,(DC6D)
 RO18:6B0F 4F               ld   c,a
 RO18:6B10 06 07            ld   b,07
 RO18:6B12 C5               push bc
 RO18:6B13 16 02            ld   d,02
 RO18:6B15 FA 69 DC         ld   a,(DC69)       // HP, 7, Row, 2
 RO18:6B18 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO18:6B1B FA 69 DC         ld   a,(DC69)       // HP
 RO18:6B1E FE 04            cp   a,04
 RO18:6B20 38 02            jr   c,6B24
 RO18:6B22 18 1A            jr   6B3E
 RO18:6B24 C1               pop  bc
 RO18:6B25 F0 83            ld   a,(ff00+83)
 RO18:6B27 F5               push af
 RO18:6B28 3E 01            ld   a,01
 RO18:6B2A E0 83            ld   (ff00+83),a
 RO18:6B2C E0 4F            ld   (ff00+4F),a
 RO18:6B2E 3E 03            ld   a,03
 RO18:6B30 11 01 02         ld   de,0201
 RO18:6B33 EF 15 D3 6A                          // Sets VRA1 map tiles in rectangle 7~8,Row to 3 (red text for 3 or less HP)
 RO18:6B37 F1               pop  af
 RO18:6B38 E0 83            ld   (ff00+83),a
 RO18:6B3A E0 4F            ld   (ff00+4F),a
 RO18:6B3C 18 18            jr   6B56
 RO18:6B3E C1               pop  bc
 RO18:6B3F F0 83            ld   a,(ff00+83)
 RO18:6B41 F5               push af
 RO18:6B42 3E 01            ld   a,01
 RO18:6B44 E0 83            ld   (ff00+83),a
 RO18:6B46 E0 4F            ld   (ff00+4F),a
 RO18:6B48 3E 00            ld   a,00
 RO18:6B4A 11 01 02         ld   de,0201
 RO18:6B4D EF 15 D3 6A                          // Sets VRA1 map tiles in rectangle 7~8,Row to 0
 RO18:6B51 F1               pop  af
 RO18:6B52 E0 83            ld   (ff00+83),a
 RO18:6B54 E0 4F            ld   (ff00+4F),a
 RO18:6B56 FA 6D DC         ld   a,(DC6D)
 RO18:6B59 4F               ld   c,a
 RO18:6B5A 06 0C            ld   b,0C
 RO18:6B5C 16 02            ld   d,02
 RO18:6B5E C5               push bc
 RO18:6B5F FA 6A DC         ld   a,(DC6A)       // Fuel, 12, Row, 2
 RO18:6B62 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO18:6B65 FA 6A DC         ld   a,(DC6A)       // Fuel
 RO18:6B68 FE 15            cp   a,15
 RO18:6B6A 38 02            jr   c,6B6E
 RO18:6B6C 18 1A            jr   6B88
 RO18:6B6E C1               pop  bc
 RO18:6B6F F0 83            ld   a,(ff00+83)
 RO18:6B71 F5               push af
 RO18:6B72 3E 01            ld   a,01
 RO18:6B74 E0 83            ld   (ff00+83),a
 RO18:6B76 E0 4F            ld   (ff00+4F),a
 RO18:6B78 3E 03            ld   a,03
 RO18:6B7A 11 01 02         ld   de,0201
 RO18:6B7D EF 15 D3 6A                          // Sets VRA1 map tiles in rectangle 12~13,Row to 3 (red text for 20 or less Fuel)
 RO18:6B81 F1               pop  af
 RO18:6B82 E0 83            ld   (ff00+83),a
 RO18:6B84 E0 4F            ld   (ff00+4F),a
 RO18:6B86 18 18            jr   6BA0
 RO18:6B88 C1               pop  bc
 RO18:6B89 F0 83            ld   a,(ff00+83)
 RO18:6B8B F5               push af
 RO18:6B8C 3E 01            ld   a,01
 RO18:6B8E E0 83            ld   (ff00+83),a
 RO18:6B90 E0 4F            ld   (ff00+4F),a
 RO18:6B92 3E 00            ld   a,00
 RO18:6B94 11 01 02         ld   de,0201
 RO18:6B97 EF 15 D3 6A                          // Sets VRA1 map tiles in rectangle 12~13,Row to 0
 RO18:6B9B F1               pop  af
 RO18:6B9C E0 83            ld   (ff00+83),a
 RO18:6B9E E0 4F            ld   (ff00+4F),a
 RO18:6BA0 FA 6D DC         ld   a,(DC6D)
 RO18:6BA3 4F               ld   c,a
 RO18:6BA4 06 11            ld   b,11
 RO18:6BA6 16 02            ld   d,02
 RO18:6BA8 FA 6B DC         ld   a,(DC6B)       // Level
 RO18:6BAB C5               push bc
 RO18:6BAC F5               push af
 RO18:6BAD FA 67 DC         ld   a,(DC67)
 RO18:6BB0 EF 17 46 73                          // HL is starting address of unit A on Unit List
 RO18:6BB4 01 04 00         ld   bc,0004
 RO18:6BB7 09               add  hl,bc
 RO18:6BB8 7E               ld   a,(hl)
 RO18:6BB9 EF 12 98 44                          // A = Promoted Unit, 0 if none or unit isn't S-Rank
 RO18:6BBD FE 00            cp   a,00
 RO18:6BBF 28 15            jr   z,6BD6
 RO18:6BC1 18 00            jr   6BC3
 RO18:6BC3 FA 6D DC         ld   a,(DC6D)
 RO18:6BC6 4F               ld   c,a
 RO18:6BC7 06 10            ld   b,10
 RO18:6BC9 11 01 01         ld   de,0101
 RO18:6BCC 26 33            ld   h,33           // Up Arrow for promotion indication
 RO18:6BCE 3E 08            ld   a,08
 RO18:6BD0 EF 15 FD 67                          // (VRA0:$9800 16,Row) = 51, (VRA1:$9800 16,Row) = 8
 RO18:6BD4 18 11            jr   6BE7
 RO18:6BD6 FA 6D DC         ld   a,(DC6D)       // Branch result of unable to promote
 RO18:6BD9 4F               ld   c,a
 RO18:6BDA 06 10            ld   b,10
 RO18:6BDC 11 01 01         ld   de,0101
 RO18:6BDF 26 00            ld   h,00
 RO18:6BE1 3E 00            ld   a,00
 RO18:6BE3 EF 15 FD 67                          // (VRA0:$9800 16,Row) = 0, (VRA1:$9800 16,Row) = 0
 RO18:6BE7 F1               pop  af
 RO18:6BE8 06 02            ld   b,02
 RO18:6BEA CD 95 29         call 2995           // HL = Level * 2
 RO18:6BED 01 AE 7A         ld   bc,7AAE
 RO18:6BF0 09               add  hl,bc          // HL holds text location of unit's current Level
 RO18:6BF1 C1               pop  bc             // BC holds coordinates 17,Row
 RO18:6BF2 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO18:6BF5 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6BF8 4F               ld   c,a
 RO18:6BF9 FA 67 DC         ld   a,(DC67)
 RO18:6BFC 3C               inc  a
 RO18:6BFD B9               cp   c
 RO18:6BFE 28 02            jr   z,6C02
 RO18:6C00 18 01            jr   6C03
 RO18:6C02 AF               xor  a
 RO18:6C03 EA 67 DC         ld   (DC67),a       // Handles rotating that never happens
 RO18:6C06 C3 8E 6A         jp   6A8E
 RO18:6C09 FA 65 DC         ld   a,(DC65)
 RO18:6C0C EF 17 5E 73                          // Empties unit information row A on Unit List
 RO18:6C10 FA 65 DC         ld   a,(DC65)
 RO18:6C13 3C               inc  a
 RO18:6C14 FE 06            cp   a,06
 RO18:6C16 28 05            jr   z,6C1D
 RO18:6C18 EA 65 DC         ld   (DC65),a
 RO18:6C1B 18 EC            jr   6C09
 RO18:6C1D C9               ret                 // Prints listed units' stats on Unit List
 RO18:6C1E C5               push bc
 RO18:6C1F CD D8 68         call 68D8           // A is set to highlighted unit on Unit List
 RO18:6C22 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:6C26 7E               ld   a,(hl)
 RO18:6C27 EF 12 4F 40                          // ($CD28) to ($CD32) holds unit type's name
 RO18:6C2B 21 28 CD         ld   hl,CD28
 RO18:6C2E CD B8 7E         call 7EB8           // Text decryption for things like unit names
 RO18:6C31 C1               pop  bc
 RO18:6C32 21 28 CD         ld   hl,CD28
 RO18:6C35 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO18:6C38 C9               ret                 // Highlighted unit's type name text set up at coordinates BC
 RO18:6C39 C5               push bc
 RO18:6C3A EF 12 4F 40                          // ($CD28) to ($CD32) holds unit type's name
 RO18:6C3E 21 28 CD         ld   hl,CD28
 RO18:6C41 CD B8 7E         call 7EB8           // Text decryption for things like unit names
 RO18:6C44 C1               pop  bc
 RO18:6C45 21 28 CD         ld   hl,CD28
 RO18:6C48 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO18:6C4B C9               ret                 // Unit type A's name printed at coordinates BC
 RO18:6C4C 01 01 0E         ld   bc,0E01
 RO18:6C4F 21 6C 6C         ld   hl,6C6C
 RO18:6C52 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO18:6C55 3E 0E            ld   a,0E
 RO18:6C57 CD 8D 05         call 058D           // ($4000) = 14, ($FF81) = 14
 RO18:6C5A CD 93 05         call 0593
 RO18:6C5D FA 06 A1         ld   a,(A106)
 RO18:6C60 01 01 10         ld   bc,1001
 RO18:6C63 16 02            ld   d,02
 RO18:6C65 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits) (Number of Badges)
 RO18:6C68 CD 9B 05         call 059B
 RO18:6C6B C9               ret                 // Badge count printed in place of unit count for Unit List

 RO18:6C6C 20 20 20 20 6A 00

 RO18:6C72 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6C75 01 01 0E         ld   bc,0E01
 RO18:6C78 16 02            ld   d,02
 RO18:6C7A CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO18:6C7D 21 5C 7F         ld   hl,7F5C        // 16,1: "/50"
 RO18:6C80 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:6C83 C9               ret                 // Establishes unit count text in Unit List
 RO18:6C84 CD D8 68         call 68D8           // A is set to highlighted unit on Unit List
 RO18:6C87 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:6C8B 01 04 00         ld   bc,0004
 RO18:6C8E 09               add  hl,bc
 RO18:6C8F 7E               ld   a,(hl)
 RO18:6C90 C9               ret                 // A = Highlighted unit's #
 RO18:6C91 CD D8 68         call 68D8           // A is set to highlighted unit on Unit List
 RO18:6C94 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:6C98 01 00 00         ld   bc,0000
 RO18:6C9B 09               add  hl,bc
 RO18:6C9C 7E               ld   a,(hl)
 RO18:6C9D C9               ret                 // A = Highlighted unit's Type
 RO18:6C9E CD 84 6C         call 6C84           // A = Highlighted unit's #
 RO18:6CA1 0E 03            ld   c,03
 RO18:6CA3 EF 12 66 40                          // A = Unit's Status
 RO18:6CA7 EA 7C DC         ld   (DC7C),a
 RO18:6CAA 3E 01            ld   a,01
 RO18:6CAC 21 7C DC         ld   hl,DC7C
 RO18:6CAF CD C7 3A         call 3AC7           // Unit in Reserve flag
 RO18:6CB2 28 02            jr   z,6CB6
 RO18:6CB4 AF               xor  a
 RO18:6CB5 C9               ret  
 RO18:6CB6 37               scf  
 RO18:6CB7 C9               ret                 // Carry Flag set by highlighted unit not in Reserve
 RO18:6CB8 F0 82            ld   a,(ff00+82)
 RO18:6CBA F5               push af
 RO18:6CBB 3E 03            ld   a,03
 RO18:6CBD E0 82            ld   (ff00+82),a
 RO18:6CBF E0 70            ld   (ff00+70),a
 RO18:6CC1 CD 1A 66         call 661A           // Grabs active player's stored memory for Unit List
 RO18:6CC4 CD AE 66         call 66AE           // Establishes Unit List graphics as a whole
 RO18:6CC7 EF 17 A3 73                          // Toggle Unit List screen's Pointing Up/Down Mini-Arrows
 RO18:6CCB CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO18:6CCE CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO18:6CD1 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:6CD4 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6CD7 A7               and  a
 RO18:6CD8 CA D6 6E         jp   z,6ED6         // Lack of units ends with A = -1 with full second wait
 RO18:6CDB 3E 00            ld   a,00
 RO18:6CDD EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:6CE1 F0 92            ld   a,(ff00+92)
 RO18:6CE3 CB 77            bit  6,a            // Up
 RO18:6CE5 28 57            jr   z,6D3E
 RO18:6CE7 CD D8 68         call 68D8           // A is set to highlighted unit on Unit List
 RO18:6CEA FE 00            cp   a,00
 RO18:6CEC 28 E0            jr   z,6CCE         // Back to button update if already at the very top
 RO18:6CEE 3E 01            ld   a,01
 RO18:6CF0 CD 44 38         call 3844
 RO18:6CF3 FA 58 DC         ld   a,(DC58)
 RO18:6CF6 3D               dec  a
 RO18:6CF7 FE FF            cp   a,FF
 RO18:6CF9 20 2C            jr   nz,6D27
 RO18:6CFB FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6CFE 4F               ld   c,a
 RO18:6CFF 3E 06            ld   a,06
 RO18:6D01 B9               cp   c
 RO18:6D02 30 02            jr   nc,6D06
 RO18:6D04 18 06            jr   6D0C
 RO18:6D06 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6D09 3D               dec  a
 RO18:6D0A 18 1B            jr   6D27
 RO18:6D0C AF               xor  a              // Comes here for 6 or more units
 RO18:6D0D F5               push af
 RO18:6D0E FA 5B DC         ld   a,(DC5B)
 RO18:6D11 3D               dec  a
 RO18:6D12 FE FF            cp   a,FF
 RO18:6D14 28 02            jr   z,6D18
 RO18:6D16 18 04            jr   6D1C
 RO18:6D18 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6D1B 3D               dec  a
 RO18:6D1C EA 5B DC         ld   (DC5B),a
 RO18:6D1F CD 84 6A         call 6A84           // Prints listed units' stats on Unit List
 RO18:6D22 EF 17 A3 73                          // Toggle Unit List screen's Pointing Up/Down Mini-Arrows
 RO18:6D26 F1               pop  af
 RO18:6D27 F5               push af
 RO18:6D28 FA 64 DC         ld   a,(DC64)
 RO18:6D2B 3D               dec  a
 RO18:6D2C EA 64 DC         ld   (DC64),a
 RO18:6D2F F1               pop  af
 RO18:6D30 EA 58 DC         ld   (DC58),a
 RO18:6D33 CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:6D36 01 01 01         ld   bc,0101
 RO18:6D39 CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates BC
 RO18:6D3C 18 90            jr   6CCE           // Further wait for button input after pressing Up
 RO18:6D3E CB 7F            bit  7,a            // Down
 RO18:6D40 28 5D            jr   z,6D9F
 RO18:6D42 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6D45 3D               dec  a
 RO18:6D46 4F               ld   c,a
 RO18:6D47 C5               push bc
 RO18:6D48 CD D8 68         call 68D8           // A is set to highlighted unit on Unit List
 RO18:6D4B C1               pop  bc
 RO18:6D4C B9               cp   c
 RO18:6D4D CA CE 6C         jp   z,6CCE         // Back to button input if already at the very bottom
 RO18:6D50 3E 01            ld   a,01
 RO18:6D52 CD 44 38         call 3844
 RO18:6D55 FA 58 DC         ld   a,(DC58)
 RO18:6D58 3C               inc  a
 RO18:6D59 F5               push af
 RO18:6D5A FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6D5D 4F               ld   c,a
 RO18:6D5E F1               pop  af
 RO18:6D5F B9               cp   c
 RO18:6D60 20 03            jr   nz,6D65
 RO18:6D62 AF               xor  a
 RO18:6D63 18 22            jr   6D87           // Shouldn't ever happen
 RO18:6D65 FE 06            cp   a,06
 RO18:6D67 20 1E            jr   nz,6D87        // Skips next portion if on bottom highlighted unit
 RO18:6D69 3E 05            ld   a,05
 RO18:6D6B F5               push af
 RO18:6D6C FA 5B DC         ld   a,(DC5B)
 RO18:6D6F 3C               inc  a
 RO18:6D70 F5               push af
 RO18:6D71 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6D74 4F               ld   c,a
 RO18:6D75 F1               pop  af
 RO18:6D76 B9               cp   c
 RO18:6D77 28 02            jr   z,6D7B
 RO18:6D79 18 01            jr   6D7C
 RO18:6D7B AF               xor  a              // Rotation that shouldn't ever happen
 RO18:6D7C EA 5B DC         ld   (DC5B),a
 RO18:6D7F CD 84 6A         call 6A84           // Prints listed units' stats on Unit List
 RO18:6D82 EF 17 A3 73                          // Toggle Unit List screen's Pointing Up/Down Mini-Arrows
 RO18:6D86 F1               pop  af             // A = 5
 RO18:6D87 F5               push af
 RO18:6D88 FA 64 DC         ld   a,(DC64)
 RO18:6D8B 3C               inc  a
 RO18:6D8C EA 64 DC         ld   (DC64),a
 RO18:6D8F F1               pop  af
 RO18:6D90 EA 58 DC         ld   (DC58),a
 RO18:6D93 CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:6D96 01 01 01         ld   bc,0101
 RO18:6D99 CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates BC
 RO18:6D9C C3 CE 6C         jp   6CCE           // Further wait for button input after pressing Down
 RO18:6D9F CB 67            bit  4,a            // Right
 RO18:6DA1 28 54            jr   z,6DF7
 RO18:6DA3 FA 5B DC         ld   a,(DC5B)
 RO18:6DA6 C6 06            add  a,06
 RO18:6DA8 4F               ld   c,a
 RO18:6DA9 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6DAC 3D               dec  a
 RO18:6DAD B9               cp   c
 RO18:6DAE DA CE 6C         jp   c,6CCE         // Simple further wait for button input after pressing Right if already at the bottom 6 units
 RO18:6DB1 3E 01            ld   a,01
 RO18:6DB3 CD 44 38         call 3844
 RO18:6DB6 FA 5B DC         ld   a,(DC5B)
 RO18:6DB9 C6 06            add  a,06
 RO18:6DBB 4F               ld   c,a
 RO18:6DBC FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6DBF D6 06            sub  a,06
 RO18:6DC1 B9               cp   c
 RO18:6DC2 38 11            jr   c,6DD5         // Branches if 5 or fewer units are below the listed ones
 RO18:6DC4 FA 5B DC         ld   a,(DC5B)
 RO18:6DC7 C6 06            add  a,06
 RO18:6DC9 F5               push af
 RO18:6DCA FA 64 DC         ld   a,(DC64)
 RO18:6DCD C6 06            add  a,06
 RO18:6DCF EA 64 DC         ld   (DC64),a
 RO18:6DD2 F1               pop  af
 RO18:6DD3 18 0F            jr   6DE4
 RO18:6DD5 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:6DD8 D6 06            sub  a,06
 RO18:6DDA 4F               ld   c,a
 RO18:6DDB F5               push af
 RO18:6DDC FA 58 DC         ld   a,(DC58)
 RO18:6DDF 81               add  c
 RO18:6DE0 EA 64 DC         ld   (DC64),a
 RO18:6DE3 F1               pop  af
 RO18:6DE4 EA 5B DC         ld   (DC5B),a
 RO18:6DE7 CD 84 6A         call 6A84           // Prints listed units' stats on Unit List
 RO18:6DEA EF 17 A3 73                          // Toggle Unit List screen's Pointing Up/Down Mini-Arrows
 RO18:6DEE 01 01 01         ld   bc,0101
 RO18:6DF1 CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates BC
 RO18:6DF4 C3 CE 6C         jp   6CCE           // Further wait for button input after pressing Right
 RO18:6DF7 CB 6F            bit  5,a            // Left
 RO18:6DF9 28 3A            jr   z,6E35
 RO18:6DFB FA 5B DC         ld   a,(DC5B)
 RO18:6DFE FE 00            cp   a,00
 RO18:6E00 CA CE 6C         jp   z,6CCE         // Simple further wait for button input after pressing Left if already at the top 6 units
 RO18:6E03 3E 01            ld   a,01
 RO18:6E05 CD 44 38         call 3844
 RO18:6E08 FA 5B DC         ld   a,(DC5B)
 RO18:6E0B D6 06            sub  a,06
 RO18:6E0D 38 0C            jr   c,6E1B
 RO18:6E0F F5               push af
 RO18:6E10 FA 64 DC         ld   a,(DC64)
 RO18:6E13 D6 06            sub  a,06
 RO18:6E15 EA 64 DC         ld   (DC64),a
 RO18:6E18 F1               pop  af
 RO18:6E19 18 07            jr   6E22
 RO18:6E1B FA 58 DC         ld   a,(DC58)
 RO18:6E1E EA 64 DC         ld   (DC64),a
 RO18:6E21 AF               xor  a
 RO18:6E22 EA 5B DC         ld   (DC5B),a
 RO18:6E25 CD 84 6A         call 6A84           // Prints listed units' stats on Unit List
 RO18:6E28 EF 17 A3 73                          // Toggle Unit List screen's Pointing Up/Down Mini-Arrows
 RO18:6E2C 01 01 01         ld   bc,0101
 RO18:6E2F CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates BC
 RO18:6E32 C3 CE 6C         jp   6CCE           // Further wait for button input after pressing Left
 RO18:6E35 CB 57            bit  2,a            // Select
 RO18:6E37 28 26            jr   z,6E5F
 RO18:6E39 3E 02            ld   a,02
 RO18:6E3B CD 44 38         call 3844
 RO18:6E3E CD 91 6C         call 6C91           // A = Highlighted unit's Type
 RO18:6E41 CB 3F            srl  a
 RO18:6E43 F5               push af
 RO18:6E44 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO18:6E47 FA 33 C6         ld   a,(C633)
 RO18:6E4A E6 01            and  a,01
 RO18:6E4C 47               ld   b,a
 RO18:6E4D F1               pop  af
 RO18:6E4E EF 25 A5 5D                          // Controls for Unit Information Screen as a whole including unit selection list (A is Unit Type, B is Side; A is -1 if no Unit Type)
 RO18:6E52 CD AE 66         call 66AE           // Establishes Unit List graphics as a whole
 RO18:6E55 EF 17 A3 73                          // Toggle Unit List screen's Pointing Up/Down Mini-Arrows
 RO18:6E59 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO18:6E5C C3 CE 6C         jp   6CCE           // Further wait for button input after pressing Select
 RO18:6E5F CB 5F            bit  3,a            // Start
 RO18:6E61 28 18            jr   z,6E7B
 RO18:6E63 FA 53 DC         ld   a,(DC53)       // Pointing Right Bullet
 RO18:6E66 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:6E69 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:6E6C CD E7 79         call 79E7           // Controls for Unit List's Organize menu
 RO18:6E6F FA 53 DC         ld   a,(DC53)       // Pointing Right Bullet
 RO18:6E72 CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO18:6E75 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:6E78 C3 CE 6C         jp   6CCE           // Further wait for button input after pressing Start
 RO18:6E7B CB 47            bit  0,a            // A
 RO18:6E7D 28 39            jr   z,6EB8
 RO18:6E7F CD 9E 6C         call 6C9E           // Carry Flag set by highlighted unit not in Reserve
 RO18:6E82 38 02            jr   c,6E86
 RO18:6E84 18 0C            jr   6E92
 RO18:6E86 FA 53 DC         ld   a,(DC53)       // Pointing Right Bullet
 RO18:6E89 EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO18:6E8D CD 84 6C         call 6C84           // A = Highlighted unit's #
 RO18:6E90 18 34            jr   6EC6           // Ending of A = Highlighted unit's # for selecting a unit not in Reserve, or choosing to deploy a unit in Reserve
 RO18:6E92 FA 53 DC         ld   a,(DC53)       // Pointing Right Bullet
 RO18:6E95 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:6E98 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:6E9B AF               xor  a
 RO18:6E9C EA 7A DC         ld   (DC7A),a
 RO18:6E9F CD 4E 73         call 734E           // Controls for Unit List's Management menu; ends with backing out for Cancel, Delete (confirm), or Promote; or $DC7A set to 1 for Deploy
 RO18:6EA2 FA 7A DC         ld   a,(DC7A)
 RO18:6EA5 FE 01            cp   a,01
 RO18:6EA7 28 E4            jr   z,6E8D         // Ending of A = Highlighted unit's # for Deploy
 RO18:6EA9 CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:6EAC FA 53 DC         ld   a,(DC53)       // Pointing Right Bullet
 RO18:6EAF CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO18:6EB2 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:6EB5 C3 CE 6C         jp   6CCE           // Further wait for button input after pressing A for unit in Reserve without choosing Deploy
 RO18:6EB8 CB 4F            bit  1,a            // B
 RO18:6EBA 20 03            jr   nz,6EBF
 RO18:6EBC C3 CE 6C         jp   6CCE           // Wait for button input if nothing was pressed
 RO18:6EBF 3E 0C            ld   a,0C
 RO18:6EC1 CD 44 38         call 3844
 RO18:6EC4 3E FF            ld   a,FF
 RO18:6EC6 F5               push af
 RO18:6EC7 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO18:6ECA CD 64 66         call 6664           // Stores information of Unit List into active player's stored memory
 RO18:6ECD F1               pop  af
 RO18:6ECE 57               ld   d,a
 RO18:6ECF F1               pop  af
 RO18:6ED0 E0 82            ld   (ff00+82),a
 RO18:6ED2 E0 70            ld   (ff00+70),a
 RO18:6ED4 7A               ld   a,d
 RO18:6ED5 C9               ret                 // Controls for Unit List; A = Selected Unit for Deploy or mere selection, or -1 for cancellation or all deletion
 RO18:6ED6 3E 3C            ld   a,3C
 RO18:6ED8 CD AF 3B         call 3BAF           // Advances game state by 60 frames before any further functions
 RO18:6EDB CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO18:6EDE 3E FF            ld   a,FF
 RO18:6EE0 18 E4            jr   6EC6           // Ends with A = -1
 RO18:6EE2 CD 84 6C         call 6C84           // A = Highlighted unit's #
 RO18:6EE5 EF 12 98 44                          // A = Promoted Unit, 0 if none or unit isn't S-Rank
 RO18:6EE9 EA 7F DC         ld   (DC7F),a
 RO18:6EEC C9               ret                 // $DC7F set to possible Promotion Unit Type of highlighted unit on Unit List
 RO18:6EED 3E 06            ld   a,06
 RO18:6EEF CD 44 38         call 3844
 RO18:6EF2 CD E2 6E         call 6EE2           // $DC7F set to possible Promotion Unit Type of highlighted unit on Unit List
 RO18:6EF5 FE 00            cp   a,00
 RO18:6EF7 28 02            jr   z,6EFB
 RO18:6EF9 18 2A            jr   6F25
 RO18:6EFB 3E 03            ld   a,03           // No promotion possible branch
 RO18:6EFD EA 7E DC         ld   (DC7E),a
 RO18:6F00 01 04 02         ld   bc,0204
 RO18:6F03 11 0A 10         ld   de,100A
 RO18:6F06 EF 10 01 69                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics, frame update per row version (BC is starting location, DE is size)
 RO18:6F0A F0 83            ld   a,(ff00+83)
 RO18:6F0C F5               push af
 RO18:6F0D 3E 01            ld   a,01
 RO18:6F0F E0 83            ld   (ff00+83),a
 RO18:6F11 E0 4F            ld   (ff00+4F),a
 RO18:6F13 AF               xor  a
 RO18:6F14 01 05 03         ld   bc,0305
 RO18:6F17 11 08 0E         ld   de,0E08
 RO18:6F1A EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 3~16,5~12
 RO18:6F1E F1               pop  af
 RO18:6F1F E0 83            ld   (ff00+83),a
 RO18:6F21 E0 4F            ld   (ff00+4F),a
 RO18:6F23 18 28            jr   6F4D
 RO18:6F25 3E 04            ld   a,04           // Promotion possible branch
 RO18:6F27 EA 7E DC         ld   (DC7E),a
 RO18:6F2A 01 04 02         ld   bc,0204
 RO18:6F2D 11 0C 10         ld   de,100C
 RO18:6F30 EF 10 01 69                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics, frame update per row version (BC is starting location, DE is size)
 RO18:6F34 F0 83            ld   a,(ff00+83)
 RO18:6F36 F5               push af
 RO18:6F37 3E 01            ld   a,01
 RO18:6F39 E0 83            ld   (ff00+83),a
 RO18:6F3B E0 4F            ld   (ff00+4F),a
 RO18:6F3D AF               xor  a
 RO18:6F3E 01 05 03         ld   bc,0305
 RO18:6F41 11 0A 0E         ld   de,0E0A
 RO18:6F44 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 3~16,5~14
 RO18:6F48 F1               pop  af
 RO18:6F49 E0 83            ld   (ff00+83),a
 RO18:6F4B E0 4F            ld   (ff00+4F),a
 RO18:6F4D 01 05 03         ld   bc,0305
 RO18:6F50 CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates 3,5
 RO18:6F53 3E 08            ld   a,08
 RO18:6F55 01 06 06         ld   bc,0606
 RO18:6F58 11 02 04         ld   de,0402
 RO18:6F5B 26 11            ld   h,11
 RO18:6F5D EF 15 FD 67                          // (VRA0:$9800 6~9,6~7) = 17~24, (VRA1:$9800 6~9,6~7) = 8
 RO18:6F61 3E 08            ld   a,08
 RO18:6F63 01 08 06         ld   bc,0608
 RO18:6F66 11 02 04         ld   de,0402
 RO18:6F69 26 19            ld   h,19
 RO18:6F6B EF 15 FD 67                          // (VRA0:$9800 6~9,8~9) = 25~32, (VRA1:$9800 6~9,8~9) = 8
 RO18:6F6F 3E 08            ld   a,08
 RO18:6F71 01 0A 06         ld   bc,060A
 RO18:6F74 11 02 07         ld   de,0702
 RO18:6F77 26 21            ld   h,21
 RO18:6F79 EF 15 FD 67                          // (VRA0:$9800 6~12,10~11) = 33~46, (VRA1:$9800 6~12,10~11) = 8
 RO18:6F7D AF               xor  a
 RO18:6F7E EA 5A DC         ld   (DC5A),a
 RO18:6F81 CD E2 6E         call 6EE2           // $DC7F set to possible Promotion Unit Type of highlighted unit on Unit List
 RO18:6F84 FE 00            cp   a,00
 RO18:6F86 28 0E            jr   z,6F96
 RO18:6F88 3E 08            ld   a,08
 RO18:6F8A 01 0C 06         ld   bc,060C
 RO18:6F8D 11 02 04         ld   de,0402
 RO18:6F90 26 34            ld   h,34
 RO18:6F92 EF 15 FD 67                          // (VRA0:$9800 6~9,12~13) = 52~59, (VRA1:$9800 6~9,12~13) = 8
 RO18:6F96 FA 7E DC         ld   a,(DC7E)
 RO18:6F99 FE 03            cp   a,03
 RO18:6F9B 20 0B            jr   nz,6FA8
 RO18:6F9D FA 5A DC         ld   a,(DC5A)
 RO18:6FA0 FE 03            cp   a,03
 RO18:6FA2 20 04            jr   nz,6FA8
 RO18:6FA4 AF               xor  a
 RO18:6FA5 EA 5A DC         ld   (DC5A),a
 RO18:6FA8 F0 83            ld   a,(ff00+83)
 RO18:6FAA F5               push af
 RO18:6FAB 3E 20            ld   a,20
 RO18:6FAD 0E 00            ld   c,00
 RO18:6FAF 06 15            ld   b,15
 RO18:6FB1 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO18:6FB4 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:6FB7 EA 57 DC         ld   (DC57),a
 RO18:6FBA CD 70 74         call 7470           // Establishes Pointing Right Bullet sprite's location on Unit List's Management menu, as well as Unit/Badge Count text
 RO18:6FBD F1               pop  af
 RO18:6FBE E0 83            ld   (ff00+83),a
 RO18:6FC0 E0 4F            ld   (ff00+4F),a
 RO18:6FC2 C9               ret                 // Establishes graphics for Unit List's Management menu
 RO18:6FC3 CD 94 67         call 6794           // Establishes basic stats for units on Unit list
 RO18:6FC6 01 01 01         ld   bc,0101
 RO18:6FC9 CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates BC
 RO18:6FCC CD 73 68         call 6873           // Establishes stat icons for units on Unit List
 RO18:6FCF CD 84 6A         call 6A84           // Prints listed units' stats on Unit List
 RO18:6FD2 EF 17 A3 73                          // Toggle Unit List screen's Pointing Up/Down Mini-Arrows
 RO18:6FD6 CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:6FD9 C9               ret                 // Reestablishes basic information graphics on Unit List
 RO18:6FDA 3E 08            ld   a,08
 RO18:6FDC 01 0B 08         ld   bc,080B
 RO18:6FDF 11 01 02         ld   de,0201
 RO18:6FE2 26 FB            ld   h,FB           // "OK"
 RO18:6FE4 EF 15 FD 67                          // (VRA0:$9800 8~9,11) = 251~252, (VRA1:$9800 8~9,11) = 8
 RO18:6FE8 3E 08            ld   a,08
 RO18:6FEA 01 0B 0A         ld   bc,0A0B
 RO18:6FED 11 01 01         ld   de,0101
 RO18:6FF0 26 FD            ld   h,FD           // Slash
 RO18:6FF2 EF 15 FD 67                          // (VRA0:$9800 10,11) = 253, (VRA1:$9800 10,11) = 8
 RO18:6FF6 3E 09            ld   a,09
 RO18:6FF8 01 0B 0B         ld   bc,0B0B
 RO18:6FFB 11 01 02         ld   de,0201
 RO18:6FFE 26 FE            ld   h,FE           // "NO"
 RO18:7000 EF 15 FD 67                          // (VRA0:$9800 11~12,11) = 254~255, (VRA1:$9800 11~12,11) = 9
 RO18:7004 C9               ret                 // "OK/NO" with "NO" highlighted set starting at 8,11
 RO18:7005 3E 09            ld   a,09
 RO18:7007 01 0B 08         ld   bc,080B
 RO18:700A 11 01 02         ld   de,0201
 RO18:700D 26 FB            ld   h,FB
 RO18:700F EF 15 FD 67                          // (VRA0:$9800 8~9,11) = 251~252, (VRA1:$9800 8~9,11) = 9
 RO18:7013 3E 08            ld   a,08
 RO18:7015 01 0B 0A         ld   bc,0A0B
 RO18:7018 11 01 01         ld   de,0101
 RO18:701B 26 FD            ld   h,FD
 RO18:701D EF 15 FD 67                          // (VRA0:$9800 10,11) = 253, (VRA1:$9800 10,11) = 8
 RO18:7021 3E 08            ld   a,08
 RO18:7023 01 0B 0B         ld   bc,0B0B
 RO18:7026 11 01 02         ld   de,0201
 RO18:7029 26 FE            ld   h,FE
 RO18:702B EF 15 FD 67                          // (VRA0:$9800 11~12,11) = 254~255, (VRA1:$9800 11~12,11) = 8
 RO18:702F C9               ret                 // "OK/NO" with "OK" highlighted set starting at 8,11
 RO18:7030 FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:7033 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO18:7036 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:7039 01 04 02         ld   bc,0204
 RO18:703C 11 0A 10         ld   de,100A
 RO18:703F EF 10 FA 68                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics (BC is starting location, DE is size)
 RO18:7043 F0 83            ld   a,(ff00+83)
 RO18:7045 F5               push af
 RO18:7046 3E 01            ld   a,01
 RO18:7048 E0 83            ld   (ff00+83),a
 RO18:704A E0 4F            ld   (ff00+4F),a
 RO18:704C AF               xor  a
 RO18:704D 01 05 03         ld   bc,0305
 RO18:7050 11 08 0E         ld   de,0E08
 RO18:7053 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 3~16,5~12
 RO18:7057 F1               pop  af
 RO18:7058 E0 83            ld   (ff00+83),a
 RO18:705A E0 4F            ld   (ff00+4F),a
 RO18:705C 21 CD 70         ld   hl,70CD        // "Dispose?"
 RO18:705F CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:7062 3E FF            ld   a,FF
 RO18:7064 EA 7D DC         ld   (DC7D),a
 RO18:7067 CD DA 6F         call 6FDA           // "OK/NO" with "NO" highlighted set starting at 8,11
 RO18:706A CD A2 05         call 05A2           // Button update, next frame
 RO18:706D CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:7070 3E 00            ld   a,00
 RO18:7072 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:7076 F0 92            ld   a,(ff00+92)
 RO18:7078 CB 6F            bit  5,a            // Left
 RO18:707A 28 0E            jr   z,708A
 RO18:707C 3E 01            ld   a,01
 RO18:707E CD 44 38         call 3844
 RO18:7081 AF               xor  a
 RO18:7082 EA 7D DC         ld   (DC7D),a
 RO18:7085 CD 05 70         call 7005           // "OK/NO" with "OK" highlighted set starting at 8,11
 RO18:7088 18 31            jr   70BB           // Further wait for button input after pressing Left
 RO18:708A CB 67            bit  4,a            // Right
 RO18:708C 28 0F            jr   z,709D
 RO18:708E 3E 01            ld   a,01
 RO18:7090 CD 44 38         call 3844
 RO18:7093 3E FF            ld   a,FF
 RO18:7095 EA 7D DC         ld   (DC7D),a
 RO18:7098 CD DA 6F         call 6FDA           // "OK/NO" with "NO" highlighted set starting at 8,11
 RO18:709B 18 1E            jr   70BB           // Further wait for button input after pressing Right
 RO18:709D CB 47            bit  0,a            // A
 RO18:709F 28 0A            jr   z,70AB
 RO18:70A1 3E 02            ld   a,02
 RO18:70A3 CD 44 38         call 3844
 RO18:70A6 FA 7D DC         ld   a,(DC7D)
 RO18:70A9 18 12            jr   70BD
 RO18:70AB CB 4F            bit  1,a            // B
 RO18:70AD 28 0C            jr   z,70BB         // Wait for button input if nothing was pressed
 RO18:70AF 3E 0C            ld   a,0C
 RO18:70B1 CD 44 38         call 3844
 RO18:70B4 3E FF            ld   a,FF
 RO18:70B6 EA 7D DC         ld   (DC7D),a
 RO18:70B9 18 02            jr   70BD
 RO18:70BB 18 AD            jr   706A
 RO18:70BD F5               push af
 RO18:70BE EF 10 08 69                          // Restores last table of covered graphics
 RO18:70C2 FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:70C5 CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO18:70C8 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:70CB F1               pop  af
 RO18:70CC C9               ret                 // Controls for Delete confirmation on Unit List, ending with A = 0 for OK, or -1 for NO

 RO18:70CD 06 07
 RO18:70CF 6C AE 9F 8D 6C 7F 6D 66 3F 00

 RO18:70D9 3E 01            ld   a,01
 RO18:70DB E0 83            ld   (ff00+83),a
 RO18:70DD E0 4F            ld   (ff00+4F),a
 RO18:70DF CD 84 6C         call 6C84           // A = Highlighted unit's #
 RO18:70E2 21 80 01         ld   hl,0180
 RO18:70E5 01 00 88         ld   bc,8800
 RO18:70E8 09               add  hl,bc
 RO18:70E9 EF 0B 6C 76                          // (HL ~ HL+63) holds unit map graphics (A = Unit #)
 RO18:70ED C9               ret                 // Highlighted unit's map graphics set up at VRA1($8980)
 RO18:70EE 3E 01            ld   a,01
 RO18:70F0 E0 83            ld   (ff00+83),a
 RO18:70F2 E0 4F            ld   (ff00+4F),a
 RO18:70F4 CD D8 68         call 68D8           // A is set to highlighted unit on Unit List
 RO18:70F7 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:70FB 01 04 00         ld   bc,0004
 RO18:70FE 09               add  hl,bc
 RO18:70FF 7E               ld   a,(hl)         // A = Highlighted unit's #
 RO18:7100 EF 12 98 44                          // A = Promoted Unit, 0 if none or unit isn't S-Rank
 RO18:7104 EA 7F DC         ld   (DC7F),a
 RO18:7107 21 C0 01         ld   hl,01C0
 RO18:710A 01 00 88         ld   bc,8800
 RO18:710D 09               add  hl,bc
 RO18:710E FA 7F DC         ld   a,(DC7F)
 RO18:7111 EF 0B 75 76                          // (HL ~ HL+63) holds unit map graphics
 RO18:7115 C9               ret                 // Highlighted unit's promoted form map graphics set up at VRA1($89C0)
 RO18:7116 FE 00            cp   a,00
 RO18:7118 28 02            jr   z,711C
 RO18:711A 18 20            jr   713C
 RO18:711C 01 06 09         ld   bc,0906
 RO18:711F CD D4 0E         call 0ED4           // HL = $98C9
 RO18:7122 E5               push hl
 RO18:7123 CD D8 68         call 68D8           // A is set to highlighted unit on Unit List
 RO18:7126 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:712A 01 00 00         ld   bc,0000
 RO18:712D 09               add  hl,bc
 RO18:712E 7E               ld   a,(hl)
 RO18:712F 57               ld   d,a
 RO18:7130 3E 98            ld   a,98
 RO18:7132 06 01            ld   b,01
 RO18:7134 0E 05            ld   c,05
 RO18:7136 E1               pop  hl             // $98, 1, 5, Type, ?, Coordinates 9,6
 RO18:7137 EF 0B C9 76                          // Establishes unit graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is unit type)
 RO18:713B C9               ret  
 RO18:713C C5               push bc
 RO18:713D 01 06 09         ld   bc,0906
 RO18:7140 CD D4 0E         call 0ED4           // HL = $98C9
 RO18:7143 C1               pop  bc
 RO18:7144 FA 7F DC         ld   a,(DC7F)
 RO18:7147 57               ld   d,a
 RO18:7148 3E 9C            ld   a,9C
 RO18:714A 06 01            ld   b,01
 RO18:714C 0E 05            ld   c,05           // $9C, 1, 5, Promoted Type, ?, Coordinates 9,6
 RO18:714E EF 0B C9 76                          // Establishes unit graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is unit type)
 RO18:7152 C9               ret                 // Establishes unit graphics state for unit promotion, with A = 0 using the promoted unit state and any other result using the non-promoted unit state
 RO18:7153 FA 5A DC         ld   a,(DC5A)
 RO18:7156 FE 00            cp   a,00           // Deploy (Ends with A = 0, $DC7A = 1)
 RO18:7158 28 0D            jr   z,7167
 RO18:715A FE 01            cp   a,01           // Delete (Ends with A = 0, $DC7A = 0, Carry Flag depends on Delete confirmed; bug causes entry to shift by 2 if not on top unit)
 RO18:715C 28 1D            jr   z,717B
 RO18:715E FE 02            cp   a,02           // Badge (Success ends with A = 0, $DC7A = 0, $DC7B = 1)
 RO18:7160 28 76            jr   z,71D8
 RO18:7162 FE 03            cp   a,03           // Promote (Ends with A = 0, $DC7A = 0, Carry Flag Set)
 RO18:7164 CA 38 72         jp   z,7238
 RO18:7167 3E 01            ld   a,01
 RO18:7169 EA 7A DC         ld   (DC7A),a
 RO18:716C FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:716F EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO18:7173 FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:7176 CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:7179 AF               xor  a
 RO18:717A C9               ret  
 RO18:717B FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:717E EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO18:7182 CD 30 70         call 7030           // Controls for Delete confirmation on Unit List, ending with A = 0 for OK, or -1 for NO
 RO18:7185 FE FF            cp   a,FF
 RO18:7187 28 02            jr   z,718B
 RO18:7189 18 08            jr   7193
 RO18:718B CD 70 74         call 7470           // Establishes Pointing Right Bullet sprite's location on Unit List's Management menu, as well as Unit/Badge Count text
 RO18:718E AF               xor  a
 RO18:718F EA 7A DC         ld   (DC7A),a
 RO18:7192 C9               ret  
 RO18:7193 CD 84 6C         call 6C84           // A = Highlighted unit's #
 RO18:7196 EF 12 B2 42                          // Handles destroyed unit
 RO18:719A 3E 02            ld   a,02
 RO18:719C CD 44 38         call 3844
 RO18:719F FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:71A2 3D               dec  a
 RO18:71A3 EA 66 DC         ld   (DC66),a       // Active player's headcount decreased by 1
 RO18:71A6 FA 5B DC         ld   a,(DC5B)
 RO18:71A9 3D               dec  a
 RO18:71AA FE FF            cp   a,FF
 RO18:71AC 28 03            jr   z,71B1
 RO18:71AE EA 5B DC         ld   (DC5B),a
 RO18:71B1 FA 58 DC         ld   a,(DC58)
 RO18:71B4 3D               dec  a
 RO18:71B5 FE FF            cp   a,FF
 RO18:71B7 28 03            jr   z,71BC
 RO18:71B9 EA 58 DC         ld   (DC58),a       // Deleting a unit shifts the Unit List and the listed selection each up 1 entry if possible
 RO18:71BC CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:71BF EF 10 08 69                          // Restores last table of covered graphics
 RO18:71C3 FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:71C6 CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:71C9 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:71CC CD C3 6F         call 6FC3           // Reestablishes basic information graphics on Unit List
 RO18:71CF AF               xor  a
 RO18:71D0 EA 7A DC         ld   (DC7A),a
 RO18:71D3 CD 72 6C         call 6C72           // Establishes unit count text in Unit List
 RO18:71D6 37               scf  
 RO18:71D7 C9               ret  
 RO18:71D8 CD D8 68         call 68D8           // A is set to highlighted unit on Unit List
 RO18:71DB EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:71DF 01 03 00         ld   bc,0003
 RO18:71E2 09               add  hl,bc
 RO18:71E3 7E               ld   a,(hl)
 RO18:71E4 FE 04            cp   a,04
 RO18:71E6 28 49            jr   z,7231         // Ends with error sound for an S-Rank unit
 RO18:71E8 3E 0E            ld   a,0E
 RO18:71EA CD 8D 05         call 058D           // ($4000) = 14, ($FF81) = 14
 RO18:71ED CD 93 05         call 0593
 RO18:71F0 FA 06 A1         ld   a,(A106)
 RO18:71F3 57               ld   d,a
 RO18:71F4 CD 9B 05         call 059B
 RO18:71F7 7A               ld   a,d
 RO18:71F8 FE 00            cp   a,00
 RO18:71FA 28 35            jr   z,7231         // Ends with error sound if no Badges
 RO18:71FC 3E 0E            ld   a,0E
 RO18:71FE CD 8D 05         call 058D           // ($4000) = 14, ($FF81) = 14
 RO18:7201 CD 93 05         call 0593
 RO18:7204 FA 06 A1         ld   a,(A106)
 RO18:7207 3D               dec  a
 RO18:7208 FE FF            cp   a,FF
 RO18:720A 28 03            jr   z,720F
 RO18:720C EA 06 A1         ld   (A106),a
 RO18:720F CD 9B 05         call 059B
 RO18:7212 CD 84 6C         call 6C84           // A = Highlighted unit's #
 RO18:7215 21 28 00         ld   hl,0028
 RO18:7218 EF 12 DB 40                          // Increases EXP by 40
 RO18:721C CD 94 67         call 6794           // Establishes basic stats for units on Unit list
 RO18:721F 3E 01            ld   a,01
 RO18:7221 EA 7B DC         ld   (DC7B),a
 RO18:7224 3E 02            ld   a,02
 RO18:7226 CD 44 38         call 3844
 RO18:7229 CD 4C 6C         call 6C4C           // Badge count printed in place of unit count for Unit List
 RO18:722C AF               xor  a
 RO18:722D EA 7A DC         ld   (DC7A),a
 RO18:7230 C9               ret  
 RO18:7231 3E 03            ld   a,03
 RO18:7233 CD 44 38         call 3844
 RO18:7236 AF               xor  a
 RO18:7237 C9               ret  
 RO18:7238 FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:723B EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO18:723F 01 04 02         ld   bc,0204
 RO18:7242 11 0C 10         ld   de,100C
 RO18:7245 EF 10 FA 68                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics (BC is starting location, DE is size)
 RO18:7249 F0 83            ld   a,(ff00+83)
 RO18:724B F5               push af
 RO18:724C 3E 01            ld   a,01
 RO18:724E E0 83            ld   (ff00+83),a
 RO18:7250 E0 4F            ld   (ff00+4F),a
 RO18:7252 AF               xor  a
 RO18:7253 01 05 03         ld   bc,0305
 RO18:7256 11 0A 0E         ld   de,0E0A
 RO18:7259 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 3~16,5~14
 RO18:725D F1               pop  af
 RO18:725E E0 83            ld   (ff00+83),a
 RO18:7260 E0 4F            ld   (ff00+4F),a
 RO18:7262 01 09 05         ld   bc,0509
 RO18:7265 CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates 5,9
 RO18:7268 CD D9 70         call 70D9           // Highlighted unit's map graphics set up at VRA1($8980)
 RO18:726B CD EE 70         call 70EE           // Highlighted unit's promoted form map graphics set up at VRA1($89C0)
 RO18:726E CD 84 6C         call 6C84           // A = Highlighted unit's #
 RO18:7271 EF 12 C0 44                          // Promotion stat establishing
 RO18:7275 CD 94 67         call 6794           // Establishes basic stats for units on Unit list
 RO18:7278 21 43 73         ld   hl,7343        // Subject marker
 RO18:727B 01 0A 05         ld   bc,050A
 RO18:727E CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO18:7281 FA 7F DC         ld   a,(DC7F)
 RO18:7284 01 0B 05         ld   bc,050B
 RO18:7287 CD 39 6C         call 6C39           // Unit type A's name printed at coordinates BC
 RO18:728A 21 45 73         ld   hl,7345        // "...has been promoted!"
 RO18:728D 01 0C 05         ld   bc,050C
 RO18:7290 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO18:7293 FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:7296 CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:7299 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:729C AF               xor  a
 RO18:729D EA 58 DA         ld   (DA58),a
 RO18:72A0 EA 59 DA         ld   (DA59),a
 RO18:72A3 3E 0A            ld   a,0A
 RO18:72A5 EA 57 DA         ld   (DA57),a
 RO18:72A8 AF               xor  a
 RO18:72A9 CD 16 71         call 7116           // Establishes unit graphics non-promoted state for unit promotion
 RO18:72AC 11 1E 00         ld   de,001E
 RO18:72AF 01 00 00         ld   bc,0000
 RO18:72B2 EF 27 86 40                          // Handles all sprite advanced behavior for 30 frames, with sprites needing to spawn first
 RO18:72B6 CD 43 38         call 3843
 RO18:72B9 3E 64            ld   a,64
 RO18:72BB CD 44 38         call 3844
 RO18:72BE CD D2 04         call 04D2           // Next frame (loop begins here)
 RO18:72C1 3E 00            ld   a,00
 RO18:72C3 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:72C7 FA 57 DA         ld   a,(DA57)
 RO18:72CA FE 0A            cp   a,0A
 RO18:72CC 28 02            jr   z,72D0
 RO18:72CE 18 23            jr   72F3
 RO18:72D0 AF               xor  a
 RO18:72D1 EA 57 DA         ld   (DA57),a
 RO18:72D4 FA 58 DA         ld   a,(DA58)
 RO18:72D7 FE 00            cp   a,00
 RO18:72D9 28 02            jr   z,72DD
 RO18:72DB 18 0B            jr   72E8
 RO18:72DD AF               xor  a
 RO18:72DE CD 16 71         call 7116           // Establishes unit graphics non-promoted state for unit promotion
 RO18:72E1 3E 01            ld   a,01
 RO18:72E3 EA 58 DA         ld   (DA58),a
 RO18:72E6 18 0B            jr   72F3
 RO18:72E8 3E 01            ld   a,01
 RO18:72EA CD 16 71         call 7116           // Establishes unit graphics promoted state for unit promotion
 RO18:72ED AF               xor  a
 RO18:72EE EA 58 DA         ld   (DA58),a
 RO18:72F1 18 00            jr   72F3
 RO18:72F3 FA 57 DA         ld   a,(DA57)
 RO18:72F6 3C               inc  a
 RO18:72F7 EA 57 DA         ld   (DA57),a
 RO18:72FA FA 59 DA         ld   a,(DA59)
 RO18:72FD 3C               inc  a
 RO18:72FE EA 59 DA         ld   (DA59),a
 RO18:7301 FE 78            cp   a,78
 RO18:7303 20 B9            jr   nz,72BE        // Switching lasts 2 seconds
 RO18:7305 3E 85            ld   a,85
 RO18:7307 CD 44 38         call 3844
 RO18:730A 3E 01            ld   a,01
 RO18:730C CD 16 71         call 7116           // Establishes unit graphics promoted state for unit promotion
 RO18:730F CD A2 05         call 05A2           // Button update, next frame
 RO18:7312 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:7315 3E 00            ld   a,00
 RO18:7317 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:731B F0 92            ld   a,(ff00+92)
 RO18:731D CB 47            bit  0,a            // A
 RO18:731F 28 07            jr   z,7328
 RO18:7321 3E 02            ld   a,02
 RO18:7323 CD 44 38         call 3844
 RO18:7326 18 02            jr   732A
 RO18:7328 18 E5            jr   730F           // Waits for player to press A before continuing
 RO18:732A EF 10 08 69                          // Restores last table of covered graphics
 RO18:732E EF 10 08 69                          // Restores last table of covered graphics
 RO18:7332 CD C3 6F         call 6FC3           // Reestablishes basic information graphics on Unit List
 RO18:7335 CD 72 6C         call 6C72           // Establishes unit count text in Unit List
 RO18:7338 AF               xor  a
 RO18:7339 EA 7A DC         ld   (DC7A),a
 RO18:733C 3E 02            ld   a,02
 RO18:733E EA 5A DC         ld   (DC5A),a
 RO18:7341 37               scf  
 RO18:7342 C9               ret                 // Action of command issued on Unit List's Management menu; Deploy sets $DC7A, Badge sets $DC7B, and Delete (confirm) or Promote sets Carry Flag

 RO18:7343 8E 00
 RO18:7345 76 20 6C 8D 66 6C 70 21 00

 RO18:734E CD ED 6E         call 6EED           // Establishes graphics for Unit List's Management menu
 RO18:7351 AF               xor  a
 RO18:7352 EA 7B DC         ld   (DC7B),a
 RO18:7355 CD A2 05         call 05A2           // Button update, next frame
 RO18:7358 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:735B 3E 00            ld   a,00
 RO18:735D EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:7361 F0 92            ld   a,(ff00+92)
 RO18:7363 CB 77            bit  6,a            // Up
 RO18:7365 28 19            jr   z,7380
 RO18:7367 3E 01            ld   a,01
 RO18:7369 CD 44 38         call 3844
 RO18:736C FA 5A DC         ld   a,(DC5A)
 RO18:736F 3D               dec  a
 RO18:7370 FE FF            cp   a,FF
 RO18:7372 20 04            jr   nz,7378
 RO18:7374 FA 7E DC         ld   a,(DC7E)
 RO18:7377 3D               dec  a              // Handles rotation
 RO18:7378 EA 5A DC         ld   (DC5A),a
 RO18:737B CD 70 74         call 7470           // Establishes Pointing Right Bullet sprite's location on Unit List's Management menu, as well as Unit/Badge Count text
 RO18:737E 18 D5            jr   7355           // Further wait for button input after pressing Up
 RO18:7380 CB 7F            bit  7,a            // Down
 RO18:7382 28 1B            jr   z,739F
 RO18:7384 3E 01            ld   a,01
 RO18:7386 CD 44 38         call 3844
 RO18:7389 FA 5A DC         ld   a,(DC5A)
 RO18:738C 3C               inc  a
 RO18:738D F5               push af
 RO18:738E FA 7E DC         ld   a,(DC7E)
 RO18:7391 4F               ld   c,a
 RO18:7392 F1               pop  af
 RO18:7393 B9               cp   c
 RO18:7394 20 01            jr   nz,7397
 RO18:7396 AF               xor  a              // Handles rotation
 RO18:7397 EA 5A DC         ld   (DC5A),a
 RO18:739A CD 70 74         call 7470           // Establishes Pointing Right Bullet sprite's location on Unit List's Management menu, as well as Unit/Badge Count text
 RO18:739D 18 B6            jr   7355           // Further wait for button input after pressing Down
 RO18:739F CB 47            bit  0,a            // A
 RO18:73A1 28 0E            jr   z,73B1
 RO18:73A3 CD 53 71         call 7153           // Action of command issued on Unit List's Management menu; Deploy sets $DC7A, Badge sets $DC7B, and Delete (confirm) or Promote sets Carry Flag
 RO18:73A6 38 2B            jr   c,73D3         // Jumps for Delete (confirmed) or Promote
 RO18:73A8 FA 7A DC         ld   a,(DC7A)
 RO18:73AB FE 00            cp   a,00
 RO18:73AD 28 A6            jr   z,7355
 RO18:73AF 18 22            jr   73D3
 RO18:73B1 CB 4F            bit  1,a            // B
 RO18:73B3 28 A0            jr   z,7355
 RO18:73B5 3E 0C            ld   a,0C
 RO18:73B7 CD 44 38         call 3844
 RO18:73BA FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:73BD CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:73C0 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:73C3 EF 10 08 69                          // Restores last table of covered graphics
 RO18:73C7 CD 72 6C         call 6C72           // Establishes unit count text in Unit List
 RO18:73CA FA 7B DC         ld   a,(DC7B)
 RO18:73CD A7               and  a
 RO18:73CE 28 03            jr   z,73D3         // In case of Level Up, break this
 RO18:73D0 CD C3 6F         call 6FC3           // Reestablishes basic information graphics on Unit List
 RO18:73D3 FA 7A DC         ld   a,(DC7A)
 RO18:73D6 FE 01            cp   a,01
 RO18:73D8 28 04            jr   z,73DE
 RO18:73DA EF 10 08 69                          // Restores last table of covered graphics
 RO18:73DE C9               ret                 // Controls for Unit List's Management menu; ends with backing out for Cancel, Delete (confirm), or Promote; or $DC7A set to 1 for Deploy
 RO18:73DF 3E 06            ld   a,06
 RO18:73E1 CD 44 38         call 3844
 RO18:73E4 01 04 02         ld   bc,0204
 RO18:73E7 11 08 10         ld   de,1008
 RO18:73EA EF 10 01 69                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics, frame update per row version (BC is starting location, DE is size)
 RO18:73EE F0 83            ld   a,(ff00+83)
 RO18:73F0 F5               push af
 RO18:73F1 3E 01            ld   a,01
 RO18:73F3 E0 83            ld   (ff00+83),a
 RO18:73F5 E0 4F            ld   (ff00+4F),a
 RO18:73F7 AF               xor  a
 RO18:73F8 01 05 03         ld   bc,0305
 RO18:73FB 11 06 0E         ld   de,0E06
 RO18:73FE EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 3~16,5~10
 RO18:7402 F1               pop  af
 RO18:7403 E0 83            ld   (ff00+83),a
 RO18:7405 E0 4F            ld   (ff00+4F),a
 RO18:7407 21 74 7A         ld   hl,7A74        // 4, 5, "Unit's type"
 RO18:740A CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:740D 21 80 7A         ld   hl,7A80        // 4, 6, "LEVEL"
 RO18:7410 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:7413 21 86 7A         ld   hl,7A86        // 4, 7, "Fuel"
 RO18:7416 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:7419 21 8E 7A         ld   hl,7A8E        // 4, 8, "Unit number"
 RO18:741C CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:741F 21 97 7A         ld   hl,7A97        // 4, 9, "Unsent Unit"
 RO18:7422 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:7425 21 A2 7A         ld   hl,7AA2        // 4, 10, "Unmoved Unit"
 RO18:7428 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO18:742B F0 83            ld   a,(ff00+83)
 RO18:742D F5               push af
 RO18:742E 3E 20            ld   a,20
 RO18:7430 0E 00            ld   c,00
 RO18:7432 06 15            ld   b,15
 RO18:7434 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO18:7437 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO18:743A EA 56 DC         ld   (DC56),a
 RO18:743D CD 5B 74         call 745B           // Establishes Pointing Right Bullet sprite's location on Unit List's Organize menu
 RO18:7440 F1               pop  af
 RO18:7441 E0 83            ld   (ff00+83),a
 RO18:7443 E0 4F            ld   (ff00+4F),a
 RO18:7445 C9               ret                 // Establishes Unit List's Organize menu graphics as a whole
 RO18:7446 FA 58 DC         ld   a,(DC58)
 RO18:7449 06 10            ld   b,10
 RO18:744B CD 95 29         call 2995           // HL = A * B
 RO18:744E 7D               ld   a,l
 RO18:744F C6 38            add  a,38
 RO18:7451 4F               ld   c,a
 RO18:7452 06 14            ld   b,14
 RO18:7454 FA 53 DC         ld   a,(DC53)       // Pointing Right Bullet
 RO18:7457 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:745A C9               ret                 // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:745B FA 59 DC         ld   a,(DC59)
 RO18:745E 06 08            ld   b,08
 RO18:7460 CD 95 29         call 2995           // HL = A * B
 RO18:7463 7D               ld   a,l
 RO18:7464 C6 3C            add  a,3C
 RO18:7466 4F               ld   c,a
 RO18:7467 06 20            ld   b,20
 RO18:7469 FA 56 DC         ld   a,(DC56)       // Pointing Right Bullet (Organize option)
 RO18:746C CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:746F C9               ret                 // Establishes Pointing Right Bullet sprite's location on Unit List's Organize menu
 RO18:7470 FA 5A DC         ld   a,(DC5A)
 RO18:7473 FE 02            cp   a,02
 RO18:7475 28 05            jr   z,747C
 RO18:7477 CD 72 6C         call 6C72           // Establishes unit count text in Unit List
 RO18:747A 18 03            jr   747F
 RO18:747C CD 4C 6C         call 6C4C           // Badge count printed in place of unit count for Unit List
 RO18:747F FA 5A DC         ld   a,(DC5A)
 RO18:7482 06 10            ld   b,10
 RO18:7484 CD 95 29         call 2995           // HL = A * B
 RO18:7487 7D               ld   a,l
 RO18:7488 C6 48            add  a,48
 RO18:748A 4F               ld   c,a
 RO18:748B 06 30            ld   b,30
 RO18:748D FA 57 DC         ld   a,(DC57)       // Pointing Right Bullet (Management option)
 RO18:7490 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO18:7493 C9               ret                 // Establishes Pointing Right Bullet sprite's location on Unit List's Management menu, as well as Unit/Badge Count text
 RO18:7494 F0 82            ld   a,(ff00+82)
 RO18:7496 F5               push af
 RO18:7497 3E 03            ld   a,03
 RO18:7499 E0 82            ld   (ff00+82),a
 RO18:749B E0 70            ld   (ff00+70),a
 RO18:749D AF               xor  a
 RO18:749E EA 70 DC         ld   (DC70),a
 RO18:74A1 01 05 00         ld   bc,0005
 RO18:74A4 21 4E DC         ld   hl,DC4E
 RO18:74A7 AF               xor  a
 RO18:74A8 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO18:74AB FA 70 DC         ld   a,(DC70)       // Loop begins here
 RO18:74AE EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:74B2 54               ld   d,h
 RO18:74B3 5D               ld   e,l
 RO18:74B4 21 4E DC         ld   hl,DC4E
 RO18:74B7 01 05 00         ld   bc,0005
 RO18:74BA CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:74BD FA 4E DC         ld   a,(DC4E)
 RO18:74C0 CB 3F            srl  a
 RO18:74C2 EF 18 AA 4A                          // A = 1 for Air, 2 for Sea, 0 otherwise
 RO18:74C6 FE 00            cp   a,00
 RO18:74C8 28 02            jr   z,74CC
 RO18:74CA 18 1D            jr   74E9
 RO18:74CC FA 70 DC         ld   a,(DC70)
 RO18:74CF EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:74D3 54               ld   d,h
 RO18:74D4 5D               ld   e,l
 RO18:74D5 FA 71 DC         ld   a,(DC71)
 RO18:74D8 EF 17 52 73                          // HL is starting address of unit A on secondary list on Unit List
 RO18:74DC 01 05 00         ld   bc,0005
 RO18:74DF CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:74E2 FA 71 DC         ld   a,(DC71)
 RO18:74E5 3C               inc  a
 RO18:74E6 EA 71 DC         ld   (DC71),a
 RO18:74E9 FA 70 DC         ld   a,(DC70)
 RO18:74EC 3C               inc  a
 RO18:74ED EA 70 DC         ld   (DC70),a
 RO18:74F0 4F               ld   c,a
 RO18:74F1 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:74F4 B9               cp   c
 RO18:74F5 20 B4            jr   nz,74AB
 RO18:74F7 F1               pop  af
 RO18:74F8 E0 82            ld   (ff00+82),a
 RO18:74FA E0 70            ld   (ff00+70),a
 RO18:74FC C9               ret                 // Added entries on Unit List's secondary list are land units (unused)
 RO18:74FD F0 82            ld   a,(ff00+82)
 RO18:74FF F5               push af
 RO18:7500 3E 03            ld   a,03
 RO18:7502 E0 82            ld   (ff00+82),a
 RO18:7504 E0 70            ld   (ff00+70),a
 RO18:7506 AF               xor  a
 RO18:7507 EA 70 DC         ld   (DC70),a
 RO18:750A 01 05 00         ld   bc,0005
 RO18:750D 21 4E DC         ld   hl,DC4E
 RO18:7510 AF               xor  a
 RO18:7511 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO18:7514 FA 70 DC         ld   a,(DC70)       // Loop begins here
 RO18:7517 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:751B 54               ld   d,h
 RO18:751C 5D               ld   e,l
 RO18:751D 21 4E DC         ld   hl,DC4E
 RO18:7520 01 05 00         ld   bc,0005
 RO18:7523 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:7526 FA 4E DC         ld   a,(DC4E)
 RO18:7529 CB 3F            srl  a
 RO18:752B EF 18 AA 4A                          // A = 1 for Air, 2 for Sea, 0 otherwise
 RO18:752F FE 01            cp   a,01
 RO18:7531 28 02            jr   z,7535
 RO18:7533 18 1D            jr   7552
 RO18:7535 FA 70 DC         ld   a,(DC70)
 RO18:7538 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:753C 54               ld   d,h
 RO18:753D 5D               ld   e,l
 RO18:753E FA 71 DC         ld   a,(DC71)
 RO18:7541 EF 17 52 73                          // HL is starting address of unit A on secondary list on Unit List
 RO18:7545 01 05 00         ld   bc,0005
 RO18:7548 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:754B FA 71 DC         ld   a,(DC71)
 RO18:754E 3C               inc  a
 RO18:754F EA 71 DC         ld   (DC71),a
 RO18:7552 FA 70 DC         ld   a,(DC70)
 RO18:7555 3C               inc  a
 RO18:7556 EA 70 DC         ld   (DC70),a
 RO18:7559 4F               ld   c,a
 RO18:755A FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:755D B9               cp   c
 RO18:755E 20 B4            jr   nz,7514
 RO18:7560 F1               pop  af
 RO18:7561 E0 82            ld   (ff00+82),a
 RO18:7563 E0 70            ld   (ff00+70),a
 RO18:7565 C9               ret                 // Added entries on Unit List's secondary list are air units (unused)
 RO18:7566 CD 7C 75         call 757C           // Sorts the Unit List by Type, with earliest at top to latest at bottom
 RO18:7569 C9               ret  
 RO18:756A CD 2D 78         call 782D           // Added entries on Unit List's secondary list are units in Reserve
 RO18:756D CD BB 77         call 77BB           // Added entries on Unit List's secondary list are units not in Reserve
 RO18:7570 C9               ret                 // Sorts the Unit List with units in Reserve, then units not in Reserve
 RO18:7571 CD 9D 78         call 789D           // Added entries on Unit List's secondary list are units not yet moved
 RO18:7574 CD 0F 79         call 790F           // Added entries on Unit List's secondary list are units already moved
 RO18:7577 C9               ret                 // Sorts the Unit List with units not yet moved, then units already moved
 RO18:7578 CD 93 75         call 7593           // Sorts the Unit List by Level, with highest at top to lowest at bottom
 RO18:757B C9               ret  
 RO18:757C F0 82            ld   a,(ff00+82)
 RO18:757E F5               push af
 RO18:757F 3E 03            ld   a,03
 RO18:7581 E0 82            ld   (ff00+82),a
 RO18:7583 E0 70            ld   (ff00+70),a
 RO18:7585 3E 00            ld   a,00
 RO18:7587 EA 73 DC         ld   (DC73),a
 RO18:758A CD 62 76         call 7662           // Sorts the Unit List by Type, with earliest at top to latest at bottom
 RO18:758D F1               pop  af
 RO18:758E E0 82            ld   (ff00+82),a
 RO18:7590 E0 70            ld   (ff00+70),a
 RO18:7592 C9               ret  
 RO18:7593 F0 82            ld   a,(ff00+82)
 RO18:7595 F5               push af
 RO18:7596 3E 03            ld   a,03
 RO18:7598 E0 82            ld   (ff00+82),a
 RO18:759A E0 70            ld   (ff00+70),a
 RO18:759C 3E 03            ld   a,03
 RO18:759E EA 73 DC         ld   (DC73),a
 RO18:75A1 CD DA 76         call 76DA           // Sorts the Unit List by Level, with highest at top to lowest at bottom
 RO18:75A4 F1               pop  af
 RO18:75A5 E0 82            ld   (ff00+82),a
 RO18:75A7 E0 70            ld   (ff00+70),a
 RO18:75A9 C9               ret  
 RO18:75AA CD AE 75         call 75AE           // Sorts the Unit List by Fuel, with lowest at top to highest at bottom
 RO18:75AD C9               ret  
 RO18:75AE F0 82            ld   a,(ff00+82)
 RO18:75B0 F5               push af
 RO18:75B1 3E 03            ld   a,03
 RO18:75B3 E0 82            ld   (ff00+82),a
 RO18:75B5 E0 70            ld   (ff00+70),a
 RO18:75B7 3E 02            ld   a,02
 RO18:75B9 EA 73 DC         ld   (DC73),a
 RO18:75BC CD 62 76         call 7662           // Sorts the Unit List by Fuel, with lowest at top to highest at bottom
 RO18:75BF F1               pop  af
 RO18:75C0 E0 82            ld   (ff00+82),a
 RO18:75C2 E0 70            ld   (ff00+70),a
 RO18:75C4 C9               ret  
 RO18:75C5 CD C9 75         call 75C9           // Sorts the Unit List by HP, with lowest at top to highest at bottom
 RO18:75C8 C9               ret  
 RO18:75C9 F0 82            ld   a,(ff00+82)
 RO18:75CB F5               push af
 RO18:75CC 3E 03            ld   a,03
 RO18:75CE E0 82            ld   (ff00+82),a
 RO18:75D0 E0 70            ld   (ff00+70),a
 RO18:75D2 3E 01            ld   a,01
 RO18:75D4 EA 73 DC         ld   (DC73),a
 RO18:75D7 CD 62 76         call 7662           // Sorts the Unit List by HP, with lowest at top to highest at bottom
 RO18:75DA F1               pop  af
 RO18:75DB E0 82            ld   (ff00+82),a
 RO18:75DD E0 70            ld   (ff00+70),a
 RO18:75DF C9               ret  
 RO18:75E0 4F               ld   c,a
 RO18:75E1 F0 82            ld   a,(ff00+82)
 RO18:75E3 F5               push af
 RO18:75E4 3E 03            ld   a,03
 RO18:75E6 E0 82            ld   (ff00+82),a
 RO18:75E8 E0 70            ld   (ff00+70),a
 RO18:75EA 79               ld   a,c
 RO18:75EB EA 74 DC         ld   (DC74),a
 RO18:75EE 78               ld   a,b
 RO18:75EF EA 75 DC         ld   (DC75),a       // A, B
 RO18:75F2 FA 74 DC         ld   a,(DC74)
 RO18:75F5 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:75F9 54               ld   d,h
 RO18:75FA 5D               ld   e,l
 RO18:75FB 21 4E DC         ld   hl,DC4E
 RO18:75FE 01 05 00         ld   bc,0005
 RO18:7601 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1) (placeholder for unit A's stats)
 RO18:7604 FA 75 DC         ld   a,(DC75)
 RO18:7607 EF 17 46 73                          // HL is starting address of unit B on Unit list
 RO18:760B 54               ld   d,h
 RO18:760C 5D               ld   e,l
 RO18:760D FA 74 DC         ld   a,(DC74)
 RO18:7610 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:7614 01 05 00         ld   bc,0005
 RO18:7617 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1) (Unit B's stats now placed where Unit A's stats originally were)
 RO18:761A 11 4E DC         ld   de,DC4E
 RO18:761D FA 75 DC         ld   a,(DC75)
 RO18:7620 EF 17 46 73                          // HL is starting address of unit B on Unit list
 RO18:7624 01 05 00         ld   bc,0005
 RO18:7627 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1) (Unit A's stats now placed where Unit B's stats originally were)
 RO18:762A F1               pop  af
 RO18:762B E0 82            ld   (ff00+82),a
 RO18:762D E0 70            ld   (ff00+70),a
 RO18:762F C9               ret                 // Stats of Units A and B switch places on Unit List
 RO18:7630 C5               push bc
 RO18:7631 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:7635 54               ld   d,h
 RO18:7636 5D               ld   e,l
 RO18:7637 21 4E DC         ld   hl,DC4E
 RO18:763A 01 05 00         ld   bc,0005
 RO18:763D CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:7640 C1               pop  bc
 RO18:7641 78               ld   a,b
 RO18:7642 FE 00            cp   a,00           // Type
 RO18:7644 28 0C            jr   z,7652
 RO18:7646 FE 01            cp   a,01           // HP
 RO18:7648 28 0C            jr   z,7656
 RO18:764A FE 02            cp   a,02           // Fuel
 RO18:764C 28 0C            jr   z,765A
 RO18:764E FE 03            cp   a,03           // Level
 RO18:7650 28 0C            jr   z,765E
 RO18:7652 FA 4E DC         ld   a,(DC4E)
 RO18:7655 C9               ret  
 RO18:7656 FA 4F DC         ld   a,(DC4F)
 RO18:7659 C9               ret  
 RO18:765A FA 50 DC         ld   a,(DC50)
 RO18:765D C9               ret  
 RO18:765E FA 51 DC         ld   a,(DC51)
 RO18:7661 C9               ret                 // A = Unit A's value with stat B
 RO18:7662 F0 82            ld   a,(ff00+82)
 RO18:7664 F5               push af
 RO18:7665 3E 03            ld   a,03
 RO18:7667 E0 82            ld   (ff00+82),a
 RO18:7669 E0 70            ld   (ff00+70),a
 RO18:766B AF               xor  a
 RO18:766C EA 79 DC         ld   (DC79),a
 RO18:766F FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:7672 3D               dec  a
 RO18:7673 EA 77 DC         ld   (DC77),a
 RO18:7676 AF               xor  a
 RO18:7677 EA 78 DC         ld   (DC78),a
 RO18:767A 18 0F            jr   768B
 RO18:767C AF               xor  a
 RO18:767D EA 78 DC         ld   (DC78),a
 RO18:7680 FA 77 DC         ld   a,(DC77)
 RO18:7683 FE 00            cp   a,00
 RO18:7685 28 4D            jr   z,76D4
 RO18:7687 3D               dec  a
 RO18:7688 EA 77 DC         ld   (DC77),a
 RO18:768B FA 78 DC         ld   a,(DC78)
 RO18:768E 4F               ld   c,a
 RO18:768F FA 77 DC         ld   a,(DC77)
 RO18:7692 B9               cp   c
 RO18:7693 28 38            jr   z,76CD
 RO18:7695 FA 79 DC         ld   a,(DC79)
 RO18:7698 3C               inc  a
 RO18:7699 EA 79 DC         ld   (DC79),a
 RO18:769C FA 73 DC         ld   a,(DC73)
 RO18:769F 47               ld   b,a
 RO18:76A0 FA 78 DC         ld   a,(DC78)
 RO18:76A3 CD 30 76         call 7630           // A = Unit A's value with stat B
 RO18:76A6 4F               ld   c,a
 RO18:76A7 C5               push bc
 RO18:76A8 FA 73 DC         ld   a,(DC73)
 RO18:76AB 47               ld   b,a
 RO18:76AC FA 78 DC         ld   a,(DC78)
 RO18:76AF 3C               inc  a
 RO18:76B0 CD 30 76         call 7630           // A = Unit A's value with stat B
 RO18:76B3 C1               pop  bc             // A has 2nd unit's stat value, C has 1st unit's stat value
 RO18:76B4 B9               cp   c
 RO18:76B5 38 02            jr   c,76B9
 RO18:76B7 18 0B            jr   76C4           // Skips switch if 1st unit ties or loses (sorting happens by lowest value first)
 RO18:76B9 FA 78 DC         ld   a,(DC78)
 RO18:76BC 3C               inc  a
 RO18:76BD 47               ld   b,a
 RO18:76BE FA 78 DC         ld   a,(DC78)       // Unit 1, Unit 2
 RO18:76C1 CD E0 75         call 75E0           // Stats of Units A and B switch places on Unit List
 RO18:76C4 FA 78 DC         ld   a,(DC78)
 RO18:76C7 3C               inc  a
 RO18:76C8 EA 78 DC         ld   (DC78),a
 RO18:76CB 18 BE            jr   768B
 RO18:76CD 3E 01            ld   a,01
 RO18:76CF EA 78 DC         ld   (DC78),a
 RO18:76D2 18 A8            jr   767C
 RO18:76D4 F1               pop  af
 RO18:76D5 E0 82            ld   (ff00+82),a
 RO18:76D7 E0 70            ld   (ff00+70),a
 RO18:76D9 C9               ret                 // Sorts the Unit List by given stat, with lowest at top to highest at bottom
 RO18:76DA F0 82            ld   a,(ff00+82)
 RO18:76DC F5               push af
 RO18:76DD 3E 03            ld   a,03
 RO18:76DF E0 82            ld   (ff00+82),a
 RO18:76E1 E0 70            ld   (ff00+70),a
 RO18:76E3 AF               xor  a
 RO18:76E4 EA 79 DC         ld   (DC79),a
 RO18:76E7 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:76EA 3D               dec  a
 RO18:76EB EA 77 DC         ld   (DC77),a       // Decremented by 1
 RO18:76EE AF               xor  a
 RO18:76EF EA 78 DC         ld   (DC78),a       // No units checked yet
 RO18:76F2 18 0F            jr   7703
 RO18:76F4 AF               xor  a
 RO18:76F5 EA 78 DC         ld   (DC78),a
 RO18:76F8 FA 77 DC         ld   a,(DC77)
 RO18:76FB FE 00            cp   a,00
 RO18:76FD 28 4D            jr   z,774C
 RO18:76FF 3D               dec  a
 RO18:7700 EA 77 DC         ld   (DC77),a
 RO18:7703 FA 78 DC         ld   a,(DC78)       // Actual start here
 RO18:7706 4F               ld   c,a
 RO18:7707 FA 77 DC         ld   a,(DC77)
 RO18:770A B9               cp   c              // Last unit yet?
 RO18:770B 28 38            jr   z,7745         // Cycle ended with 1 unit checked
 RO18:770D FA 79 DC         ld   a,(DC79)
 RO18:7710 3C               inc  a
 RO18:7711 EA 79 DC         ld   (DC79),a
 RO18:7714 FA 73 DC         ld   a,(DC73)
 RO18:7717 47               ld   b,a
 RO18:7718 FA 78 DC         ld   a,(DC78)
 RO18:771B 3C               inc  a
 RO18:771C CD 30 76         call 7630           // A = Unit A's value with stat B
 RO18:771F 4F               ld   c,a
 RO18:7720 C5               push bc
 RO18:7721 FA 73 DC         ld   a,(DC73)
 RO18:7724 47               ld   b,a
 RO18:7725 FA 78 DC         ld   a,(DC78)
 RO18:7728 CD 30 76         call 7630           // A = Unit A's value with stat B
 RO18:772B C1               pop  bc
 RO18:772C B9               cp   c              // Carry set by CMP 2nd unit's Stat B, 1st unit's Stat B
 RO18:772D 38 02            jr   c,7731         // Skips switch if 1st unit wins (sorting happens by highest value first)
 RO18:772F 18 0B            jr   773C
 RO18:7731 FA 78 DC         ld   a,(DC78)
 RO18:7734 3C               inc  a
 RO18:7735 47               ld   b,a
 RO18:7736 FA 78 DC         ld   a,(DC78)
 RO18:7739 CD E0 75         call 75E0           // Stats of Units A and B switch places on Unit List
 RO18:773C FA 78 DC         ld   a,(DC78)
 RO18:773F 3C               inc  a
 RO18:7740 EA 78 DC         ld   (DC78),a
 RO18:7743 18 BE            jr   7703
 RO18:7745 3E 01            ld   a,01
 RO18:7747 EA 78 DC         ld   (DC78),a
 RO18:774A 18 A8            jr   76F4
 RO18:774C F1               pop  af
 RO18:774D E0 82            ld   (ff00+82),a
 RO18:774F E0 70            ld   (ff00+70),a
 RO18:7751 C9               ret                 // Sorts the Unit List by given stat, with highest at top to lowest at bottom
 RO18:7752 F0 82            ld   a,(ff00+82)
 RO18:7754 F5               push af
 RO18:7755 3E 03            ld   a,03
 RO18:7757 E0 82            ld   (ff00+82),a
 RO18:7759 E0 70            ld   (ff00+70),a
 RO18:775B AF               xor  a
 RO18:775C EA 70 DC         ld   (DC70),a
 RO18:775F 01 05 00         ld   bc,0005
 RO18:7762 21 4E DC         ld   hl,DC4E
 RO18:7765 AF               xor  a
 RO18:7766 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO18:7769 FA 70 DC         ld   a,(DC70)       // Loop begins here
 RO18:776C EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:7770 54               ld   d,h
 RO18:7771 5D               ld   e,l
 RO18:7772 21 4E DC         ld   hl,DC4E
 RO18:7775 01 05 00         ld   bc,0005
 RO18:7778 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:777B FA 4E DC         ld   a,(DC4E)
 RO18:777E CB 3F            srl  a
 RO18:7780 EF 18 AA 4A                          // A = 1 for Air, 2 for Sea, 0 otherwise
 RO18:7784 FE 02            cp   a,02
 RO18:7786 28 02            jr   z,778A
 RO18:7788 18 1D            jr   77A7
 RO18:778A FA 70 DC         ld   a,(DC70)
 RO18:778D EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:7791 54               ld   d,h
 RO18:7792 5D               ld   e,l
 RO18:7793 FA 71 DC         ld   a,(DC71)
 RO18:7796 EF 17 52 73                          // HL is starting address of unit A on secondary list on Unit List
 RO18:779A 01 05 00         ld   bc,0005
 RO18:779D CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:77A0 FA 71 DC         ld   a,(DC71)
 RO18:77A3 3C               inc  a
 RO18:77A4 EA 71 DC         ld   (DC71),a
 RO18:77A7 FA 70 DC         ld   a,(DC70)
 RO18:77AA 3C               inc  a
 RO18:77AB EA 70 DC         ld   (DC70),a
 RO18:77AE 4F               ld   c,a
 RO18:77AF FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:77B2 B9               cp   c
 RO18:77B3 20 B4            jr   nz,7769
 RO18:77B5 F1               pop  af
 RO18:77B6 E0 82            ld   (ff00+82),a
 RO18:77B8 E0 70            ld   (ff00+70),a
 RO18:77BA C9               ret                 // Added entries on Unit List's secondary list are sea units (unused)
 RO18:77BB F0 82            ld   a,(ff00+82)
 RO18:77BD F5               push af
 RO18:77BE 3E 03            ld   a,03
 RO18:77C0 E0 82            ld   (ff00+82),a
 RO18:77C2 E0 70            ld   (ff00+70),a
 RO18:77C4 AF               xor  a
 RO18:77C5 EA 70 DC         ld   (DC70),a
 RO18:77C8 01 05 00         ld   bc,0005
 RO18:77CB 21 4E DC         ld   hl,DC4E
 RO18:77CE AF               xor  a
 RO18:77CF CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO18:77D2 FA 70 DC         ld   a,(DC70)       // Loop begins here
 RO18:77D5 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:77D9 54               ld   d,h
 RO18:77DA 5D               ld   e,l
 RO18:77DB 21 4E DC         ld   hl,DC4E
 RO18:77DE 01 05 00         ld   bc,0005
 RO18:77E1 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:77E4 FA 52 DC         ld   a,(DC52)
 RO18:77E7 0E 03            ld   c,03
 RO18:77E9 EF 12 66 40                          // A = unit's status flags
 RO18:77ED EA 7C DC         ld   (DC7C),a
 RO18:77F0 3E 01            ld   a,01
 RO18:77F2 21 7C DC         ld   hl,DC7C
 RO18:77F5 CD C7 3A         call 3AC7           // Unit in Reserve flag
 RO18:77F8 28 02            jr   z,77FC
 RO18:77FA 18 1D            jr   7819
 RO18:77FC FA 70 DC         ld   a,(DC70)
 RO18:77FF EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:7803 54               ld   d,h
 RO18:7804 5D               ld   e,l
 RO18:7805 FA 71 DC         ld   a,(DC71)
 RO18:7808 EF 17 52 73                          // HL is starting address of unit A on secondary list on Unit List
 RO18:780C 01 05 00         ld   bc,0005
 RO18:780F CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:7812 FA 71 DC         ld   a,(DC71)
 RO18:7815 3C               inc  a
 RO18:7816 EA 71 DC         ld   (DC71),a
 RO18:7819 FA 70 DC         ld   a,(DC70)
 RO18:781C 3C               inc  a
 RO18:781D EA 70 DC         ld   (DC70),a
 RO18:7820 4F               ld   c,a
 RO18:7821 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:7824 B9               cp   c
 RO18:7825 20 AB            jr   nz,77D2
 RO18:7827 F1               pop  af
 RO18:7828 E0 82            ld   (ff00+82),a
 RO18:782A E0 70            ld   (ff00+70),a
 RO18:782C C9               ret                 // Added entries on Unit List's secondary list are units not in Reserve
 RO18:782D F0 82            ld   a,(ff00+82)
 RO18:782F F5               push af
 RO18:7830 3E 03            ld   a,03
 RO18:7832 E0 82            ld   (ff00+82),a
 RO18:7834 E0 70            ld   (ff00+70),a
 RO18:7836 AF               xor  a
 RO18:7837 EA 70 DC         ld   (DC70),a
 RO18:783A 01 05 00         ld   bc,0005
 RO18:783D 21 4E DC         ld   hl,DC4E
 RO18:7840 AF               xor  a
 RO18:7841 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO18:7844 FA 70 DC         ld   a,(DC70)       // Loop begins here
 RO18:7847 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:784B 54               ld   d,h
 RO18:784C 5D               ld   e,l
 RO18:784D 21 4E DC         ld   hl,DC4E
 RO18:7850 01 05 00         ld   bc,0005
 RO18:7853 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:7856 FA 52 DC         ld   a,(DC52)
 RO18:7859 0E 03            ld   c,03
 RO18:785B EF 12 66 40                          
 RO18:785F EA 7C DC         ld   (DC7C),a
 RO18:7862 3E 01            ld   a,01
 RO18:7864 21 7C DC         ld   hl,DC7C
 RO18:7867 CD C7 3A         call 3AC7           // Unit in Reserve flag
 RO18:786A 28 1D            jr   z,7889
 RO18:786C FA 70 DC         ld   a,(DC70)
 RO18:786F EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:7873 54               ld   d,h
 RO18:7874 5D               ld   e,l
 RO18:7875 FA 71 DC         ld   a,(DC71)
 RO18:7878 EF 17 52 73                          // HL is starting address of unit A on secondary list on Unit List
 RO18:787C 01 05 00         ld   bc,0005
 RO18:787F CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:7882 FA 71 DC         ld   a,(DC71)
 RO18:7885 3C               inc  a
 RO18:7886 EA 71 DC         ld   (DC71),a
 RO18:7889 FA 70 DC         ld   a,(DC70)
 RO18:788C 3C               inc  a
 RO18:788D EA 70 DC         ld   (DC70),a
 RO18:7890 4F               ld   c,a
 RO18:7891 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:7894 B9               cp   c
 RO18:7895 20 AD            jr   nz,7844
 RO18:7897 F1               pop  af
 RO18:7898 E0 82            ld   (ff00+82),a
 RO18:789A E0 70            ld   (ff00+70),a
 RO18:789C C9               ret                 // Added entries on Unit List's secondary list are units in Reserve
 RO18:789D F0 82            ld   a,(ff00+82)
 RO18:789F F5               push af
 RO18:78A0 3E 03            ld   a,03
 RO18:78A2 E0 82            ld   (ff00+82),a
 RO18:78A4 E0 70            ld   (ff00+70),a
 RO18:78A6 AF               xor  a
 RO18:78A7 EA 70 DC         ld   (DC70),a
 RO18:78AA 01 05 00         ld   bc,0005
 RO18:78AD 21 4E DC         ld   hl,DC4E
 RO18:78B0 AF               xor  a
 RO18:78B1 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO18:78B4 FA 70 DC         ld   a,(DC70)       // Loop begins here
 RO18:78B7 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:78BB 54               ld   d,h
 RO18:78BC 5D               ld   e,l
 RO18:78BD 21 4E DC         ld   hl,DC4E
 RO18:78C0 01 05 00         ld   bc,0005
 RO18:78C3 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:78C6 FA 52 DC         ld   a,(DC52)
 RO18:78C9 0E 03            ld   c,03
 RO18:78CB EF 12 66 40                          
 RO18:78CF EA 7C DC         ld   (DC7C),a
 RO18:78D2 3E 07            ld   a,07
 RO18:78D4 21 7C DC         ld   hl,DC7C
 RO18:78D7 CD C7 3A         call 3AC7           // Unit Moved flag
 RO18:78DA 28 02            jr   z,78DE
 RO18:78DC 18 1D            jr   78FB
 RO18:78DE FA 70 DC         ld   a,(DC70)
 RO18:78E1 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:78E5 54               ld   d,h
 RO18:78E6 5D               ld   e,l
 RO18:78E7 FA 71 DC         ld   a,(DC71)
 RO18:78EA EF 17 52 73                          // HL is starting address of unit A on secondary list on Unit List
 RO18:78EE 01 05 00         ld   bc,0005
 RO18:78F1 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:78F4 FA 71 DC         ld   a,(DC71)
 RO18:78F7 3C               inc  a
 RO18:78F8 EA 71 DC         ld   (DC71),a
 RO18:78FB FA 70 DC         ld   a,(DC70)
 RO18:78FE 3C               inc  a
 RO18:78FF EA 70 DC         ld   (DC70),a
 RO18:7902 4F               ld   c,a
 RO18:7903 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:7906 B9               cp   c
 RO18:7907 20 AB            jr   nz,78B4
 RO18:7909 F1               pop  af
 RO18:790A E0 82            ld   (ff00+82),a
 RO18:790C E0 70            ld   (ff00+70),a
 RO18:790E C9               ret                 // Added entries on Unit List's secondary list are units not yet moved
 RO18:790F F0 82            ld   a,(ff00+82)
 RO18:7911 F5               push af
 RO18:7912 3E 03            ld   a,03
 RO18:7914 E0 82            ld   (ff00+82),a
 RO18:7916 E0 70            ld   (ff00+70),a
 RO18:7918 AF               xor  a
 RO18:7919 EA 70 DC         ld   (DC70),a
 RO18:791C 01 05 00         ld   bc,0005
 RO18:791F 21 4E DC         ld   hl,DC4E
 RO18:7922 AF               xor  a
 RO18:7923 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO18:7926 FA 70 DC         ld   a,(DC70)       // Loop begins here
 RO18:7929 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:792D 54               ld   d,h
 RO18:792E 5D               ld   e,l
 RO18:792F 21 4E DC         ld   hl,DC4E
 RO18:7932 01 05 00         ld   bc,0005
 RO18:7935 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:7938 FA 52 DC         ld   a,(DC52)
 RO18:793B 0E 03            ld   c,03
 RO18:793D EF 12 66 40                          
 RO18:7941 EA 7C DC         ld   (DC7C),a
 RO18:7944 3E 07            ld   a,07
 RO18:7946 21 7C DC         ld   hl,DC7C
 RO18:7949 CD C7 3A         call 3AC7           // Unit Moved flag
 RO18:794C 28 1D            jr   z,796B
 RO18:794E FA 70 DC         ld   a,(DC70)
 RO18:7951 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:7955 54               ld   d,h
 RO18:7956 5D               ld   e,l
 RO18:7957 FA 71 DC         ld   a,(DC71)
 RO18:795A EF 17 52 73                          // HL is starting address of unit A on secondary list on Unit List
 RO18:795E 01 05 00         ld   bc,0005
 RO18:7961 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:7964 FA 71 DC         ld   a,(DC71)
 RO18:7967 3C               inc  a
 RO18:7968 EA 71 DC         ld   (DC71),a
 RO18:796B FA 70 DC         ld   a,(DC70)
 RO18:796E 3C               inc  a
 RO18:796F EA 70 DC         ld   (DC70),a
 RO18:7972 4F               ld   c,a
 RO18:7973 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:7976 B9               cp   c
 RO18:7977 20 AD            jr   nz,7926
 RO18:7979 F1               pop  af
 RO18:797A E0 82            ld   (ff00+82),a
 RO18:797C E0 70            ld   (ff00+70),a
 RO18:797E C9               ret                 // Added entries on Unit List's secondary list are units already moved
 RO18:797F F0 82            ld   a,(ff00+82)
 RO18:7981 F5               push af
 RO18:7982 3E 03            ld   a,03
 RO18:7984 E0 82            ld   (ff00+82),a
 RO18:7986 E0 70            ld   (ff00+70),a
 RO18:7988 AF               xor  a
 RO18:7989 EA 71 DC         ld   (DC71),a
 RO18:798C 01 FA 00         ld   bc,00FA
 RO18:798F 21 54 DB         ld   hl,DB54
 RO18:7992 AF               xor  a
 RO18:7993 CD 84 3B         call 3B84           // Empties WRA3($DB54) 250 byte
 RO18:7996 FA 59 DC         ld   a,(DC59)
 RO18:7999 FE 00            cp   a,00           // Unit Type
 RO18:799B 28 14            jr   z,79B1
 RO18:799D FE 01            cp   a,01           // Level
 RO18:799F 28 1A            jr   z,79BB
 RO18:79A1 FE 02            cp   a,02           // Fuel
 RO18:79A3 28 1B            jr   z,79C0
 RO18:79A5 FE 03            cp   a,03           // HP
 RO18:79A7 28 1C            jr   z,79C5
 RO18:79A9 FE 04            cp   a,04           // Reserve
 RO18:79AB 28 09            jr   z,79B6
 RO18:79AD FE 05            cp   a,05           // Command
 RO18:79AF 28 19            jr   z,79CA
 RO18:79B1 CD 66 75         call 7566           // Sorts the Unit List by Type, with earliest at top to latest at bottom
 RO18:79B4 18 25            jr   79DB           // Type doesn't use secondary list
 RO18:79B6 CD 6A 75         call 756A           // Sorts the Unit List with units in Reserve, then units not in Reserve
 RO18:79B9 18 14            jr   79CF           // Deploy does use secondary list
 RO18:79BB CD 78 75         call 7578           // Sorts the Unit List by Level, with highest at top to lowest at bottom
 RO18:79BE 18 1B            jr   79DB           // Level doesn't use secondary list
 RO18:79C0 CD AA 75         call 75AA           // Sorts the Unit List by Fuel, with lowest at top to highest at bottom
 RO18:79C3 18 16            jr   79DB           // Fuel doesn't use secondary list
 RO18:79C5 CD C5 75         call 75C5           // Sorts the Unit List by HP, with lowest at top to highest at bottom
 RO18:79C8 18 11            jr   79DB           // HP doesn't use secondary list
 RO18:79CA CD 71 75         call 7571           // Sorts the Unit List with units not yet moved, then units already moved
 RO18:79CD 18 00            jr   79CF           // Move does use secondary list
 RO18:79CF 11 54 DB         ld   de,DB54
 RO18:79D2 21 5A DA         ld   hl,DA5A
 RO18:79D5 01 FA 00         ld   bc,00FA
 RO18:79D8 CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO18:79DB 01 01 01         ld   bc,0101
 RO18:79DE CD 1E 6C         call 6C1E           // Highlighted unit's type name text set up at coordinates BC
 RO18:79E1 F1               pop  af
 RO18:79E2 E0 82            ld   (ff00+82),a
 RO18:79E4 E0 70            ld   (ff00+70),a
 RO18:79E6 C9               ret                 // Handles unit sorting on Unit List
 RO18:79E7 CD DF 73         call 73DF           // Establishes Unit List's Organize menu graphics as a whole
 RO18:79EA CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO18:79ED CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:79F0 3E 00            ld   a,00
 RO18:79F2 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO18:79F6 F0 92            ld   a,(ff00+92)
 RO18:79F8 CB 77            bit  6,a            // Up
 RO18:79FA 28 17            jr   z,7A13
 RO18:79FC 3E 01            ld   a,01
 RO18:79FE CD 44 38         call 3844
 RO18:7A01 FA 59 DC         ld   a,(DC59)
 RO18:7A04 3D               dec  a
 RO18:7A05 FE FF            cp   a,FF
 RO18:7A07 20 02            jr   nz,7A0B
 RO18:7A09 3E 05            ld   a,05
 RO18:7A0B EA 59 DC         ld   (DC59),a
 RO18:7A0E CD 5B 74         call 745B           // Establishes Pointing Right Bullet sprite's location on Unit List's Organize menu
 RO18:7A11 18 D7            jr   79EA           // Further wait for button input after pressing Up
 RO18:7A13 CB 7F            bit  7,a            // Down
 RO18:7A15 28 16            jr   z,7A2D
 RO18:7A17 3E 01            ld   a,01
 RO18:7A19 CD 44 38         call 3844
 RO18:7A1C FA 59 DC         ld   a,(DC59)
 RO18:7A1F 3C               inc  a
 RO18:7A20 FE 06            cp   a,06
 RO18:7A22 20 01            jr   nz,7A25
 RO18:7A24 AF               xor  a
 RO18:7A25 EA 59 DC         ld   (DC59),a
 RO18:7A28 CD 5B 74         call 745B           // Establishes Pointing Right Bullet sprite's location on Unit List's Organize menu
 RO18:7A2B 18 BD            jr   79EA           // Further wait for button input after pressing Down
 RO18:7A2D CB 47            bit  0,a            // A
 RO18:7A2F 28 2A            jr   z,7A5B
 RO18:7A31 FA 56 DC         ld   a,(DC56)       // Pointing Right Bullet (Organize option)
 RO18:7A34 EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO18:7A38 CD 7F 79         call 797F           // Handles unit sorting on Unit List
 RO18:7A3B FA 56 DC         ld   a,(DC56)       // Pointing Right Bullet (Organize option)
 RO18:7A3E CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:7A41 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:7A44 EF 10 08 69                          // Restores last table of covered graphics
 RO18:7A48 CD 84 6A         call 6A84           // Prints listed units' stats on Unit List
 RO18:7A4B EF 17 A3 73                          // Toggle Unit List screen's Pointing Up/Down Mini-Arrows
 RO18:7A4F CD 46 74         call 7446           // Establishes Pointing Right Bullet sprite's location on Unit List
 RO18:7A52 CD 62 7F         call 7F62           // Updates country's unit stats according to reordering, including Loading Unit #s
 RO18:7A55 CD 02 7F         call 7F02           // Establishes basic stats for units on Unit list
 RO18:7A58 C9               ret  
 RO18:7A59 18 8F            jr   79EA
 RO18:7A5B CB 4F            bit  1,a            // B
 RO18:7A5D 20 02            jr   nz,7A61
 RO18:7A5F 18 89            jr   79EA
 RO18:7A61 3E 0C            ld   a,0C
 RO18:7A63 CD 44 38         call 3844
 RO18:7A66 FA 56 DC         ld   a,(DC56)       // Pointing Right Bullet (Organize option)
 RO18:7A69 CD 1F 2E         call 2E1F           // Handles clear-up of sprite
 RO18:7A6C CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO18:7A6F EF 10 08 69                          // Restores last table of covered graphics
 RO18:7A73 C9               ret                 // Controls for Unit List's Organize menu

 RO18:7A74 04 05 D5 C6 FF C4 79 6C AD 89 62 00
 RO18:7A80 04 06 DA F0 D9 00
 RO18:7A86 04 07 78 8D 88 AE 63 00
 RO18:7A8E 04 08 D5 C6 FF C4 6D 63 00
 RO18:7A97 04 09 80 7A 62 71 D5 C6 FF C4 00
 RO18:7AA2 04 0A 80 6A 63 9C 63 D5 C6 FF C4 00

 RO18:7AAE 44 00               nop  
 RO18:7AB0 43 00               nop  
 RO18:7AB2 42 00               nop  
 RO18:7AB4 41 00               nop  
 RO18:7AB6 53 00               nop  

 RO18:7AB8 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF
 RO18:7AC8 66 FF FF FF 9F F9 BF C1 FF C3 7E E7 3C FF 18 FF
 RO18:7AD8 03 FF E5 FF 9A FF FC FF 84 AF 82 93 82 AB FE FF
 RO18:7AE8 FF 00 FF 00 BF 40 BF 40 B5 4A B5 4A 9B 64 FF 00

 RO18:7AF8 80 FF 00 88 00 BD 00 8D 00 ED 00 ED 00 8D 80 FF
 RO18:7B08 00 FF 00 CC 00 B5 00 B5 00 84 00 B5 00 B5 00 FF
 RO18:7B18 01 FF 00 63 00 B7 00 B7 00 77 00 B7 00 B7 01 FF
 RO18:7B28 00 00 00 44 00 F2 00 4A 00 48 00 B8 00 AC 00 34
 RO18:7B38 00 00 00 38 00 40 00 5C 00 E2 00 82 00 02 00 3C
 RO18:7B48 00 0A 00 E0 00 48 00 4C 00 8A 00 88 00 88 00 70
 RO18:7B58 00 00 00 40 00 F4 00 4A 00 4A 00 88 00 88 00 30
 RO18:7B68 00 00 00 38 00 00 00 FC 00 18 00 30 00 48 00 8E

 RO18:7B78 81 FF 00 C7 00 DB 00 C7 00 DB 00 DB 00 C7 81 FF
 RO18:7B88 00 00 00 20 00 FC 00 20 00 F8 00 42 00 42 00 3C
 RO18:7B98 00 0A 00 40 00 4E 00 30 00 40 00 80 00 80 00 7E
 RO18:7BA8 00 00 00 7C 00 08 00 3C 00 C2 00 32 00 4A 00 3C

 RO18:7BB8 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF 7E FF 00 FF

 RO18:7BC8 00 FF 00 FF 00 FF 1F E0 0A F5 0F F0 1A E5 1A E5
 RO18:7BD8 00 FF 00 FF 00 FF BC 43 04 FB 04 FB 84 7B BC 43
 RO18:7BE8 00 FF 00 FF 00 FF 1F E0 12 ED 0F F0 3F C0 07 F8
 RO18:7BF8 00 FF 00 FF 00 FF F0 0F 90 6F E0 1F F8 07 C0 3F

 RO18:7C08 1A E5 13 EC 10 EF 1F E0 10 EF 1F E0 00 FF 00 FF
 RO18:7C18 A0 5F A0 5F A4 5B A4 5B A4 5B BC 43 00 FF 00 FF
 RO18:7C28 08 F7 2F D0 28 D7 2F D0 28 D7 3F C0 00 FF 00 FF
 RO18:7C38 20 DF E0 1F 20 DF E0 1F 20 DF F8 07 00 FF 00 FF

 RO18:7C48 00 FF 00 FF 08 F7 0E F1 09 F6 09 F6 09 F6 19 E6
 RO18:7C58 00 FF 00 FF 00 FF 78 87 48 B7 48 B7 48 B7 48 B7
 RO18:7C68 00 FF 00 FF 00 FF 08 F7 08 F7 10 EF 10 EF 2F D0
 RO18:7C78 00 FF 00 FF 00 FF 20 DF 20 DF 10 EF 10 EF E8 17

 RO18:7C88 1A E5 16 E9 04 FB 07 F8 09 F6 10 EF 00 FF 00 FF
 RO18:7C98 48 B7 4A B5 8A 75 0E F1 00 FF FE 01 00 FF 00 FF
 RO18:7CA8 02 FD 02 FD 04 FB 04 FB 08 F7 33 CC 00 FF 00 FF
 RO18:7CB8 10 EF 10 EF 10 EF 10 EF 10 EF E0 1F 00 FF 00 FF

 RO18:7CC8 00 FF 00 FF 00 FF 08 F7 08 F7 08 F7 08 F7 08 F7
 RO18:7CD8 00 FF 00 FF 00 FF 50 AF A8 57 40 BF 40 BF 21 DE
 RO18:7CE8 00 FF 00 FF 00 FF 06 F9 01 FE 00 FF 0C F3 13 EC
 RO18:7CF8 00 FF 00 FF 28 D7 14 EB 80 7F 42 BD 02 FD 02 FD
 RO18:7D08 00 FF 00 FF 40 BF 5F A0 EA 15 45 BA 5F A0 50 AF
 RO18:7D18 00 FF 00 FF E2 1D 02 FD 23 DC 44 BB E4 1B 27 D8
 RO18:7D28 00 FF 00 FF 00 FF 00 FF FC 03 00 FF 00 FF FC 03

 RO18:7D38 10 EF 10 EF 10 EF 20 DF 20 DF 40 BF 00 FF 00 FF
 RO18:7D48 24 DB 22 DD 12 ED 10 EF 10 EF 17 E8 00 FF 00 FF
 RO18:7D58 90 6F 90 6F 20 DF 20 DF C0 3F 07 F8 00 FF 00 FF
 RO18:7D68 84 7B 04 FB 08 F7 10 EF 60 9F 80 7F 00 FF 00 FF
 RO18:7D78 6F 90 C4 3B 42 BD 43 BC 46 B9 D8 27 00 FF 00 FF
 RO18:7D88 C0 3F 40 BF 8F 70 80 7F 80 7F 63 9C 00 FF 00 FF
 RO18:7D98 04 FB 04 FB FE 01 08 F7 08 F7 F0 0F 00 FF 00 FF

 RO18:7DA8 FF FF F7 FF C1 FF F7 FF 80 FF E3 FF D5 FF B6 FF
 RO18:7DB8 00 FF 00 80 00 BE 00 88 00 88 00 88 00 88 00 80
 RO18:7DC8 00 FF 00 80 00 BE 00 A0 00 BC 00 A0 00 BE 00 80
 RO18:7DD8 00 FF 00 80 00 B8 00 A0 00 B7 00 A2 00 BA 00 82
 RO18:7DE8 00 EF 10 D7 38 BB 7C 7D 10 11 10 D7 10 D7 00 C7

 RO18:7DF8 00 FF 00 FF 00 FF 11 EE 09 F6 03 FC 06 F9 03 FC
 RO18:7E08 00 FF 00 FF 00 FF 10 EF 20 DF FC 03 20 DF F8 07
 RO18:7E18 00 FF 00 FF 00 FF 09 F6 09 F6 09 F6 11 EE 11 EE
 RO18:7E28 00 FF 00 FF 00 FF 00 FF 08 F7 30 CF C0 3F 00 FF

 RO18:7E38 1A E5 0B F4 0A F5 0B F4 0C F3 13 EC 00 FF 00 FF
 RO18:7E48 20 DF F8 07 20 DF FC 03 00 FF FE 01 00 FF 00 FF
 RO18:7E58 31 CE 11 EE 11 EE 11 EE 11 EE 11 EE 00 FF 00 FF
 RO18:7E68 00 FF 00 FF 08 F7 08 F7 08 F7 F8 07 00 FF 00 FF

 RO18:7E78 00 00 00 69 FF 7F 40 72
 RO18:7E80 FF 7F B5 56 6B 2D 00 00
 RO18:7E88 FF 7F 6C 03 08 02 00 00
 RO18:7E90 00 69 9F 00 FF 7F 00 00
 RO18:7E98 10 42 6B 2D C6 18 00 00
 RO18:7EA0 9F 53 DF 02 74 01 00 00
 RO18:7EA8 F0 63 C0 4A 60 25 00 00
 RO18:7EB0 1F 7C 1F 7C 00 00 FF 7F

 RO18:7EB8 7E               ld   a,(hl)
 RO18:7EB9 FE 00            cp   a,00
 RO18:7EBB 28 44            jr   z,7F01         // Ends immediately for 0
 RO18:7EBD FE 51            cp   a,51
 RO18:7EBF 38 28            jr   c,7EE9         // 1~80 -> 176~255 (Katakana)
 RO18:7EC1 FE 51            cp   a,51
 RO18:7EC3 28 28            jr   z,7EED         // 81 -> 45 (Dash)
 RO18:7EC5 FE 80            cp   a,80
 RO18:7EC7 28 28            jr   z,7EF1         // 128 -> 32 (Space)
 RO18:7EC9 FE 8B            cp   a,8B
 RO18:7ECB 38 28            jr   c,7EF5         // 82~138 -> 1~57 (Characters/Numbers; misses the Backslash)
 RO18:7ECD FE A5            cp   a,A5
 RO18:7ECF 38 28            jr   c,7EF9         // 139~164 -> 65~90 (English Alphabet)
 RO18:7ED1 FE A5            cp   a,A5
 RO18:7ED3 28 10            jr   z,7EE5         // 165 -> 2 (Period)
 RO18:7ED5 FE A6            cp   a,A6
 RO18:7ED7 28 08            jr   z,7EE1         // 166 -> 47 (Backslash)
 RO18:7ED9 FE A7            cp   a,A7
 RO18:7EDB 28 00            jr   z,7EDD         // 167+ -> 45 (Dash)
 RO18:7EDD 3E 2D            ld   a,2D
 RO18:7EDF 18 1C            jr   7EFD
 RO18:7EE1 3E 2F            ld   a,2F
 RO18:7EE3 18 18            jr   7EFD
 RO18:7EE5 3E 02            ld   a,02
 RO18:7EE7 18 14            jr   7EFD
 RO18:7EE9 C6 AF            add  a,AF
 RO18:7EEB 18 10            jr   7EFD
 RO18:7EED 3E 2D            ld   a,2D
 RO18:7EEF 18 0C            jr   7EFD
 RO18:7EF1 D6 60            sub  a,60
 RO18:7EF3 18 08            jr   7EFD
 RO18:7EF5 D6 51            sub  a,51
 RO18:7EF7 18 04            jr   7EFD
 RO18:7EF9 D6 4A            sub  a,4A
 RO18:7EFB 18 00            jr   7EFD
 RO18:7EFD 77               ld   (hl),a
 RO18:7EFE 23               inc  hl
 RO18:7EFF 18 B7            jr   7EB8
 RO18:7F01 C9               ret                 // Text decryption for things like unit names
 RO18:7F02 C5               push bc
 RO18:7F03 D5               push de
 RO18:7F04 E5               push hl
 RO18:7F05 F0 82            ld   a,(ff00+82)
 RO18:7F07 F5               push af
 RO18:7F08 3E 03            ld   a,03
 RO18:7F0A E0 82            ld   (ff00+82),a
 RO18:7F0C E0 70            ld   (ff00+70),a
 RO18:7F0E 21 5A DA         ld   hl,DA5A
 RO18:7F11 01 FA 00         ld   bc,00FA        // $DA5A~$DB53
 RO18:7F14 AF               xor  a
 RO18:7F15 CD 79 3B         call 3B79           // (HL ~ HL+BC-1) = A
 RO18:7F18 21 5A DA         ld   hl,DA5A
 RO18:7F1B 16 32            ld   d,32
 RO18:7F1D 1E 00            ld   e,00
 RO18:7F1F FA 33 C6         ld   a,(C633)
 RO18:7F22 E6 01            and  a,01
 RO18:7F24 28 02            jr   z,7F28
 RO18:7F26 1E 32            ld   e,32
 RO18:7F28 7B               ld   a,e            // Loop begins here
 RO18:7F29 0E 00            ld   c,00
 RO18:7F2B EF 12 66 40                          
 RO18:7F2F A7               and  a
 RO18:7F30 28 03            jr   z,7F35         // Cycle ends if unit doesn't exist
 RO18:7F32 CD 42 7F         call 7F42           // HL 5 byte loaded with unit's Type, unit's HP, unit's Fuel, unit's Level, and unit's #; HL incremented by 5
 RO18:7F35 1C               inc  e
 RO18:7F36 15               dec  d
 RO18:7F37 20 EF            jr   nz,7F28        // Repeats for 50 units
 RO18:7F39 F1               pop  af
 RO18:7F3A E0 82            ld   (ff00+82),a
 RO18:7F3C E0 70            ld   (ff00+70),a
 RO18:7F3E E1               pop  hl
 RO18:7F3F D1               pop  de
 RO18:7F40 C1               pop  bc
 RO18:7F41 C9               ret                 // Establishes basic stats for units on Unit list
 RO18:7F42 22               ldi  (hl),a
 RO18:7F43 7B               ld   a,e
 RO18:7F44 0E 04            ld   c,04
 RO18:7F46 EF 12 66 40                          // A = unit's HP
 RO18:7F4A 22               ldi  (hl),a
 RO18:7F4B 7B               ld   a,e
 RO18:7F4C 0E 07            ld   c,07
 RO18:7F4E EF 12 66 40                          // A = unit's Fuel
 RO18:7F52 22               ldi  (hl),a
 RO18:7F53 7B               ld   a,e
 RO18:7F54 EF 12 F5 40                          // A = unit's Level
 RO18:7F58 22               ldi  (hl),a
 RO18:7F59 7B               ld   a,e
 RO18:7F5A 22               ldi  (hl),a
 RO18:7F5B C9               ret                 // HL 5 byte loaded with A, unit's HP, unit's Fuel, unit's Level, and unit's #; HL incremented by 5

 RO18:7F5C 10 01
 RO18:7F5E 2F 35 30 00

 RO18:7F62 C5               push bc
 RO18:7F63 D5               push de
 RO18:7F64 F0 82            ld   a,(ff00+82)
 RO18:7F66 F5               push af
 RO18:7F67 3E 03            ld   a,03
 RO18:7F69 E0 82            ld   (ff00+82),a
 RO18:7F6B E0 70            ld   (ff00+70),a
 RO18:7F6D EF 12 0B 49                          // Unit WRAM Bank ($D640) to ($D95F) emptied
 RO18:7F71 06 00            ld   b,00
 RO18:7F73 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:7F76 4F               ld   c,a
 RO18:7F77 78               ld   a,b
 RO18:7F78 CD D6 7F         call 7FD6           // A = Unit A's #
 RO18:7F7B EF 12 26 49                          // Unit WRAM Bank ($D640 + B * 16)~($D64F + B * 16) holds unit's stats
 RO18:7F7F 04               inc  b
 RO18:7F80 0D               dec  c
 RO18:7F81 20 F4            jr   nz,7F77
 RO18:7F83 FA 33 C6         ld   a,(C633)
 RO18:7F86 E6 01            and  a,01
 RO18:7F88 F5               push af
 RO18:7F89 EF 12 58 49                          // Unit WRAM Bank ($D640) to ($D95F) updates given army's stats
 RO18:7F8D F1               pop  af
 RO18:7F8E CD 99 7F         call 7F99           // All units' Loading Unit #s updated as necessary for Unit List
 RO18:7F91 F1               pop  af
 RO18:7F92 E0 82            ld   (ff00+82),a
 RO18:7F94 E0 70            ld   (ff00+70),a
 RO18:7F96 D1               pop  de
 RO18:7F97 C1               pop  bc
 RO18:7F98 C9               ret                 // Updates country's unit stats according to reordering, including Loading Unit #s
 RO18:7F99 C5               push bc
 RO18:7F9A D5               push de
 RO18:7F9B 06 00            ld   b,00
 RO18:7F9D A7               and  a
 RO18:7F9E 28 02            jr   z,7FA2
 RO18:7FA0 06 32            ld   b,32
 RO18:7FA2 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:7FA5 4F               ld   c,a
 RO18:7FA6 C5               push bc             // Loop begins here
 RO18:7FA7 78               ld   a,b
 RO18:7FA8 0E 03            ld   c,03
 RO18:7FAA EF 12 66 40                          
 RO18:7FAE CB 47            bit  0,a            // Loaded?
 RO18:7FB0 28 1C            jr   z,7FCE         // End cycle if not loaded
 RO18:7FB2 78               ld   a,b
 RO18:7FB3 0E 06            ld   c,06
 RO18:7FB5 EF 12 66 40                          // Loading Unit's #
 RO18:7FB9 FE 32            cp   a,32
 RO18:7FBB 30 05            jr   nc,7FC2
 RO18:7FBD CD E4 7F         call 7FE4           // A = # of current entries in Unit List before initial A matches a unit's #
 RO18:7FC0 18 05            jr   7FC7
 RO18:7FC2 CD E4 7F         call 7FE4           // A = # of current entries in Unit List before initial A matches a unit's #
 RO18:7FC5 C6 32            add  a,32
 RO18:7FC7 6F               ld   l,a
 RO18:7FC8 78               ld   a,b
 RO18:7FC9 45               ld   b,l
 RO18:7FCA EF 12 A1 40                          // B -> Unit's used stat (A is Unit #, C is used stat)
 RO18:7FCE C1               pop  bc
 RO18:7FCF 04               inc  b
 RO18:7FD0 0D               dec  c
 RO18:7FD1 20 D3            jr   nz,7FA6
 RO18:7FD3 D1               pop  de
 RO18:7FD4 C1               pop  bc
 RO18:7FD5 C9               ret                 // All units' Loading Unit #s updated as necessary for Unit List
 RO18:7FD6 C5               push bc
 RO18:7FD7 D5               push de
 RO18:7FD8 EF 17 46 73                          // HL is starting address of unit A on Unit list
 RO18:7FDC 11 04 00         ld   de,0004
 RO18:7FDF 19               add  hl,de
 RO18:7FE0 7E               ld   a,(hl)
 RO18:7FE1 D1               pop  de
 RO18:7FE2 C1               pop  bc
 RO18:7FE3 C9               ret                 // A = Unit A's #
 RO18:7FE4 C5               push bc
 RO18:7FE5 D5               push de
 RO18:7FE6 57               ld   d,a
 RO18:7FE7 FA 66 DC         ld   a,(DC66)       // Active player's unit headcount
 RO18:7FEA 4F               ld   c,a
 RO18:7FEB 06 00            ld   b,00
 RO18:7FED 78               ld   a,b            // Loop begins here
 RO18:7FEE CD D6 7F         call 7FD6           // A = Unit A's #
 RO18:7FF1 BA               cp   d
 RO18:7FF2 28 04            jr   z,7FF8
 RO18:7FF4 04               inc  b
 RO18:7FF5 0D               dec  c
 RO18:7FF6 20 F5            jr   nz,7FED
 RO18:7FF8 78               ld   a,b
 RO18:7FF9 D1               pop  de
 RO18:7FFA C1               pop  bc
 RO18:7FFB C9               ret                 // A = # of current entries in Unit List before initial A matches a unit's #
