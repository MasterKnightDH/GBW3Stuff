 RO27:4000 57               ld   d,a
 RO27:4001 F0 82            ld   a,(ff00+82)
 RO27:4003 F5               push af
 RO27:4004 3E 04            ld   a,04
 RO27:4006 E0 82            ld   (ff00+82),a
 RO27:4008 E0 70            ld   (ff00+70),a
 RO27:400A 7A               ld   a,d
 RO27:400B FE 00            cp   a,00
 RO27:400D 28 08            jr   z,4017
 RO27:400F FE 01            cp   a,01
 RO27:4011 28 0E            jr   z,4021
 RO27:4013 FE 02            cp   a,02
 RO27:4015 28 14            jr   z,402B
 RO27:4017 FA 05 D3         ld   a,(D305)
 RO27:401A 67               ld   h,a
 RO27:401B FA 04 D3         ld   a,(D304)
 RO27:401E 6F               ld   l,a
 RO27:401F 18 12            jr   4033           // Palette Set 1
 RO27:4021 FA 07 D3         ld   a,(D307)
 RO27:4024 67               ld   h,a
 RO27:4025 FA 06 D3         ld   a,(D306)
 RO27:4028 6F               ld   l,a
 RO27:4029 18 08            jr   4033           // Palette Set 2
 RO27:402B FA 09 D3         ld   a,(D309)
 RO27:402E 67               ld   h,a
 RO27:402F FA 08 D3         ld   a,(D308)
 RO27:4032 6F               ld   l,a            // Palette Set 3
 RO27:4033 FA 0C D3         ld   a,(D30C)
 RO27:4036 4F               ld   c,a            // C holds graphics' ROM Block
 RO27:4037 3E 00            ld   a,00
 RO27:4039 06 08            ld   b,08
 RO27:403B CD D9 06         call 06D9           // ($C4E0) to ($C51F) hold C:(HL) to C:(HL + 63)
 RO27:403E CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO27:4041 F1               pop  af
 RO27:4042 E0 82            ld   (ff00+82),a
 RO27:4044 E0 70            ld   (ff00+70),a
 RO27:4046 C9               ret                 // BG palettes changed to Palette Set A
 RO27:4047 E5               push hl
 RO27:4048 21 00 00         ld   hl,0000
 RO27:404B E5               push hl             // Loop begins here
 RO27:404C D5               push de
 RO27:404D C5               push bc
 RO27:404E CD A2 05         call 05A2           // Button update, next frame
 RO27:4051 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:4054 EF 17 DF 40                          // Handles all sprite advanced behavior for the frame with sprites needing to spawn first
 RO27:4058 C1               pop  bc
 RO27:4059 D1               pop  de
 RO27:405A E1               pop  hl
 RO27:405B CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO27:405E 20 03            jr   nz,4063
 RO27:4060 AF               xor  a
 RO27:4061 18 21            jr   4084           // End immediately with A = 0 if time is up
 RO27:4063 F0 91            ld   a,(ff00+91)
 RO27:4065 CB 47            bit  0,a            // A
 RO27:4067 20 0A            jr   nz,4073
 RO27:4069 CB 4F            bit  1,a            // B
 RO27:406B 20 06            jr   nz,4073
 RO27:406D CB 5F            bit  3,a            // Start
 RO27:406F 20 02            jr   nz,4073
 RO27:4071 18 04            jr   4077
 RO27:4073 AF               xor  a
 RO27:4074 37               scf  
 RO27:4075 18 0D            jr   4084           // End immediately with Carry Flag Set if A, B, or Start was pressed
 RO27:4077 F0 95            ld   a,(ff00+95)
 RO27:4079 80               add  b
 RO27:407A E0 95            ld   (ff00+95),a
 RO27:407C F0 96            ld   a,(ff00+96)
 RO27:407E 81               add  c
 RO27:407F E0 96            ld   (ff00+96),a
 RO27:4081 23               inc  hl
 RO27:4082 18 C7            jr   404B
 RO27:4084 E1               pop  hl
 RO27:4085 C9               ret                 // Carry Flag set by A, B, or Start being pressed during timer determined by DE; gradual scroll determined by BC
 RO27:4086 E5               push hl
 RO27:4087 21 00 00         ld   hl,0000
 RO27:408A E5               push hl
 RO27:408B D5               push de
 RO27:408C C5               push bc
 RO27:408D CD A2 05         call 05A2           // Button update, next frame
 RO27:4090 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:4093 EF 17 DF 40                          // Handles all sprite advanced behavior for the frame with sprites needing to spawn first
 RO27:4097 C1               pop  bc
 RO27:4098 D1               pop  de
 RO27:4099 E1               pop  hl
 RO27:409A CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO27:409D 20 02            jr   nz,40A1
 RO27:409F 18 0D            jr   40AE
 RO27:40A1 F0 95            ld   a,(ff00+95)
 RO27:40A3 80               add  b
 RO27:40A4 E0 95            ld   (ff00+95),a
 RO27:40A6 F0 96            ld   a,(ff00+96)
 RO27:40A8 81               add  c
 RO27:40A9 E0 96            ld   (ff00+96),a
 RO27:40AB 23               inc  hl
 RO27:40AC 18 DC            jr   408A
 RO27:40AE E1               pop  hl
 RO27:40AF C9               ret                 // Handles all sprite advanced behavior for frames equivalent to DE, with sprites needing to spawn first; also shifts SCY by B and SCY by C each frame
 RO27:40B0 21 00 00         ld   hl,0000
 RO27:40B3 E5               push hl             // Loop begins here
 RO27:40B4 D5               push de
 RO27:40B5 CD A2 05         call 05A2           // Button update, next frame
 RO27:40B8 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:40BB EF 17 46 41                          // Handles all sprite advanced behavior (normal non-moving behavior during timer 1) for the current frame
 RO27:40BF EF 17 A9 45                          // Second color of each palette of each country's Terrain set to RGB 27,28,29 for the 2nd and 3rd of every 4 procedure calls in sucession for each country under attack by anything other than potential anti-air
 RO27:40C3 EF 17 15 41                          // Intended Scroll set to 0, -3~0 for quake effect; 2 Pseudo RNG seeds used
 RO27:40C7 D1               pop  de
 RO27:40C8 E1               pop  hl
 RO27:40C9 23               inc  hl
 RO27:40CA CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO27:40CD 20 02            jr   nz,40D1
 RO27:40CF 18 02            jr   40D3
 RO27:40D1 18 E0            jr   40B3
 RO27:40D3 C9               ret                 // Handles advanced sprite behavior (normal non-moving behavior during timer 1) and any quake effect on Battle Screen for frames equivalent to DE
 RO27:40D4 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:40D7 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:40DA CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:40DD AF               xor  a
 RO27:40DE E0 95            ld   (ff00+95),a
 RO27:40E0 E0 96            ld   (ff00+96),a
 RO27:40E2 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:40E5 C9               ret                 // LCD Display shut off, empties graphics
 RO27:40E6 AF               xor  a
 RO27:40E7 EA CC C4         ld   (C4CC),a
 RO27:40EA EA CD C4         ld   (C4CD),a
 RO27:40ED EA CE C4         ld   (C4CE),a
 RO27:40F0 3E 80            ld   a,80
 RO27:40F2 EA CF C4         ld   (C4CF),a       // 0.5 Pixels/Frame
 RO27:40F5 3E 41            ld   a,41
 RO27:40F7 EA D5 C4         ld   (C4D5),a
 RO27:40FA 3E 28            ld   a,28
 RO27:40FC EA D6 C4         ld   (C4D6),a
 RO27:40FF 3E 27            ld   a,27
 RO27:4101 EA D7 C4         ld   (C4D7),a       // Instruction $27:$4128
 RO27:4104 AF               xor  a
 RO27:4105 EA D3 C4         ld   (C4D3),a
 RO27:4108 3E 32            ld   a,32
 RO27:410A EA D4 C4         ld   (C4D4),a       // Timer of 50 frames before ending instruction
 RO27:410D FA A1 C4         ld   a,(C4A1)       // Backdrop #
 RO27:4110 FE 21            cp   a,21
 RO27:4112 28 11            jr   z,4125
 RO27:4114 FA 3C D3         ld   a,(D33C)
 RO27:4117 3C               inc  a
 RO27:4118 EA 3C D3         ld   (D33C),a
 RO27:411B EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:411F FA D0 C4         ld   a,(C4D0)
 RO27:4122 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:4125 C3 8A 02         jp   028A
 RO27:4128 AF               xor  a
 RO27:4129 EA CC C4         ld   (C4CC),a
 RO27:412C EA CD C4         ld   (C4CD),a
 RO27:412F EA CE C4         ld   (C4CE),a
 RO27:4132 3E 40            ld   a,40
 RO27:4134 EA CF C4         ld   (C4CF),a       // 0.25 Pixels/Frame
 RO27:4137 3E 41            ld   a,41
 RO27:4139 EA D5 C4         ld   (C4D5),a
 RO27:413C 3E 52            ld   a,52
 RO27:413E EA D6 C4         ld   (C4D6),a
 RO27:4141 3E 27            ld   a,27
 RO27:4143 EA D7 C4         ld   (C4D7),a       // Instruction $27:$4152
 RO27:4146 AF               xor  a
 RO27:4147 EA D3 C4         ld   (C4D3),a
 RO27:414A 3E 30            ld   a,30
 RO27:414C EA D4 C4         ld   (C4D4),a       // Duration: 48 frames
 RO27:414F C3 8A 02         jp   028A
 RO27:4152 AF               xor  a
 RO27:4153 EA CC C4         ld   (C4CC),a
 RO27:4156 EA CD C4         ld   (C4CD),a
 RO27:4159 EA CE C4         ld   (C4CE),a
 RO27:415C EA CF C4         ld   (C4CF),a       // 0 Pixels/Frame
 RO27:415F 3E 41            ld   a,41
 RO27:4161 EA D5 C4         ld   (C4D5),a
 RO27:4164 3E A3            ld   a,A3
 RO27:4166 EA D6 C4         ld   (C4D6),a
 RO27:4169 3E 27            ld   a,27
 RO27:416B EA D7 C4         ld   (C4D7),a       // Instruction $27:$41A3
 RO27:416E AF               xor  a
 RO27:416F EA D3 C4         ld   (C4D3),a
 RO27:4172 3E 98            ld   a,98
 RO27:4174 EA D4 C4         ld   (C4D4),a       // Duration: 152 frames
 RO27:4177 FA A1 C4         ld   a,(C4A1)
 RO27:417A FE 21            cp   a,21
 RO27:417C 28 13            jr   z,4191
 RO27:417E FA 3C D3         ld   a,(D33C)
 RO27:4181 3C               inc  a
 RO27:4182 EA 3C D3         ld   (D33C),a
 RO27:4185 EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:4189 FA D0 C4         ld   a,(C4D0)
 RO27:418C CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:418F 18 0F            jr   41A0
 RO27:4191 3E 16            ld   a,16
 RO27:4193 EA 3C D3         ld   (D33C),a
 RO27:4196 EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:419A FA D0 C4         ld   a,(C4D0)
 RO27:419D CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:41A0 C3 8A 02         jp   028A
 RO27:41A3 AF               xor  a
 RO27:41A4 EA CC C4         ld   (C4CC),a
 RO27:41A7 EA CD C4         ld   (C4CD),a
 RO27:41AA EA CE C4         ld   (C4CE),a
 RO27:41AD EA CF C4         ld   (C4CF),a
 RO27:41B0 EA D5 C4         ld   (C4D5),a
 RO27:41B3 EA D6 C4         ld   (C4D6),a
 RO27:41B6 EA D7 C4         ld   (C4D7),a
 RO27:41B9 AF               xor  a
 RO27:41BA EA D3 C4         ld   (C4D3),a
 RO27:41BD 3E 78            ld   a,78
 RO27:41BF EA D4 C4         ld   (C4D4),a       // Duration: 120 frames
 RO27:41C2 FA D0 C4         ld   a,(C4D0)
 RO27:41C5 CD 11 2F         call 2F11           // set 1,WRA4[$D000 + A * 16]
 RO27:41C8 C3 8A 02         jp   028A
 RO27:41CB AF               xor  a
 RO27:41CC EA CC C4         ld   (C4CC),a
 RO27:41CF EA CD C4         ld   (C4CD),a
 RO27:41D2 EA CE C4         ld   (C4CE),a
 RO27:41D5 EA CF C4         ld   (C4CF),a
 RO27:41D8 EA D5 C4         ld   (C4D5),a
 RO27:41DB EA D6 C4         ld   (C4D6),a
 RO27:41DE EA D7 C4         ld   (C4D7),a
 RO27:41E1 AF               xor  a
 RO27:41E2 EA D3 C4         ld   (C4D3),a
 RO27:41E5 3E F0            ld   a,F0
 RO27:41E7 EA D4 C4         ld   (C4D4),a
 RO27:41EA FA D0 C4         ld   a,(C4D0)
 RO27:41ED CD 11 2F         call 2F11           // set 1,WRA4[$D000 + A * 16]
 RO27:41F0 C3 8A 02         jp   028A
 RO27:41F3 AF               xor  a
 RO27:41F4 EA D1 C4         ld   (C4D1),a
 RO27:41F7 EA D2 C4         ld   (C4D2),a
 RO27:41FA EA CC C4         ld   (C4CC),a
 RO27:41FD 3E 80            ld   a,80
 RO27:41FF EA CD C4         ld   (C4CD),a
 RO27:4202 AF               xor  a
 RO27:4203 EA CE C4         ld   (C4CE),a
 RO27:4206 EA CF C4         ld   (C4CF),a
 RO27:4209 3E 42            ld   a,42
 RO27:420B EA D5 C4         ld   (C4D5),a
 RO27:420E 3E 30            ld   a,30
 RO27:4210 EA D6 C4         ld   (C4D6),a
 RO27:4213 3E 27            ld   a,27
 RO27:4215 EA D7 C4         ld   (C4D7),a       // Instruction $27:$4230
 RO27:4218 AF               xor  a
 RO27:4219 EA D3 C4         ld   (C4D3),a
 RO27:421C 3E 3C            ld   a,3C
 RO27:421E EA D4 C4         ld   (C4D4),a
 RO27:4221 3E 94            ld   a,94
 RO27:4223 EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:4227 FA D0 C4         ld   a,(C4D0)
 RO27:422A CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:422D C3 8A 02         jp   028A
 RO27:4230 AF               xor  a
 RO27:4231 EA D1 C4         ld   (C4D1),a
 RO27:4234 EA D2 C4         ld   (C4D2),a
 RO27:4237 EA CC C4         ld   (C4CC),a
 RO27:423A EA CD C4         ld   (C4CD),a
 RO27:423D EA CE C4         ld   (C4CE),a
 RO27:4240 EA CF C4         ld   (C4CF),a
 RO27:4243 3E 42            ld   a,42
 RO27:4245 EA D5 C4         ld   (C4D5),a
 RO27:4248 3E 6A            ld   a,6A
 RO27:424A EA D6 C4         ld   (C4D6),a
 RO27:424D 3E 27            ld   a,27
 RO27:424F EA D7 C4         ld   (C4D7),a       // Instruction $27:$426A
 RO27:4252 AF               xor  a
 RO27:4253 EA D3 C4         ld   (C4D3),a
 RO27:4256 3E 1E            ld   a,1E
 RO27:4258 EA D4 C4         ld   (C4D4),a
 RO27:425B 3E 97            ld   a,97
 RO27:425D EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:4261 FA D0 C4         ld   a,(C4D0)
 RO27:4264 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:4267 C3 8A 02         jp   028A
 RO27:426A AF               xor  a
 RO27:426B EA D1 C4         ld   (C4D1),a
 RO27:426E EA D2 C4         ld   (C4D2),a
 RO27:4271 EA CC C4         ld   (C4CC),a
 RO27:4274 EA CD C4         ld   (C4CD),a
 RO27:4277 EA CE C4         ld   (C4CE),a
 RO27:427A EA CF C4         ld   (C4CF),a
 RO27:427D AF               xor  a
 RO27:427E EA D5 C4         ld   (C4D5),a
 RO27:4281 EA D6 C4         ld   (C4D6),a
 RO27:4284 EA D7 C4         ld   (C4D7),a
 RO27:4287 AF               xor  a
 RO27:4288 EA D3 C4         ld   (C4D3),a
 RO27:428B 3E FF            ld   a,FF
 RO27:428D EA D4 C4         ld   (C4D4),a
 RO27:4290 3E 9E            ld   a,9E
 RO27:4292 EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:4296 FA D0 C4         ld   a,(C4D0)
 RO27:4299 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:429C C3 8A 02         jp   028A
 RO27:429F AF               xor  a
 RO27:42A0 EA D1 C4         ld   (C4D1),a
 RO27:42A3 EA D2 C4         ld   (C4D2),a
 RO27:42A6 EA CC C4         ld   (C4CC),a
 RO27:42A9 3E 80            ld   a,80
 RO27:42AB EA CD C4         ld   (C4CD),a
 RO27:42AE AF               xor  a
 RO27:42AF EA CE C4         ld   (C4CE),a
 RO27:42B2 EA CF C4         ld   (C4CF),a
 RO27:42B5 3E 42            ld   a,42
 RO27:42B7 EA D5 C4         ld   (C4D5),a
 RO27:42BA 3E DC            ld   a,DC
 RO27:42BC EA D6 C4         ld   (C4D6),a
 RO27:42BF 3E 27            ld   a,27
 RO27:42C1 EA D7 C4         ld   (C4D7),a       // Instruction $27:$42DC
 RO27:42C4 AF               xor  a
 RO27:42C5 EA D3 C4         ld   (C4D3),a
 RO27:42C8 3E 3C            ld   a,3C
 RO27:42CA EA D4 C4         ld   (C4D4),a
 RO27:42CD 3E 94            ld   a,94
 RO27:42CF EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:42D3 FA D0 C4         ld   a,(C4D0)
 RO27:42D6 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:42D9 C3 8A 02         jp   028A
 RO27:42DC AF               xor  a
 RO27:42DD EA D1 C4         ld   (C4D1),a
 RO27:42E0 EA D2 C4         ld   (C4D2),a
 RO27:42E3 EA CC C4         ld   (C4CC),a
 RO27:42E6 EA CD C4         ld   (C4CD),a
 RO27:42E9 EA CE C4         ld   (C4CE),a
 RO27:42EC EA CF C4         ld   (C4CF),a
 RO27:42EF 3E 43            ld   a,43
 RO27:42F1 EA D5 C4         ld   (C4D5),a
 RO27:42F4 3E 1B            ld   a,1B
 RO27:42F6 EA D6 C4         ld   (C4D6),a
 RO27:42F9 3E 27            ld   a,27
 RO27:42FB EA D7 C4         ld   (C4D7),a       // Instruction $27:$431B
 RO27:42FE AF               xor  a
 RO27:42FF EA D3 C4         ld   (C4D3),a
 RO27:4302 3E 2D            ld   a,2D
 RO27:4304 EA D4 C4         ld   (C4D4),a
 RO27:4307 3E 96            ld   a,96
 RO27:4309 EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:430D FA D0 C4         ld   a,(C4D0)
 RO27:4310 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:4313 3E 39            ld   a,39
 RO27:4315 EA DB C4         ld   (C4DB),a
 RO27:4318 C3 8A 02         jp   028A
 RO27:431B AF               xor  a
 RO27:431C EA D1 C4         ld   (C4D1),a
 RO27:431F EA D2 C4         ld   (C4D2),a
 RO27:4322 3E FF            ld   a,FF
 RO27:4324 EA CC C4         ld   (C4CC),a
 RO27:4327 3E 80            ld   a,80
 RO27:4329 EA CD C4         ld   (C4CD),a
 RO27:432C AF               xor  a
 RO27:432D EA CE C4         ld   (C4CE),a
 RO27:4330 EA CF C4         ld   (C4CF),a
 RO27:4333 3E 43            ld   a,43
 RO27:4335 EA D5 C4         ld   (C4D5),a
 RO27:4338 3E 5A            ld   a,5A
 RO27:433A EA D6 C4         ld   (C4D6),a
 RO27:433D 3E 27            ld   a,27
 RO27:433F EA D7 C4         ld   (C4D7),a       // Instruction $27:$435A
 RO27:4342 AF               xor  a
 RO27:4343 EA D3 C4         ld   (C4D3),a
 RO27:4346 3E 1E            ld   a,1E
 RO27:4348 EA D4 C4         ld   (C4D4),a
 RO27:434B 3E 99            ld   a,99
 RO27:434D EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:4351 FA D0 C4         ld   a,(C4D0)
 RO27:4354 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:4357 C3 8A 02         jp   028A
 RO27:435A AF               xor  a
 RO27:435B EA D1 C4         ld   (C4D1),a
 RO27:435E EA D2 C4         ld   (C4D2),a
 RO27:4361 EA CC C4         ld   (C4CC),a
 RO27:4364 EA CD C4         ld   (C4CD),a
 RO27:4367 EA CE C4         ld   (C4CE),a
 RO27:436A EA CF C4         ld   (C4CF),a
 RO27:436D AF               xor  a
 RO27:436E EA D5 C4         ld   (C4D5),a
 RO27:4371 EA D6 C4         ld   (C4D6),a
 RO27:4374 EA D7 C4         ld   (C4D7),a
 RO27:4377 3E 02            ld   a,02
 RO27:4379 EA D3 C4         ld   (C4D3),a
 RO27:437C AF               xor  a
 RO27:437D EA D4 C4         ld   (C4D4),a
 RO27:4380 3E 9E            ld   a,9E
 RO27:4382 EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:4386 FA D0 C4         ld   a,(C4D0)
 RO27:4389 CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:438C C3 8A 02         jp   028A
 RO27:438F AF               xor  a
 RO27:4390 EA CC C4         ld   (C4CC),a
 RO27:4393 EA CE C4         ld   (C4CE),a
 RO27:4396 EA D1 C4         ld   (C4D1),a
 RO27:4399 EA D2 C4         ld   (C4D2),a
 RO27:439C AF               xor  a
 RO27:439D EA D3 C4         ld   (C4D3),a
 RO27:43A0 3E 3C            ld   a,3C
 RO27:43A2 EA D4 C4         ld   (C4D4),a       // Timer of 60 frames before ending instruction
 RO27:43A5 3E 9A            ld   a,9A           // Soldier Victory Pose (facing left)
 RO27:43A7 EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:43AB FA D0 C4         ld   a,(C4D0)
 RO27:43AE CD E8 2E         call 2EE8           // WRA4[$D005 + A * 16] to WRA4[$D00B + A * 16] established (B is intended temporary ROM block, DE is basic pointer)
 RO27:43B1 AF               xor  a
 RO27:43B2 CD 44 38         call 3844
 RO27:43B5 C3 8A 02         jp   028A           // Animation instruction: Soldier Victory Pose (facing left); resets itself every 60 frames
 RO27:43B8 3E FF            ld   a,FF
 RO27:43BA EA CC C4         ld   (C4CC),a
 RO27:43BD AF               xor  a
 RO27:43BE EA CE C4         ld   (C4CE),a
 RO27:43C1 EA D1 C4         ld   (C4D1),a
 RO27:43C4 EA D2 C4         ld   (C4D2),a
 RO27:43C7 EA D3 C4         ld   (C4D3),a
 RO27:43CA 3E 78            ld   a,78
 RO27:43CC EA D4 C4         ld   (C4D4),a
 RO27:43CF AF               xor  a
 RO27:43D0 EA D5 C4         ld   (C4D5),a
 RO27:43D3 EA D6 C4         ld   (C4D6),a
 RO27:43D6 EA D7 C4         ld   (C4D7),a
 RO27:43D9 C3 8A 02         jp   028A           // Animation instruction: gradually move left 1 pixel/frame, reset itself every 120 frames
 RO27:43DC E5               push hl
 RO27:43DD 21 00 00         ld   hl,0000
 RO27:43E0 E5               push hl             // Loop begins here
 RO27:43E1 D5               push de
 RO27:43E2 C5               push bc
 RO27:43E3 CD A2 05         call 05A2           // Button update, next frame
 RO27:43E6 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:43E9 EF 17 DF 40                          // Handles all sprite advanced behavior for the frame with sprites needing to spawn first
 RO27:43ED C1               pop  bc
 RO27:43EE D1               pop  de
 RO27:43EF E1               pop  hl
 RO27:43F0 CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO27:43F3 20 03            jr   nz,43F8
 RO27:43F5 AF               xor  a
 RO27:43F6 18 1D            jr   4415           // Ends immediately with A = 0 if DE = HL
 RO27:43F8 F0 91            ld   a,(ff00+91)
 RO27:43FA CB 47            bit  0,a            // A
 RO27:43FC 20 06            jr   nz,4404
 RO27:43FE CB 5F            bit  3,a            // Start
 RO27:4400 20 02            jr   nz,4404
 RO27:4402 18 04            jr   4408
 RO27:4404 3E FF            ld   a,FF
 RO27:4406 18 0D            jr   4415           // Ends immediately with A = -1 if A or Start is pressed
 RO27:4408 F0 95            ld   a,(ff00+95)
 RO27:440A 80               add  b
 RO27:440B E0 95            ld   (ff00+95),a
 RO27:440D F0 96            ld   a,(ff00+96)
 RO27:440F 81               add  c
 RO27:4410 E0 96            ld   (ff00+96),a
 RO27:4412 23               inc  hl
 RO27:4413 18 CB            jr   43E0
 RO27:4415 E1               pop  hl
 RO27:4416 C9               ret                 // A = -1 if A or Start is pressed before the timer indicated by DE runs out, 0 otherwise; Intended Scroll incremented by B,C every frame, sprites also continually updated
 RO27:4417 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:441A EF 17 00 40                          // Clear all sprites in $C300 table, empties ($C4C8~$C4DB), WRA4($DB2C), WRA4($DB2E) 2 byte, and WRA4($D3AC~$DB2B)
 RO27:441E EF 10 F8 4D                          // Establishes title screen BG graphics as a whole
 RO27:4422 AF               xor  a
 RO27:4423 EA A0 C4         ld   (C4A0),a
 RO27:4426 3E 00            ld   a,00
 RO27:4428 E0 83            ld   (ff00+83),a
 RO27:442A E0 4F            ld   (ff00+4F),a
 RO27:442C 3E 1D            ld   a,1D           // "PRESS START" graphics pointers
 RO27:442E 21 00 80         ld   hl,8000
 RO27:4431 EF 1A D7 43                          // Sprite Group A's graphic base tiles placed in HL in as many bytes as needed, Sprite Group A's palettes also established
 RO27:4435 3E DC            ld   a,DC           // "PRESS START" stats modification table
 RO27:4437 EF 1A 10 45                          // B holds sprite A's ROM block, DE holds location of list of pointers to sprite stats modification tables for sprite A
 RO27:443B 11 E7 51         ld   de,51E7
 RO27:443E 3E 20            ld   a,20
 RO27:4440 0E 00            ld   c,00
 RO27:4442 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO27:4445 01 78 58         ld   bc,5878
 RO27:4448 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO27:444B 3E 01            ld   a,01
 RO27:444D CD 16 38         call 3816           // Title theme
 RO27:4450 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:4453 11 80 07         ld   de,0780        // DE = 1920 (equal to 32 seconds)
 RO27:4456 01 00 00         ld   bc,0000
 RO27:4459 CD DC 43         call 43DC           // A = -1 if A or Start is pressed within 32 seconds of process starting, 0 otherwise; Intended Scroll incremented by B,C every frame, sprites also continually updated
 RO27:445C F5               push af
 RO27:445D CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:4460 CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO27:4463 F1               pop  af
 RO27:4464 C9               ret                 // Title screen setup

 RO27:4465 01 01 01         ld   bc,0101
 RO27:4468 01 01 01         ld   bc,0101
 RO27:446B 01 01 01         ld   bc,0101
 RO27:446E 01 01 01         ld   bc,0101
 RO27:4471 01 01 01         ld   bc,0101
 RO27:4474 01 01 01         ld   bc,0101
 RO27:4477 01 01 01         ld   bc,0101
 RO27:447A 01 01 01         ld   bc,0101
 RO27:447D 01 01 01         ld   bc,0101
 RO27:4480 01 01 01         ld   bc,0101
 RO27:4483 01 01 01         ld   bc,0101
 RO27:4486 01 01 01         ld   bc,0101
 RO27:4489 01 01 01         ld   bc,0101
 RO27:448C 01 01 01         ld   bc,0101
 RO27:448F 01 01 01         ld   bc,0101
 RO27:4492 01 01 01         ld   bc,0101
 RO27:4495 01 01 01         ld   bc,0101
 RO27:4498 01 01 01         ld   bc,0101
 RO27:449B 01 01 01         ld   bc,0101
 RO27:449E 01 01 01         ld   bc,0101
 RO27:44A1 01 01 01         ld   bc,0101
 RO27:44A4 01 01 01         ld   bc,0101
 RO27:44A7 01 01 01         ld   bc,0101
 RO27:44AA 01 01 01         ld   bc,0101
 RO27:44AD 01 01 01         ld   bc,0101
 RO27:44B0 01 01 01         ld   bc,0101
 RO27:44B3 01 01 01         ld   bc,0101
 RO27:44B6 01 01 01         ld   bc,0101
 RO27:44B9 01 01 01         ld   bc,0101
 RO27:44BC 01 01 01         ld   bc,0101
 RO27:44BF 01 01 01         ld   bc,0101
 RO27:44C2 01 01 01         ld   bc,0101
 RO27:44C5 01 01 01         ld   bc,0101
 RO27:44C8 01 01 01         ld   bc,0101
 RO27:44CB 01 01 01         ld   bc,0101
 RO27:44CE 01 01 01         ld   bc,0101
 RO27:44D1 01 01 01         ld   bc,0101
 RO27:44D4 01 01 01         ld   bc,0101
 RO27:44D7 01 02 03         ld   bc,0302
 RO27:44DA 01 01 01         ld   bc,0101
 RO27:44DD 01 01 01         ld   bc,0101
 RO27:44E0 01 01 01         ld   bc,0101
 RO27:44E3 01 01 01         ld   bc,0101
 RO27:44E6 01 01 01         ld   bc,0101
 RO27:44E9 01 01 04         ld   bc,0401
 RO27:44EC 05               dec  b
 RO27:44ED 06 01            ld   b,01
 RO27:44EF 01 01 01         ld   bc,0101
 RO27:44F2 01 01 01         ld   bc,0101
 RO27:44F5 01 01 0A         ld   bc,0A01
 RO27:44F8 0B               dec  bc
 RO27:44F9 0C               inc  c
 RO27:44FA 0D               dec  c
 RO27:44FB 01 01 07         ld   bc,0701
 RO27:44FE 08 09 01         ld   (0109),sp
 RO27:4501 01 01 01         ld   bc,0101
 RO27:4504 01 01 0E         ld   bc,0E01
 RO27:4507 0F               rrca 
 RO27:4508 10 11            <corrupted stop>
 RO27:450A 12               ld   (de),a
 RO27:450B 13               inc  de
 RO27:450C 14               inc  d
 RO27:450D 15               dec  d
 RO27:450E 16 17            ld   d,17
 RO27:4510 18 19            jr   452B
 RO27:4512 1A               ld   a,(de)
 RO27:4513 01 01 01         ld   bc,0101
 RO27:4516 01 01 01         ld   bc,0101
 RO27:4519 01 1B 1C         ld   bc,1C1B
 RO27:451C 1D               dec  e
 RO27:451D 1E 1F            ld   e,1F
 RO27:451F 20 21            jr   nz,4542
 RO27:4521 22               ldi  (hl),a
 RO27:4522 23               inc  hl
 RO27:4523 24               inc  h
 RO27:4524 25               dec  h
 RO27:4525 26 27            ld   h,27
 RO27:4527 28 29            jr   z,4552
 RO27:4529 01 01 01         ld   bc,0101
 RO27:452C 01 01 2A         ld   bc,2A01
 RO27:452F 2B               dec  hl
 RO27:4530 2C               inc  l
 RO27:4531 2D               dec  l
 RO27:4532 2E 2F            ld   l,2F
 RO27:4534 30 31            jr   nc,4567
 RO27:4536 32               ldd  (hl),a
 RO27:4537 33               inc  sp
 RO27:4538 34               inc  (hl)
 RO27:4539 35               dec  (hl)
 RO27:453A 36 37            ld   (hl),37
 RO27:453C 38 39            jr   c,4577
 RO27:453E 3A               ldd  a,(hl)
 RO27:453F 3B               dec  sp
 RO27:4540 01 3C 3D         ld   bc,3D3C
 RO27:4543 3E 3F            ld   a,3F
 RO27:4545 40               ld   b,b
 RO27:4546 41               ld   b,c
 RO27:4547 42               ld   b,d
 RO27:4548 43               ld   b,e
 RO27:4549 44               ld   b,h
 RO27:454A 45               ld   b,l
 RO27:454B 46               ld   b,(hl)
 RO27:454C 47               ld   b,a
 RO27:454D 48               ld   c,b
 RO27:454E 49               ld   c,c
 RO27:454F 4A               ld   c,d
 RO27:4550 4B               ld   c,e
 RO27:4551 4C               ld   c,h
 RO27:4552 4D               ld   c,l
 RO27:4553 4E               ld   c,(hl)
 RO27:4554 4F               ld   c,a
 RO27:4555 50               ld   d,b
 RO27:4556 51               ld   d,c
 RO27:4557 52               ld   d,d
 RO27:4558 53               ld   d,e
 RO27:4559 54               ld   d,h
 RO27:455A 55               ld   d,l
 RO27:455B 56               ld   d,(hl)
 RO27:455C 57               ld   d,a
 RO27:455D 58               ld   e,b
 RO27:455E 59               ld   e,c
 RO27:455F 5A               ld   e,d
 RO27:4560 5B               ld   e,e
 RO27:4561 5C               ld   e,h
 RO27:4562 5D               ld   e,l
 RO27:4563 5E               ld   e,(hl)
 RO27:4564 5F               ld   e,a
 RO27:4565 60               ld   h,b
 RO27:4566 61               ld   h,c
 RO27:4567 62               ld   h,d
 RO27:4568 63               ld   h,e
 RO27:4569 64               ld   h,h
 RO27:456A 65               ld   h,l
 RO27:456B 66               ld   h,(hl)
 RO27:456C 67               ld   h,a
 RO27:456D 68               ld   l,b
 RO27:456E 69               ld   l,c
 RO27:456F 6A               ld   l,d
 RO27:4570 6B               ld   l,e
 RO27:4571 6C               ld   l,h
 RO27:4572 6D               ld   l,l
 RO27:4573 6E               ld   l,(hl)
 RO27:4574 6F               ld   l,a
 RO27:4575 70               ld   (hl),b
 RO27:4576 71               ld   (hl),c
 RO27:4577 72               ld   (hl),d
 RO27:4578 73               ld   (hl),e
 RO27:4579 74               ld   (hl),h
 RO27:457A 75               ld   (hl),l
 RO27:457B 76               halt 
 RO27:457C 77               ld   (hl),a
 RO27:457D 78               ld   a,b
 RO27:457E 79               ld   a,c
 RO27:457F 7A               ld   a,d
 RO27:4580 7B               ld   a,e
 RO27:4581 7C               ld   a,h
 RO27:4582 7D               ld   a,l
 RO27:4583 7E               ld   a,(hl)
 RO27:4584 7F               ld   a,a
 RO27:4585 80               add  b
 RO27:4586 81               add  c
 RO27:4587 82               add  d
 RO27:4588 83               add  e
 RO27:4589 84               add  h
 RO27:458A 85               add  l
 RO27:458B 86               add  (hl)
 RO27:458C 87               add  a
 RO27:458D 88               adc  b
 RO27:458E 89               adc  c
 RO27:458F 8A               adc  d
 RO27:4590 8B               adc  e
 RO27:4591 97               sub  a
 RO27:4592 97               sub  a
 RO27:4593 97               sub  a
 RO27:4594 97               sub  a
 RO27:4595 97               sub  a
 RO27:4596 97               sub  a
 RO27:4597 97               sub  a
 RO27:4598 97               sub  a
 RO27:4599 97               sub  a
 RO27:459A 97               sub  a
 RO27:459B 97               sub  a
 RO27:459C 97               sub  a
 RO27:459D 97               sub  a
 RO27:459E 97               sub  a
 RO27:459F 97               sub  a
 RO27:45A0 97               sub  a
 RO27:45A1 97               sub  a
 RO27:45A2 97               sub  a
 RO27:45A3 97               sub  a
 RO27:45A4 97               sub  a
 RO27:45A5 97               sub  a
 RO27:45A6 8C               adc  h
 RO27:45A7 8F               adc  a
 RO27:45A8 8D               adc  l
 RO27:45A9 8D               adc  l
 RO27:45AA 8D               adc  l
 RO27:45AB 97               sub  a
 RO27:45AC 91               sub  c
 RO27:45AD 92               sub  d
 RO27:45AE 93               sub  e
 RO27:45AF 94               sub  h
 RO27:45B0 95               sub  l
 RO27:45B1 96               sub  (hl)
 RO27:45B2 97               sub  a
 RO27:45B3 98               sbc  b
 RO27:45B4 99               sbc  c
 RO27:45B5 9A               sbc  d
 RO27:45B6 9B               sbc  e
 RO27:45B7 97               sub  a
 RO27:45B8 97               sub  a
 RO27:45B9 97               sub  a
 RO27:45BA 8C               adc  h
 RO27:45BB 8E               adc  (hl)
 RO27:45BC 90               sub  b
 RO27:45BD 90               sub  b
 RO27:45BE 8D               adc  l
 RO27:45BF 97               sub  a
 RO27:45C0 9C               sbc  h
 RO27:45C1 9D               sbc  l
 RO27:45C2 9E               sbc  (hl)
 RO27:45C3 9F               sbc  a
 RO27:45C4 A0               and  b
 RO27:45C5 A1               and  c
 RO27:45C6 97               sub  a
 RO27:45C7 97               sub  a
 RO27:45C8 97               sub  a
 RO27:45C9 97               sub  a
 RO27:45CA 97               sub  a
 RO27:45CB 97               sub  a
 RO27:45CC 97               sub  a
 RO27:45CD 00               nop  
 RO27:45CE 00               nop  
 RO27:45CF 00               nop  
 RO27:45D0 00               nop  
 RO27:45D1 00               nop  
 RO27:45D2 00               nop  
 RO27:45D3 00               nop  
 RO27:45D4 00               nop  
 RO27:45D5 00               nop  
 RO27:45D6 00               nop  
 RO27:45D7 00               nop  
 RO27:45D8 00               nop  
 RO27:45D9 00               nop  
 RO27:45DA 00               nop  
 RO27:45DB 00               nop  
 RO27:45DC 00               nop  
 RO27:45DD 00               nop  
 RO27:45DE 00               nop  
 RO27:45DF 00               nop  
 RO27:45E0 00               nop  
 RO27:45E1 00               nop  
 RO27:45E2 00               nop  
 RO27:45E3 00               nop  
 RO27:45E4 00               nop  
 RO27:45E5 00               nop  
 RO27:45E6 00               nop  
 RO27:45E7 00               nop  
 RO27:45E8 00               nop  
 RO27:45E9 00               nop  
 RO27:45EA 00               nop  
 RO27:45EB 00               nop  
 RO27:45EC 00               nop  
 RO27:45ED 00               nop  
 RO27:45EE 00               nop  
 RO27:45EF 00               nop  
 RO27:45F0 00               nop  
 RO27:45F1 00               nop  
 RO27:45F2 00               nop  
 RO27:45F3 00               nop  
 RO27:45F4 00               nop  
 RO27:45F5 00               nop  
 RO27:45F6 00               nop  
 RO27:45F7 00               nop  
 RO27:45F8 00               nop  
 RO27:45F9 00               nop  
 RO27:45FA 00               nop  
 RO27:45FB 00               nop  
 RO27:45FC 00               nop  
 RO27:45FD 00               nop  
 RO27:45FE 00               nop  
 RO27:45FF 00               nop  
 RO27:4600 00               nop  
 RO27:4601 00               nop  
 RO27:4602 00               nop  
 RO27:4603 00               nop  
 RO27:4604 00               nop  
 RO27:4605 00               nop  
 RO27:4606 00               nop  
 RO27:4607 00               nop  
 RO27:4608 00               nop  
 RO27:4609 00               nop  
 RO27:460A 00               nop  
 RO27:460B 00               nop  
 RO27:460C 00               nop  
 RO27:460D 00               nop  
 RO27:460E 00               nop  
 RO27:460F 00               nop  
 RO27:4610 00               nop  
 RO27:4611 00               nop  
 RO27:4612 00               nop  
 RO27:4613 00               nop  
 RO27:4614 00               nop  
 RO27:4615 00               nop  
 RO27:4616 00               nop  
 RO27:4617 00               nop  
 RO27:4618 00               nop  
 RO27:4619 00               nop  
 RO27:461A 00               nop  
 RO27:461B 00               nop  
 RO27:461C 00               nop  
 RO27:461D 00               nop  
 RO27:461E 00               nop  
 RO27:461F 00               nop  
 RO27:4620 00               nop  
 RO27:4621 00               nop  
 RO27:4622 00               nop  
 RO27:4623 00               nop  
 RO27:4624 00               nop  
 RO27:4625 00               nop  
 RO27:4626 00               nop  
 RO27:4627 00               nop  
 RO27:4628 00               nop  
 RO27:4629 00               nop  
 RO27:462A 00               nop  
 RO27:462B 00               nop  
 RO27:462C 00               nop  
 RO27:462D 00               nop  
 RO27:462E 00               nop  
 RO27:462F 00               nop  
 RO27:4630 00               nop  
 RO27:4631 00               nop  
 RO27:4632 00               nop  
 RO27:4633 00               nop  
 RO27:4634 00               nop  
 RO27:4635 00               nop  
 RO27:4636 00               nop  
 RO27:4637 00               nop  
 RO27:4638 00               nop  
 RO27:4639 00               nop  
 RO27:463A 00               nop  
 RO27:463B 00               nop  
 RO27:463C 00               nop  
 RO27:463D 00               nop  
 RO27:463E 00               nop  
 RO27:463F 00               nop  
 RO27:4640 00               nop  
 RO27:4641 00               nop  
 RO27:4642 00               nop  
 RO27:4643 00               nop  
 RO27:4644 00               nop  
 RO27:4645 00               nop  
 RO27:4646 00               nop  
 RO27:4647 00               nop  
 RO27:4648 00               nop  
 RO27:4649 00               nop  
 RO27:464A 00               nop  
 RO27:464B 00               nop  
 RO27:464C 00               nop  
 RO27:464D 00               nop  
 RO27:464E 00               nop  
 RO27:464F 00               nop  
 RO27:4650 00               nop  
 RO27:4651 00               nop  
 RO27:4652 00               nop  
 RO27:4653 00               nop  
 RO27:4654 00               nop  
 RO27:4655 00               nop  
 RO27:4656 00               nop  
 RO27:4657 00               nop  
 RO27:4658 00               nop  
 RO27:4659 00               nop  
 RO27:465A 00               nop  
 RO27:465B 00               nop  
 RO27:465C 00               nop  
 RO27:465D 00               nop  
 RO27:465E 00               nop  
 RO27:465F 00               nop  
 RO27:4660 00               nop  
 RO27:4661 00               nop  
 RO27:4662 00               nop  
 RO27:4663 00               nop  
 RO27:4664 00               nop  
 RO27:4665 00               nop  
 RO27:4666 00               nop  
 RO27:4667 00               nop  
 RO27:4668 00               nop  
 RO27:4669 00               nop  
 RO27:466A 00               nop  
 RO27:466B 00               nop  
 RO27:466C 00               nop  
 RO27:466D 00               nop  
 RO27:466E 00               nop  
 RO27:466F 00               nop  
 RO27:4670 00               nop  
 RO27:4671 00               nop  
 RO27:4672 00               nop  
 RO27:4673 00               nop  
 RO27:4674 01 00 00         ld   bc,0000
 RO27:4677 00               nop  
 RO27:4678 00               nop  
 RO27:4679 00               nop  
 RO27:467A 00               nop  
 RO27:467B 00               nop  
 RO27:467C 00               nop  
 RO27:467D 00               nop  
 RO27:467E 00               nop  
 RO27:467F 00               nop  
 RO27:4680 00               nop  
 RO27:4681 00               nop  
 RO27:4682 00               nop  
 RO27:4683 03               inc  bc
 RO27:4684 03               inc  bc
 RO27:4685 00               nop  
 RO27:4686 00               nop  
 RO27:4687 00               nop  
 RO27:4688 00               nop  
 RO27:4689 00               nop  
 RO27:468A 03               inc  bc
 RO27:468B 03               inc  bc
 RO27:468C 00               nop  
 RO27:468D 00               nop  
 RO27:468E 00               nop  
 RO27:468F 00               nop  
 RO27:4690 00               nop  
 RO27:4691 00               nop  
 RO27:4692 00               nop  
 RO27:4693 00               nop  
 RO27:4694 00               nop  
 RO27:4695 00               nop  
 RO27:4696 00               nop  
 RO27:4697 03               inc  bc
 RO27:4698 03               inc  bc
 RO27:4699 03               inc  bc
 RO27:469A 03               inc  bc
 RO27:469B 03               inc  bc
 RO27:469C 03               inc  bc
 RO27:469D 03               inc  bc
 RO27:469E 00               nop  
 RO27:469F 03               inc  bc
 RO27:46A0 03               inc  bc
 RO27:46A1 02               ld   (bc),a
 RO27:46A2 02               ld   (bc),a
 RO27:46A3 02               ld   (bc),a
 RO27:46A4 00               nop  
 RO27:46A5 00               nop  
 RO27:46A6 00               nop  
 RO27:46A7 00               nop  
 RO27:46A8 00               nop  
 RO27:46A9 02               ld   (bc),a
 RO27:46AA 02               ld   (bc),a
 RO27:46AB 02               ld   (bc),a
 RO27:46AC 03               inc  bc
 RO27:46AD 03               inc  bc
 RO27:46AE 03               inc  bc
 RO27:46AF 03               inc  bc
 RO27:46B0 03               inc  bc
 RO27:46B1 03               inc  bc
 RO27:46B2 03               inc  bc
 RO27:46B3 00               nop  
 RO27:46B4 03               inc  bc
 RO27:46B5 00               nop  
 RO27:46B6 02               ld   (bc),a
 RO27:46B7 02               ld   (bc),a
 RO27:46B8 02               ld   (bc),a
 RO27:46B9 00               nop  
 RO27:46BA 00               nop  
 RO27:46BB 00               nop  
 RO27:46BC 00               nop  
 RO27:46BD 02               ld   (bc),a
 RO27:46BE 02               ld   (bc),a
 RO27:46BF 02               ld   (bc),a
 RO27:46C0 03               inc  bc
 RO27:46C1 03               inc  bc
 RO27:46C2 03               inc  bc
 RO27:46C3 03               inc  bc
 RO27:46C4 03               inc  bc
 RO27:46C5 03               inc  bc
 RO27:46C6 03               inc  bc
 RO27:46C7 03               inc  bc
 RO27:46C8 01 00 00         ld   bc,0000
 RO27:46CB 02               ld   (bc),a
 RO27:46CC 02               ld   (bc),a
 RO27:46CD 02               ld   (bc),a
 RO27:46CE 02               ld   (bc),a
 RO27:46CF 01 01 02         ld   bc,0201
 RO27:46D2 02               ld   (bc),a
 RO27:46D3 02               ld   (bc),a
 RO27:46D4 02               ld   (bc),a
 RO27:46D5 02               ld   (bc),a
 RO27:46D6 02               ld   (bc),a
 RO27:46D7 02               ld   (bc),a
 RO27:46D8 02               ld   (bc),a
 RO27:46D9 02               ld   (bc),a
 RO27:46DA 03               inc  bc
 RO27:46DB 03               inc  bc
 RO27:46DC 01 01 01         ld   bc,0101
 RO27:46DF 03               inc  bc
 RO27:46E0 02               ld   (bc),a
 RO27:46E1 02               ld   (bc),a
 RO27:46E2 02               ld   (bc),a
 RO27:46E3 01 01 02         ld   bc,0201
 RO27:46E6 02               ld   (bc),a
 RO27:46E7 02               ld   (bc),a
 RO27:46E8 02               ld   (bc),a
 RO27:46E9 02               ld   (bc),a
 RO27:46EA 02               ld   (bc),a
 RO27:46EB 02               ld   (bc),a
 RO27:46EC 02               ld   (bc),a
 RO27:46ED 02               ld   (bc),a
 RO27:46EE 02               ld   (bc),a
 RO27:46EF 02               ld   (bc),a
 RO27:46F0 01 01 02         ld   bc,0201
 RO27:46F3 02               ld   (bc),a
 RO27:46F4 02               ld   (bc),a
 RO27:46F5 02               ld   (bc),a
 RO27:46F6 02               ld   (bc),a
 RO27:46F7 02               ld   (bc),a
 RO27:46F8 02               ld   (bc),a
 RO27:46F9 07               rlca 
 RO27:46FA 07               rlca 
 RO27:46FB 07               rlca 
 RO27:46FC 07               rlca 
 RO27:46FD 07               rlca 
 RO27:46FE 07               rlca 
 RO27:46FF 07               rlca 
 RO27:4700 07               rlca 
 RO27:4701 07               rlca 
 RO27:4702 07               rlca 
 RO27:4703 07               rlca 
 RO27:4704 07               rlca 
 RO27:4705 07               rlca 
 RO27:4706 07               rlca 
 RO27:4707 07               rlca 
 RO27:4708 07               rlca 
 RO27:4709 07               rlca 
 RO27:470A 07               rlca 
 RO27:470B 07               rlca 
 RO27:470C 07               rlca 
 RO27:470D 07               rlca 
 RO27:470E 07               rlca 
 RO27:470F 07               rlca 
 RO27:4710 07               rlca 
 RO27:4711 07               rlca 
 RO27:4712 07               rlca 
 RO27:4713 07               rlca 
 RO27:4714 07               rlca 
 RO27:4715 07               rlca 
 RO27:4716 07               rlca 
 RO27:4717 07               rlca 
 RO27:4718 07               rlca 
 RO27:4719 07               rlca 
 RO27:471A 07               rlca 
 RO27:471B 07               rlca 
 RO27:471C 07               rlca 
 RO27:471D 07               rlca 
 RO27:471E 07               rlca 
 RO27:471F 07               rlca 
 RO27:4720 07               rlca 
 RO27:4721 07               rlca 
 RO27:4722 07               rlca 
 RO27:4723 07               rlca 
 RO27:4724 07               rlca 
 RO27:4725 07               rlca 
 RO27:4726 07               rlca 
 RO27:4727 07               rlca 
 RO27:4728 07               rlca 
 RO27:4729 07               rlca 
 RO27:472A 07               rlca 
 RO27:472B 07               rlca 
 RO27:472C 07               rlca 
 RO27:472D 07               rlca 
 RO27:472E 07               rlca 
 RO27:472F 07               rlca 
 RO27:4730 07               rlca 
 RO27:4731 07               rlca 
 RO27:4732 07               rlca 
 RO27:4733 07               rlca 
 RO27:4734 07               rlca 
 RO27:4735 00               nop  
 RO27:4736 00               nop  
 RO27:4737 00               nop  
 RO27:4738 00               nop  
 RO27:4739 00               nop  
 RO27:473A 00               nop  
 RO27:473B 00               nop  
 RO27:473C 00               nop  
 RO27:473D 00               nop  
 RO27:473E 00               nop  
 RO27:473F 00               nop  
 RO27:4740 00               nop  
 RO27:4741 00               nop  
 RO27:4742 00               nop  
 RO27:4743 00               nop  
 RO27:4744 00               nop  
 RO27:4745 FF               rst  38
 RO27:4746 FF               rst  38
 RO27:4747 FF               rst  38
 RO27:4748 FF               rst  38
 RO27:4749 FF               rst  38
 RO27:474A FF               rst  38
 RO27:474B FF               rst  38
 RO27:474C FF               rst  38
 RO27:474D FF               rst  38
 RO27:474E FF               rst  38
 RO27:474F FF               rst  38
 RO27:4750 FF               rst  38
 RO27:4751 FF               rst  38
 RO27:4752 FF               rst  38
 RO27:4753 FF               rst  38
 RO27:4754 FF               rst  38
 RO27:4755 FF               rst  38
 RO27:4756 FF               rst  38
 RO27:4757 FF               rst  38
 RO27:4758 FF               rst  38
 RO27:4759 FF               rst  38
 RO27:475A FF               rst  38
 RO27:475B FF               rst  38
 RO27:475C FF               rst  38
 RO27:475D FF               rst  38
 RO27:475E FF               rst  38
 RO27:475F FE FF            cp   a,FF
 RO27:4761 FA FC F0         ld   a,(F0FC)
 RO27:4764 F8 FF            ld   hl,sp+FF
 RO27:4766 FF               rst  38
 RO27:4767 FF               rst  38
 RO27:4768 FF               rst  38
 RO27:4769 FF               rst  38
 RO27:476A FF               rst  38
 RO27:476B DF               rst  18
 RO27:476C FF               rst  38
 RO27:476D 1F               rra  
 RO27:476E 8F               adc  a
 RO27:476F 07               rlca 
 RO27:4770 0F               rrca 
 RO27:4771 0F               rrca 
 RO27:4772 1F               rra  
 RO27:4773 3F               ccf  
 RO27:4774 7F               ld   a,a
 RO27:4775 FF               rst  38
 RO27:4776 FF               rst  38
 RO27:4777 FF               rst  38
 RO27:4778 FF               rst  38
 RO27:4779 FF               rst  38
 RO27:477A FF               rst  38
 RO27:477B FD               -    
 RO27:477C FE F4            cp   a,F4
 RO27:477E F8 F0            ld   hl,sp+F0
 RO27:4780 E0 A0            ld   (ff00+A0),a
 RO27:4782 C1               pop  bc
 RO27:4783 85               add  l
 RO27:4784 03               inc  bc
 RO27:4785 F1               pop  af
 RO27:4786 E0 E2            ld   (ff00+E2),a
 RO27:4788 C1               pop  bc
 RO27:4789 03               inc  bc
 RO27:478A 87               add  a
 RO27:478B 17               rla  
 RO27:478C 0F               rrca 
 RO27:478D 3F               ccf  
 RO27:478E 1F               rra  
 RO27:478F FF               rst  38
 RO27:4790 7F               ld   a,a
 RO27:4791 FF               rst  38
 RO27:4792 FF               rst  38
 RO27:4793 FF               rst  38
 RO27:4794 FF               rst  38
 RO27:4795 7F               ld   a,a
 RO27:4796 FF               rst  38
 RO27:4797 FF               rst  38
 RO27:4798 FF               rst  38
 RO27:4799 FF               rst  38
 RO27:479A FF               rst  38
 RO27:479B FF               rst  38
 RO27:479C FF               rst  38
 RO27:479D FF               rst  38
 RO27:479E FF               rst  38
 RO27:479F FF               rst  38
 RO27:47A0 FF               rst  38
 RO27:47A1 FF               rst  38
 RO27:47A2 FF               rst  38
 RO27:47A3 FF               rst  38
 RO27:47A4 FF               rst  38
 RO27:47A5 FF               rst  38
 RO27:47A6 FF               rst  38
 RO27:47A7 FF               rst  38
 RO27:47A8 FF               rst  38
 RO27:47A9 FF               rst  38
 RO27:47AA FF               rst  38
 RO27:47AB FE FF            cp   a,FF
 RO27:47AD F9               ld   sp,hl
 RO27:47AE FE E8            cp   a,E8
 RO27:47B0 F0 E0            ld   a,(ff00+E0)
 RO27:47B2 C0               ret  nz
 RO27:47B3 00               nop  
 RO27:47B4 80               add  b
 RO27:47B5 FD               -    
 RO27:47B6 FE F4            cp   a,F4
 RO27:47B8 F8 D0            ld   hl,sp+D0
 RO27:47BA E0 41            ld   (ff00+41),a
 RO27:47BC 80               add  b
 RO27:47BD 05               dec  b
 RO27:47BE 03               inc  bc
 RO27:47BF 17               rla  
 RO27:47C0 0F               rrca 
 RO27:47C1 2F               cpl  
 RO27:47C2 1F               rra  
 RO27:47C3 1F               rra  
 RO27:47C4 3F               ccf  
 RO27:47C5 17               rla  
 RO27:47C6 0F               rrca 
 RO27:47C7 3F               ccf  
 RO27:47C8 1F               rra  
 RO27:47C9 BF               cp   a
 RO27:47CA 7F               ld   a,a
 RO27:47CB 7F               ld   a,a
 RO27:47CC FF               rst  38
 RO27:47CD FF               rst  38
 RO27:47CE FF               rst  38
 RO27:47CF FF               rst  38
 RO27:47D0 FF               rst  38
 RO27:47D1 FF               rst  38
 RO27:47D2 FF               rst  38
 RO27:47D3 FF               rst  38
 RO27:47D4 FF               rst  38
 RO27:47D5 FF               rst  38
 RO27:47D6 FF               rst  38
 RO27:47D7 FF               rst  38
 RO27:47D8 FF               rst  38
 RO27:47D9 FF               rst  38
 RO27:47DA FF               rst  38
 RO27:47DB FF               rst  38
 RO27:47DC FF               rst  38
 RO27:47DD FF               rst  38
 RO27:47DE FF               rst  38
 RO27:47DF FF               rst  38
 RO27:47E0 FF               rst  38
 RO27:47E1 FF               rst  38
 RO27:47E2 FF               rst  38
 RO27:47E3 83               add  e
 RO27:47E4 FF               rst  38
 RO27:47E5 FF               rst  38
 RO27:47E6 FF               rst  38
 RO27:47E7 FF               rst  38
 RO27:47E8 FF               rst  38
 RO27:47E9 FF               rst  38
 RO27:47EA FF               rst  38
 RO27:47EB FF               rst  38
 RO27:47EC FF               rst  38
 RO27:47ED FF               rst  38
 RO27:47EE FF               rst  38
 RO27:47EF FF               rst  38
 RO27:47F0 FF               rst  38
 RO27:47F1 FF               rst  38
 RO27:47F2 FF               rst  38
 RO27:47F3 FE FF            cp   a,FF
 RO27:47F5 FF               rst  38
 RO27:47F6 FF               rst  38
 RO27:47F7 FF               rst  38
 RO27:47F8 FF               rst  38
 RO27:47F9 FF               rst  38
 RO27:47FA FF               rst  38
 RO27:47FB FF               rst  38
 RO27:47FC FF               rst  38
 RO27:47FD FF               rst  38
 RO27:47FE FF               rst  38
 RO27:47FF F7               rst  30
 RO27:4800 F8 BD            ld   hl,sp+BD
 RO27:4802 C0               ret  nz
 RO27:4803 E8 10            add  sp,10
 RO27:4805 FF               rst  38
 RO27:4806 FF               rst  38
 RO27:4807 FF               rst  38
 RO27:4808 FF               rst  38
 RO27:4809 FF               rst  38
 RO27:480A FF               rst  38
 RO27:480B FF               rst  38
 RO27:480C FF               rst  38
 RO27:480D 77               ld   (hl),a
 RO27:480E 8F               adc  a
 RO27:480F DF               rst  18
 RO27:4810 3F               ccf  
 RO27:4811 FF               rst  38
 RO27:4812 FF               rst  38
 RO27:4813 3F               ccf  
 RO27:4814 7F               ld   a,a
 RO27:4815 FF               rst  38
 RO27:4816 FF               rst  38
 RO27:4817 FF               rst  38
 RO27:4818 FF               rst  38
 RO27:4819 FF               rst  38
 RO27:481A FF               rst  38
 RO27:481B FF               rst  38
 RO27:481C FF               rst  38
 RO27:481D FE FF            cp   a,FF
 RO27:481F FD               -    
 RO27:4820 FF               rst  38
 RO27:4821 FF               rst  38
 RO27:4822 FB               ei   
 RO27:4823 FF               rst  38
 RO27:4824 FC               -    
 RO27:4825 FF               rst  38
 RO27:4826 FF               rst  38
 RO27:4827 FF               rst  38
 RO27:4828 FF               rst  38
 RO27:4829 8F               adc  a
 RO27:482A FF               rst  38
 RO27:482B 70               ld   (hl),b
 RO27:482C FF               rst  38
 RO27:482D FE FF            cp   a,FF
 RO27:482F FF               rst  38
 RO27:4830 FE FE            cp   a,FE
 RO27:4832 FE FE            cp   a,FE
 RO27:4834 FE FF            cp   a,FF
 RO27:4836 FF               rst  38
 RO27:4837 FF               rst  38
 RO27:4838 FF               rst  38
 RO27:4839 FF               rst  38
 RO27:483A FF               rst  38
 RO27:483B FF               rst  38
 RO27:483C FF               rst  38
 RO27:483D 77               ld   (hl),a
 RO27:483E 0F               rrca 
 RO27:483F 65               ld   h,l
 RO27:4840 03               inc  bc
 RO27:4841 02               ld   (bc),a
 RO27:4842 01 00 00         ld   bc,0000
 RO27:4845 FF               rst  38
 RO27:4846 FF               rst  38
 RO27:4847 FF               rst  38
 RO27:4848 FF               rst  38
 RO27:4849 FF               rst  38
 RO27:484A FF               rst  38
 RO27:484B FF               rst  38
 RO27:484C FF               rst  38
 RO27:484D FC               -    
 RO27:484E FE FC            cp   a,FC
 RO27:4850 F8 D8            ld   hl,sp+D8
 RO27:4852 E0 31            ld   (ff00+31),a
 RO27:4854 40               ld   b,b
 RO27:4855 FE FF            cp   a,FF
 RO27:4857 F6 F8            or   a,F8
 RO27:4859 D8               ret  c
 RO27:485A E0 40            ld   (ff00+40),a
 RO27:485C 83               add  e
 RO27:485D E7               rst  20
 RO27:485E 00               nop  
 RO27:485F 9E               sbc  (hl)
 RO27:4860 00               nop  
 RO27:4861 79               ld   a,c
 RO27:4862 06 E0            ld   b,E0
 RO27:4864 00               nop  
 RO27:4865 86               add  (hl)
 RO27:4866 29               add  hl,hl
 RO27:4867 40               ld   b,b
 RO27:4868 10 09            <corrupted stop>
 RO27:486A 20 01            jr   nz,486D
 RO27:486C 14               inc  d
 RO27:486D 14               inc  d
 RO27:486E 01 59 39         ld   bc,3959
 RO27:4871 63               ld   h,e
 RO27:4872 F1               pop  af
 RO27:4873 7F               ld   a,a
 RO27:4874 03               inc  bc
 RO27:4875 F0 FC            ld   a,(ff00+FC)
 RO27:4877 98               sbc  b
 RO27:4878 E0 6D            ld   (ff00+6D),a
 RO27:487A 9F               sbc  a
 RO27:487B FA FF F4         ld   a,(F4FF)
 RO27:487E FF               rst  38
 RO27:487F E0 FF            ld   (ff00+FF),a
 RO27:4881 C0               ret  nz
 RO27:4882 FF               rst  38
 RO27:4883 80               add  b
 RO27:4884 FF               rst  38
 RO27:4885 D8               ret  c
 RO27:4886 20 1C            jr   nz,48A4
 RO27:4888 00               nop  
 RO27:4889 44               ld   b,h
 RO27:488A 82               add  d
 RO27:488B 0F               rrca 
 RO27:488C F3               di   
 RO27:488D 01 FF 00         ld   bc,00FF
 RO27:4890 FF               rst  38
 RO27:4891 00               nop  
 RO27:4892 FF               rst  38
 RO27:4893 00               nop  
 RO27:4894 FF               rst  38
 RO27:4895 1F               rra  
 RO27:4896 3F               ccf  
 RO27:4897 0F               rrca 
 RO27:4898 1F               rra  
 RO27:4899 1F               rra  
 RO27:489A 3F               ccf  
 RO27:489B BF               cp   a
 RO27:489C BF               cp   a
 RO27:489D FE FF            cp   a,FF
 RO27:489F 0F               rrca 
 RO27:48A0 F0 01            ld   a,(ff00+01)
 RO27:48A2 FE 01            cp   a,01
 RO27:48A4 FE FF            cp   a,FF
 RO27:48A6 FF               rst  38
 RO27:48A7 FF               rst  38
 RO27:48A8 FF               rst  38
 RO27:48A9 FB               ei   
 RO27:48AA FD               -    
 RO27:48AB F0 F9            ld   a,(ff00+F9)
 RO27:48AD 21 F3 C3         ld   hl,C3F3
 RO27:48B0 07               rlca 
 RO27:48B1 86               add  (hl)
 RO27:48B2 0F               rrca 
 RO27:48B3 8A               adc  d
 RO27:48B4 04               inc  b
 RO27:48B5 FE FF            cp   a,FF
 RO27:48B7 FF               rst  38
 RO27:48B8 FE FA            cp   a,FA
 RO27:48BA FC               -    
 RO27:48BB F4               -    
 RO27:48BC F8 90            ld   hl,sp+90
 RO27:48BE E0 41            ld   (ff00+41),a
 RO27:48C0 80               add  b
 RO27:48C1 85               add  l
 RO27:48C2 03               inc  bc
 RO27:48C3 0B               dec  bc
 RO27:48C4 07               rlca 
 RO27:48C5 80               add  b
 RO27:48C6 00               nop  
 RO27:48C7 02               ld   (bc),a
 RO27:48C8 01 05 03         ld   bc,0305
 RO27:48CB 17               rla  
 RO27:48CC 0F               rrca 
 RO27:48CD 5F               ld   e,a
 RO27:48CE 3F               ccf  
 RO27:48CF FF               rst  38
 RO27:48D0 FF               rst  38
 RO27:48D1 FF               rst  38
 RO27:48D2 CF               rst  08
 RO27:48D3 EF               rst  28
 RO27:48D4 DF               rst  18
 RO27:48D5 BF               cp   a
 RO27:48D6 7F               ld   a,a
 RO27:48D7 FF               rst  38
 RO27:48D8 FF               rst  38
 RO27:48D9 FF               rst  38
 RO27:48DA FF               rst  38
 RO27:48DB FF               rst  38
 RO27:48DC FF               rst  38
 RO27:48DD FF               rst  38
 RO27:48DE FF               rst  38
 RO27:48DF FF               rst  38
 RO27:48E0 FF               rst  38
 RO27:48E1 FF               rst  38
 RO27:48E2 FF               rst  38
 RO27:48E3 FF               rst  38
 RO27:48E4 FF               rst  38
 RO27:48E5 FF               rst  38
 RO27:48E6 FE FF            cp   a,FF
 RO27:48E8 FE FF            cp   a,FF
 RO27:48EA FE FF            cp   a,FF
 RO27:48EC FE FF            cp   a,FF
 RO27:48EE FE FF            cp   a,FF
 RO27:48F0 FE FF            cp   a,FF
 RO27:48F2 FE FF            cp   a,FF
 RO27:48F4 FE 9C            cp   a,9C
 RO27:48F6 7E               ld   a,(hl)
 RO27:48F7 80               add  b
 RO27:48F8 00               nop  
 RO27:48F9 C0               ret  nz
 RO27:48FA 00               nop  
 RO27:48FB 6C               ld   l,h
 RO27:48FC 00               nop  
 RO27:48FD 6C               ld   l,h
 RO27:48FE 00               nop  
 RO27:48FF 78               ld   a,b
 RO27:4900 00               nop  
 RO27:4901 70               ld   (hl),b
 RO27:4902 00               nop  
 RO27:4903 70               ld   (hl),b
 RO27:4904 00               nop  
 RO27:4905 FF               rst  38
 RO27:4906 00               nop  
 RO27:4907 7F               ld   a,a
 RO27:4908 00               nop  
 RO27:4909 7F               ld   a,a
 RO27:490A 00               nop  
 RO27:490B 7F               ld   a,a
 RO27:490C 00               nop  
 RO27:490D 7F               ld   a,a
 RO27:490E 00               nop  
 RO27:490F 7F               ld   a,a
 RO27:4910 00               nop  
 RO27:4911 7F               ld   a,a
 RO27:4912 00               nop  
 RO27:4913 7F               ld   a,a
 RO27:4914 00               nop  
 RO27:4915 00               nop  
 RO27:4916 00               nop  
 RO27:4917 00               nop  
 RO27:4918 00               nop  
 RO27:4919 00               nop  
 RO27:491A 00               nop  
 RO27:491B 00               nop  
 RO27:491C 00               nop  
 RO27:491D 00               nop  
 RO27:491E 00               nop  
 RO27:491F 00               nop  
 RO27:4920 00               nop  
 RO27:4921 00               nop  
 RO27:4922 00               nop  
 RO27:4923 00               nop  
 RO27:4924 00               nop  
 RO27:4925 00               nop  
 RO27:4926 00               nop  
 RO27:4927 32               ldd  (hl),a
 RO27:4928 0D               dec  c
 RO27:4929 01 00 00         ld   bc,0000
 RO27:492C 00               nop  
 RO27:492D 00               nop  
 RO27:492E 00               nop  
 RO27:492F 00               nop  
 RO27:4930 00               nop  
 RO27:4931 00               nop  
 RO27:4932 00               nop  
 RO27:4933 00               nop  
 RO27:4934 00               nop  
 RO27:4935 09               add  hl,bc
 RO27:4936 06 3E            ld   b,3E
 RO27:4938 C0               ret  nz
 RO27:4939 C4 03 07         call nz,0703
 RO27:493C 00               nop  
 RO27:493D 00               nop  
 RO27:493E 00               nop  
 RO27:493F 00               nop  
 RO27:4940 00               nop  
 RO27:4941 00               nop  
 RO27:4942 00               nop  
 RO27:4943 00               nop  
 RO27:4944 00               nop  
 RO27:4945 18 07            jr   494E
 RO27:4947 00               nop  
 RO27:4948 0F               rrca 
 RO27:4949 7F               ld   a,a
 RO27:494A 80               add  b
 RO27:494B EF               rst  28
 RO27:494C 1E 3F            ld   e,3F
 RO27:494E 1F               rra  
 RO27:494F 3F               ccf  
 RO27:4950 1F               rra  
 RO27:4951 3F               ccf  
 RO27:4952 1F               rra  
 RO27:4953 83               add  e
 RO27:4954 3F               ccf  
 RO27:4955 00               nop  
 RO27:4956 FF               rst  38
 RO27:4957 00               nop  
 RO27:4958 FF               rst  38
 RO27:4959 80               add  b
 RO27:495A 7F               ld   a,a
 RO27:495B FF               rst  38
 RO27:495C 00               nop  
 RO27:495D FF               rst  38
 RO27:495E F0 FF            ld   a,(ff00+FF)
 RO27:4960 FF               rst  38
 RO27:4961 FF               rst  38
 RO27:4962 FE FD            cp   a,FD
 RO27:4964 FC               -    
 RO27:4965 FF               rst  38
 RO27:4966 FE FF            cp   a,FF
 RO27:4968 FE FE            cp   a,FE
 RO27:496A FE FC            cp   a,FC
 RO27:496C FE FE            cp   a,FE
 RO27:496E 00               nop  
 RO27:496F 80               add  b
 RO27:4970 00               nop  
 RO27:4971 60               ld   h,b
 RO27:4972 00               nop  
 RO27:4973 F8 00            ld   hl,sp+00
 RO27:4975 0C               inc  c
 RO27:4976 00               nop  
 RO27:4977 00               nop  
 RO27:4978 00               nop  
 RO27:4979 00               nop  
 RO27:497A 00               nop  
 RO27:497B 00               nop  
 RO27:497C 00               nop  
 RO27:497D 00               nop  
 RO27:497E 00               nop  
 RO27:497F 00               nop  
 RO27:4980 00               nop  
 RO27:4981 00               nop  
 RO27:4982 00               nop  
 RO27:4983 00               nop  
 RO27:4984 00               nop  
 RO27:4985 2F               cpl  
 RO27:4986 1F               rra  
 RO27:4987 3F               ccf  
 RO27:4988 7F               ld   a,a
 RO27:4989 7F               ld   a,a
 RO27:498A 7F               ld   a,a
 RO27:498B 1B               dec  de
 RO27:498C 67               ld   h,a
 RO27:498D 72               ld   (hl),d
 RO27:498E 0D               dec  c
 RO27:498F 71               ld   (hl),c
 RO27:4990 0E 78            ld   c,78
 RO27:4992 07               rlca 
 RO27:4993 7C               ld   a,h
 RO27:4994 03               inc  bc
 RO27:4995 EF               rst  28
 RO27:4996 DF               rst  18
 RO27:4997 EF               rst  28
 RO27:4998 DF               rst  18
 RO27:4999 C0               ret  nz
 RO27:499A DF               rst  18
 RO27:499B C1               pop  bc
 RO27:499C C0               ret  nz
 RO27:499D 00               nop  
 RO27:499E FF               rst  38
 RO27:499F 00               nop  
 RO27:49A0 FF               rst  38
 RO27:49A1 E8 17            add  sp,17
 RO27:49A3 06 F8            ld   b,F8
 RO27:49A5 FF               rst  38
 RO27:49A6 FF               rst  38
 RO27:49A7 F7               rst  30
 RO27:49A8 FF               rst  38
 RO27:49A9 FF               rst  38
 RO27:49AA 07               rlca 
 RO27:49AB F9               ld   sp,hl
 RO27:49AC 07               rlca 
 RO27:49AD 3E C1            ld   a,C1
 RO27:49AF FF               rst  38
 RO27:49B0 00               nop  
 RO27:49B1 38 00            jr   c,49B3
 RO27:49B3 07               rlca 
 RO27:49B4 00               nop  
 RO27:49B5 FF               rst  38
 RO27:49B6 FF               rst  38
 RO27:49B7 FF               rst  38
 RO27:49B8 FF               rst  38
 RO27:49B9 FF               rst  38
 RO27:49BA FF               rst  38
 RO27:49BB 9F               sbc  a
 RO27:49BC FF               rst  38
 RO27:49BD 3D               dec  a
 RO27:49BE C3 C1 27         jp   27C1
 RO27:49C1 FF               rst  38
 RO27:49C2 07               rlca 
 RO27:49C3 FF               rst  38
 RO27:49C4 00               nop  
 RO27:49C5 FF               rst  38
 RO27:49C6 FF               rst  38
 RO27:49C7 FF               rst  38
 RO27:49C8 FF               rst  38
 RO27:49C9 FF               rst  38
 RO27:49CA FF               rst  38
 RO27:49CB FF               rst  38
 RO27:49CC FF               rst  38
 RO27:49CD FF               rst  38
 RO27:49CE FF               rst  38
 RO27:49CF FF               rst  38
 RO27:49D0 FF               rst  38
 RO27:49D1 FF               rst  38
 RO27:49D2 FF               rst  38
 RO27:49D3 9F               sbc  a
 RO27:49D4 7F               ld   a,a
 RO27:49D5 FF               rst  38
 RO27:49D6 FE FE            cp   a,FE
 RO27:49D8 FF               rst  38
 RO27:49D9 FE FF            cp   a,FF
 RO27:49DB FF               rst  38
 RO27:49DC FF               rst  38
 RO27:49DD FF               rst  38
 RO27:49DE FF               rst  38
 RO27:49DF FE FF            cp   a,FF
 RO27:49E1 FB               ei   
 RO27:49E2 FC               -    
 RO27:49E3 CD F2 7C         call 7CF2
 RO27:49E6 00               nop  
 RO27:49E7 6C               ld   l,h
 RO27:49E8 00               nop  
 RO27:49E9 2E 00            ld   l,00
 RO27:49EB B6               or   (hl)
 RO27:49EC 80               add  b
 RO27:49ED D3               -    
 RO27:49EE C0               ret  nz
 RO27:49EF EB               -    
 RO27:49F0 E0 7D            ld   (ff00+7D),a
 RO27:49F2 F0 C2            ld   a,(ff00+C2)
 RO27:49F4 38 3F            jr   c,4A35
 RO27:49F6 00               nop  
 RO27:49F7 03               inc  bc
 RO27:49F8 00               nop  
 RO27:49F9 00               nop  
 RO27:49FA 00               nop  
 RO27:49FB 08 70 70         ld   (7070),sp
 RO27:49FE 78               ld   a,b
 RO27:49FF 28 30            jr   z,4A31
 RO27:4A01 84               add  h
 RO27:4A02 00               nop  
 RO27:4A03 CA 00 FF         jp   z,FF00
 RO27:4A06 00               nop  
 RO27:4A07 FF               rst  38
 RO27:4A08 00               nop  
 RO27:4A09 7F               ld   a,a
 RO27:4A0A 00               nop  
 RO27:4A0B 03               inc  bc
 RO27:4A0C 00               nop  
 RO27:4A0D 48               ld   c,b
 RO27:4A0E 00               nop  
 RO27:4A0F A0               and  b
 RO27:4A10 00               nop  
 RO27:4A11 50               ld   d,b
 RO27:4A12 04               inc  b
 RO27:4A13 1A               ld   a,(de)
 RO27:4A14 00               nop  
 RO27:4A15 FF               rst  38
 RO27:4A16 00               nop  
 RO27:4A17 FF               rst  38
 RO27:4A18 00               nop  
 RO27:4A19 FF               rst  38
 RO27:4A1A 00               nop  
 RO27:4A1B FF               rst  38
 RO27:4A1C 00               nop  
 RO27:4A1D 1F               rra  
 RO27:4A1E 00               nop  
 RO27:4A1F 00               nop  
 RO27:4A20 00               nop  
 RO27:4A21 00               nop  
 RO27:4A22 00               nop  
 RO27:4A23 00               nop  
 RO27:4A24 00               nop  
 RO27:4A25 FF               rst  38
 RO27:4A26 00               nop  
 RO27:4A27 FF               rst  38
 RO27:4A28 00               nop  
 RO27:4A29 FE 01            cp   a,01
 RO27:4A2B FD               -    
 RO27:4A2C 02               ld   (bc),a
 RO27:4A2D FE 01            cp   a,01
 RO27:4A2F FC               -    
 RO27:4A30 03               inc  bc
 RO27:4A31 0F               rrca 
 RO27:4A32 00               nop  
 RO27:4A33 01 02 5F         ld   bc,5F02
 RO27:4A36 BF               cp   a
 RO27:4A37 85               add  l
 RO27:4A38 03               inc  bc
 RO27:4A39 90               sub  b
 RO27:4A3A 08 0A 94         ld   (940A),sp
 RO27:4A3D AC               xor  h
 RO27:4A3E 12               ld   (de),a
 RO27:4A3F FA 04 7C         ld   a,(7C04)
 RO27:4A42 02               ld   (bc),a
 RO27:4A43 6E               ld   l,(hl)
 RO27:4A44 10 F9            <corrupted stop>
 RO27:4A46 FD               -    
 RO27:4A47 F1               pop  af
 RO27:4A48 F8 B9            ld   hl,sp+B9
 RO27:4A4A 00               nop  
 RO27:4A4B F1               pop  af
 RO27:4A4C 00               nop  
 RO27:4A4D 7D               ld   a,l
 RO27:4A4E 80               add  b
 RO27:4A4F BD               cp   l
 RO27:4A50 40               ld   b,b
 RO27:4A51 ED               -    
 RO27:4A52 10 D5            <corrupted stop>
 RO27:4A54 28 7C            jr   z,4AD2
 RO27:4A56 00               nop  
 RO27:4A57 FF               rst  38
 RO27:4A58 00               nop  
 RO27:4A59 FF               rst  38
 RO27:4A5A 00               nop  
 RO27:4A5B FF               rst  38
 RO27:4A5C 00               nop  
 RO27:4A5D FF               rst  38
 RO27:4A5E 00               nop  
 RO27:4A5F FF               rst  38
 RO27:4A60 00               nop  
 RO27:4A61 FF               rst  38
 RO27:4A62 00               nop  
 RO27:4A63 FF               rst  38
 RO27:4A64 00               nop  
 RO27:4A65 00               nop  
 RO27:4A66 00               nop  
 RO27:4A67 00               nop  
 RO27:4A68 00               nop  
 RO27:4A69 03               inc  bc
 RO27:4A6A C0               ret  nz
 RO27:4A6B 00               nop  
 RO27:4A6C E0 00            ld   (ff00+00),a
 RO27:4A6E F8 00            ld   hl,sp+00
 RO27:4A70 FC               -    
 RO27:4A71 00               nop  
 RO27:4A72 FE 00            cp   a,00
 RO27:4A74 FF               rst  38
 RO27:4A75 03               inc  bc
 RO27:4A76 7F               ld   a,a
 RO27:4A77 01 7F 00         ld   bc,007F
 RO27:4A7A 7F               ld   a,a
 RO27:4A7B 00               nop  
 RO27:4A7C 1F               rra  
 RO27:4A7D 08 07 04         ld   (0407),sp
 RO27:4A80 03               inc  bc
 RO27:4A81 02               ld   (bc),a
 RO27:4A82 01 01 00         ld   bc,0001
 RO27:4A85 CF               rst  08
 RO27:4A86 FF               rst  38
 RO27:4A87 BF               cp   a
 RO27:4A88 FF               rst  38
 RO27:4A89 FF               rst  38
 RO27:4A8A 0F               rrca 
 RO27:4A8B 0B               dec  bc
 RO27:4A8C 07               rlca 
 RO27:4A8D 0F               rrca 
 RO27:4A8E 01 01 01         ld   bc,0101
 RO27:4A91 03               inc  bc
 RO27:4A92 11 05 3B         ld   de,3B05
 RO27:4A95 85               add  l
 RO27:4A96 83               add  e
 RO27:4A97 FF               rst  38
 RO27:4A98 FD               -    
 RO27:4A99 79               ld   a,c
 RO27:4A9A FE 20            cp   a,20
 RO27:4A9C C0               ret  nz
 RO27:4A9D AE               xor  (hl)
 RO27:4A9E C1               pop  bc
 RO27:4A9F FF               rst  38
 RO27:4AA0 FF               rst  38
 RO27:4AA1 FF               rst  38
 RO27:4AA2 FF               rst  38
 RO27:4AA3 FF               rst  38
 RO27:4AA4 FF               rst  38
 RO27:4AA5 FF               rst  38
 RO27:4AA6 01 E7 FF         ld   bc,FFE7
 RO27:4AA9 F2               ld   a,(ff00+c)
 RO27:4AAA 1C               inc  e
 RO27:4AAB BF               cp   a
 RO27:4AAC 7F               ld   a,a
 RO27:4AAD BF               cp   a
 RO27:4AAE DF               rst  18
 RO27:4AAF DF               rst  18
 RO27:4AB0 EF               rst  28
 RO27:4AB1 EF               rst  28
 RO27:4AB2 F7               rst  30
 RO27:4AB3 F6 F9            or   a,F9
 RO27:4AB5 DF               rst  18
 RO27:4AB6 07               rlca 
 RO27:4AB7 0F               rrca 
 RO27:4AB8 E1               pop  hl
 RO27:4AB9 43               ld   b,e
 RO27:4ABA 31 06 F9         ld   sp,F906
 RO27:4ABD 01 FE 12         ld   bc,12FE
 RO27:4AC0 EC               -    
 RO27:4AC1 1C               inc  e
 RO27:4AC2 E0 08            ld   (ff00+08),a
 RO27:4AC4 F0 FF            ld   a,(ff00+FF)
 RO27:4AC6 FF               rst  38
 RO27:4AC7 FF               rst  38
 RO27:4AC8 FF               rst  38
 RO27:4AC9 FF               rst  38
 RO27:4ACA FF               rst  38
 RO27:4ACB FF               rst  38
 RO27:4ACC FF               rst  38
 RO27:4ACD FF               rst  38
 RO27:4ACE FF               rst  38
 RO27:4ACF 7F               ld   a,a
 RO27:4AD0 FF               rst  38
 RO27:4AD1 E3               -    
 RO27:4AD2 7F               ld   a,a
 RO27:4AD3 DA 7D FF         jp   c,FF7D
 RO27:4AD6 FF               rst  38
 RO27:4AD7 FF               rst  38
 RO27:4AD8 FF               rst  38
 RO27:4AD9 FF               rst  38
 RO27:4ADA FF               rst  38
 RO27:4ADB FF               rst  38
 RO27:4ADC FF               rst  38
 RO27:4ADD FF               rst  38
 RO27:4ADE FF               rst  38
 RO27:4ADF FF               rst  38
 RO27:4AE0 FF               rst  38
 RO27:4AE1 FF               rst  38
 RO27:4AE2 FF               rst  38
 RO27:4AE3 7F               ld   a,a
 RO27:4AE4 FF               rst  38
 RO27:4AE5 FF               rst  38
 RO27:4AE6 FF               rst  38
 RO27:4AE7 FF               rst  38
 RO27:4AE8 FF               rst  38
 RO27:4AE9 FF               rst  38
 RO27:4AEA FF               rst  38
 RO27:4AEB FF               rst  38
 RO27:4AEC FF               rst  38
 RO27:4AED FF               rst  38
 RO27:4AEE FF               rst  38
 RO27:4AEF FF               rst  38
 RO27:4AF0 FF               rst  38
 RO27:4AF1 FF               rst  38
 RO27:4AF2 FF               rst  38
 RO27:4AF3 EE F1            xor  a,F1
 RO27:4AF5 E7               rst  20
 RO27:4AF6 1F               rra  
 RO27:4AF7 9B               sbc  e
 RO27:4AF8 64               ld   h,h
 RO27:4AF9 7D               ld   a,l
 RO27:4AFA 82               add  d
 RO27:4AFB 18 E7            jr   4AE4
 RO27:4AFD C0               ret  nz
 RO27:4AFE BF               cp   a
 RO27:4AFF C4 FB 1E         call nz,1EFB
 RO27:4B02 E7               rst  20
 RO27:4B03 0E FF            ld   c,FF
 RO27:4B05 1C               inc  e
 RO27:4B06 E7               rst  20
 RO27:4B07 EE 15            xor  a,15
 RO27:4B09 80               add  b
 RO27:4B0A 7F               ld   a,a
 RO27:4B0B 00               nop  
 RO27:4B0C FF               rst  38
 RO27:4B0D 29               add  hl,hl
 RO27:4B0E D6 F7            sub  a,F7
 RO27:4B10 E8 79            add  sp,79
 RO27:4B12 FE 7C            cp   a,7C
 RO27:4B14 B3               or   e
 RO27:4B15 38 C4            jr   c,4ADB
 RO27:4B17 2C               inc  l
 RO27:4B18 D2 CE 31         jp   nc,31CE
 RO27:4B1B FB               ei   
 RO27:4B1C 7D               ld   a,l
 RO27:4B1D DF               rst  18
 RO27:4B1E E0 3F            ld   (ff00+3F),a
 RO27:4B20 C0               ret  nz
 RO27:4B21 FF               rst  38
 RO27:4B22 20 0D            jr   nz,4B31
 RO27:4B24 F0 04            ld   a,(ff00+04)
 RO27:4B26 00               nop  
 RO27:4B27 0C               inc  c
 RO27:4B28 01 06 01         ld   bc,0106
 RO27:4B2B 02               ld   (bc),a
 RO27:4B2C 08 2D 80         ld   (802D),sp
 RO27:4B2F 04               inc  b
 RO27:4B30 92               sub  d
 RO27:4B31 04               inc  b
 RO27:4B32 FB               ei   
 RO27:4B33 00               nop  
 RO27:4B34 D7               rst  10
 RO27:4B35 E0 00            ld   (ff00+00),a
 RO27:4B37 44               ld   b,h
 RO27:4B38 10 81            <corrupted stop>
 RO27:4B3A 2A               ldi  a,(hl)
 RO27:4B3B C6 10            add  a,10
 RO27:4B3D 6A               ld   l,d
 RO27:4B3E 14               inc  d
 RO27:4B3F D1               pop  de
 RO27:4B40 2E A9            ld   l,A9
 RO27:4B42 56               ld   d,(hl)
 RO27:4B43 55               ld   d,l
 RO27:4B44 AA               xor  d
 RO27:4B45 00               nop  
 RO27:4B46 00               nop  
 RO27:4B47 48               ld   c,b
 RO27:4B48 00               nop  
 RO27:4B49 04               inc  b
 RO27:4B4A 10 00            stop
 RO27:4B4C 28 C8            jr   z,4B16
 RO27:4B4E 10 A8            <corrupted stop>
 RO27:4B50 40               ld   b,b
 RO27:4B51 F6 00            or   a,00
 RO27:4B53 EA 10 07         ld   (0710),a
 RO27:4B56 00               nop  
 RO27:4B57 07               rlca 
 RO27:4B58 00               nop  
 RO27:4B59 07               rlca 
 RO27:4B5A 00               nop  
 RO27:4B5B 07               rlca 
 RO27:4B5C 00               nop  
 RO27:4B5D 07               rlca 
 RO27:4B5E 00               nop  
 RO27:4B5F 03               inc  bc
 RO27:4B60 00               nop  
 RO27:4B61 00               nop  
 RO27:4B62 00               nop  
 RO27:4B63 00               nop  
 RO27:4B64 00               nop  
 RO27:4B65 6B               ld   l,e
 RO27:4B66 14               inc  d
 RO27:4B67 F3               di   
 RO27:4B68 0C               inc  c
 RO27:4B69 69               ld   l,c
 RO27:4B6A 16 73            ld   d,73
 RO27:4B6C 0C               inc  c
 RO27:4B6D 75               ld   (hl),l
 RO27:4B6E 0A               ld   a,(bc)
 RO27:4B6F 3B               dec  sp
 RO27:4B70 04               inc  b
 RO27:4B71 3F               ccf  
 RO27:4B72 00               nop  
 RO27:4B73 23               inc  hl
 RO27:4B74 00               nop  
 RO27:4B75 31 CC 4D         ld   sp,4DCC
 RO27:4B78 B0               or   b
 RO27:4B79 9D               sbc  l
 RO27:4B7A 60               ld   h,b
 RO27:4B7B FC               -    
 RO27:4B7C 00               nop  
 RO27:4B7D 7E               ld   a,(hl)
 RO27:4B7E 00               nop  
 RO27:4B7F 7C               ld   a,h
 RO27:4B80 02               ld   (bc),a
 RO27:4B81 6E               ld   l,(hl)
 RO27:4B82 00               nop  
 RO27:4B83 80               add  b
 RO27:4B84 00               nop  
 RO27:4B85 00               nop  
 RO27:4B86 FF               rst  38
 RO27:4B87 00               nop  
 RO27:4B88 FF               rst  38
 RO27:4B89 06 F9            ld   b,F9
 RO27:4B8B 86               add  (hl)
 RO27:4B8C 79               ld   a,c
 RO27:4B8D 26 19            ld   h,19
 RO27:4B8F 08 07 1A         ld   (1A07),sp
 RO27:4B92 01 6F 10         ld   bc,106F
 RO27:4B95 FF               rst  38
 RO27:4B96 00               nop  
 RO27:4B97 FB               ei   
 RO27:4B98 04               inc  b
 RO27:4B99 F5               push af
 RO27:4B9A 0A               ld   a,(bc)
 RO27:4B9B FB               ei   
 RO27:4B9C 04               inc  b
 RO27:4B9D ED               -    
 RO27:4B9E 12               ld   (de),a
 RO27:4B9F D6 29            sub  a,29
 RO27:4BA1 6C               ld   l,h
 RO27:4BA2 93               sub  e
 RO27:4BA3 D0               ret  nc
 RO27:4BA4 2F               cpl  
 RO27:4BA5 20 C0            jr   nz,4B67
 RO27:4BA7 17               rla  
 RO27:4BA8 E0 0B            ld   (ff00+0B),a
 RO27:4BAA F0 27            ld   a,(ff00+27)
 RO27:4BAC F8 51            ld   hl,sp+51
 RO27:4BAE FE BD            cp   a,BD
 RO27:4BB0 FE FA            cp   a,FA
 RO27:4BB2 FF               rst  38
 RO27:4BB3 F4               -    
 RO27:4BB4 FF               rst  38
 RO27:4BB5 03               inc  bc
 RO27:4BB6 3C               inc  a
 RO27:4BB7 32               ldd  (hl),a
 RO27:4BB8 0D               dec  c
 RO27:4BB9 0E 01            ld   c,01
 RO27:4BBB 04               inc  b
 RO27:4BBC 03               inc  bc
 RO27:4BBD 00               nop  
 RO27:4BBE 01 00 00         ld   bc,0000
 RO27:4BC1 00               nop  
 RO27:4BC2 00               nop  
 RO27:4BC3 00               nop  
 RO27:4BC4 00               nop  
 RO27:4BC5 F0 FF            ld   a,(ff00+FF)
 RO27:4BC7 F0 FF            ld   a,(ff00+FF)
 RO27:4BC9 E0 FF            ld   (ff00+FF),a
 RO27:4BCB E2               ld   (ff00+c),a
 RO27:4BCC FF               rst  38
 RO27:4BCD C5               push bc
 RO27:4BCE FF               rst  38
 RO27:4BCF 52               ld   d,d
 RO27:4BD0 FF               rst  38
 RO27:4BD1 38 07            jr   c,4BDA
 RO27:4BD3 00               nop  
 RO27:4BD4 00               nop  
 RO27:4BD5 7F               ld   a,a
 RO27:4BD6 FC               -    
 RO27:4BD7 01 FE 00         ld   bc,00FE
 RO27:4BDA FF               rst  38
 RO27:4BDB 04               inc  b
 RO27:4BDC FF               rst  38
 RO27:4BDD 0F               rrca 
 RO27:4BDE FF               rst  38
 RO27:4BDF 17               rla  
 RO27:4BE0 FE 0F            cp   a,0F
 RO27:4BE2 FC               -    
 RO27:4BE3 AE               xor  (hl)
 RO27:4BE4 78               ld   a,b
 RO27:4BE5 1F               rra  
 RO27:4BE6 E7               rst  20
 RO27:4BE7 88               adc  b
 RO27:4BE8 07               rlca 
 RO27:4BE9 9F               sbc  a
 RO27:4BEA 00               nop  
 RO27:4BEB 80               add  b
 RO27:4BEC 00               nop  
 RO27:4BED 00               nop  
 RO27:4BEE 00               nop  
 RO27:4BEF 00               nop  
 RO27:4BF0 00               nop  
 RO27:4BF1 00               nop  
 RO27:4BF2 00               nop  
 RO27:4BF3 00               nop  
 RO27:4BF4 00               nop  
 RO27:4BF5 FF               rst  38
 RO27:4BF6 C0               ret  nz
 RO27:4BF7 E0 00            ld   (ff00+00),a
 RO27:4BF9 00               nop  
 RO27:4BFA FF               rst  38
 RO27:4BFB FF               rst  38
 RO27:4BFC 1F               rra  
 RO27:4BFD F7               rst  30
 RO27:4BFE 0F               rrca 
 RO27:4BFF 8D               adc  l
 RO27:4C00 73               ld   (hl),e
 RO27:4C01 80               add  b
 RO27:4C02 7F               ld   a,a
 RO27:4C03 80               add  b
 RO27:4C04 7C               ld   a,h
 RO27:4C05 80               add  b
 RO27:4C06 7F               ld   a,a
 RO27:4C07 FC               -    
 RO27:4C08 00               nop  
 RO27:4C09 FF               rst  38
 RO27:4C0A FF               rst  38
 RO27:4C0B FF               rst  38
 RO27:4C0C FF               rst  38
 RO27:4C0D FF               rst  38
 RO27:4C0E FF               rst  38
 RO27:4C0F FF               rst  38
 RO27:4C10 FF               rst  38
 RO27:4C11 FF               rst  38
 RO27:4C12 FF               rst  38
 RO27:4C13 03               inc  bc
 RO27:4C14 FF               rst  38
 RO27:4C15 00               nop  
 RO27:4C16 FC               -    
 RO27:4C17 01 00 FF         ld   bc,FF00
 RO27:4C1A FF               rst  38
 RO27:4C1B FF               rst  38
 RO27:4C1C FF               rst  38
 RO27:4C1D FF               rst  38
 RO27:4C1E FF               rst  38
 RO27:4C1F FF               rst  38
 RO27:4C20 FF               rst  38
 RO27:4C21 FF               rst  38
 RO27:4C22 FF               rst  38
 RO27:4C23 FF               rst  38
 RO27:4C24 FF               rst  38
 RO27:4C25 FF               rst  38
 RO27:4C26 FF               rst  38
 RO27:4C27 FF               rst  38
 RO27:4C28 FF               rst  38
 RO27:4C29 FF               rst  38
 RO27:4C2A FF               rst  38
 RO27:4C2B FF               rst  38
 RO27:4C2C FF               rst  38
 RO27:4C2D FF               rst  38
 RO27:4C2E FF               rst  38
 RO27:4C2F FF               rst  38
 RO27:4C30 FF               rst  38
 RO27:4C31 F1               pop  af
 RO27:4C32 FF               rst  38
 RO27:4C33 00               nop  
 RO27:4C34 FF               rst  38
 RO27:4C35 01 FF 07         ld   bc,07FF
 RO27:4C38 F9               ld   sp,hl
 RO27:4C39 7F               ld   a,a
 RO27:4C3A 81               add  c
 RO27:4C3B FF               rst  38
 RO27:4C3C 03               inc  bc
 RO27:4C3D FF               rst  38
 RO27:4C3E 07               rlca 
 RO27:4C3F EF               rst  28
 RO27:4C40 1E 1C            ld   e,1C
 RO27:4C42 FF               rst  38
 RO27:4C43 73               ld   (hl),e
 RO27:4C44 FF               rst  38
 RO27:4C45 3F               ccf  
 RO27:4C46 CF               rst  08
 RO27:4C47 3F               ccf  
 RO27:4C48 FF               rst  38
 RO27:4C49 FB               ei   
 RO27:4C4A FF               rst  38
 RO27:4C4B EF               rst  28
 RO27:4C4C DF               rst  18
 RO27:4C4D 43               ld   b,e
 RO27:4C4E BF               cp   a
 RO27:4C4F 00               nop  
 RO27:4C50 FF               rst  38
 RO27:4C51 EC               -    
 RO27:4C52 FF               rst  38
 RO27:4C53 C1               pop  bc
 RO27:4C54 BE               cp   (hl)
 RO27:4C55 FB               ei   
 RO27:4C56 E0 F1            ld   (ff00+F1),a
 RO27:4C58 D0               ret  nc
 RO27:4C59 F8 C0            ld   hl,sp+C0
 RO27:4C5B 8C               adc  h
 RO27:4C5C F1               pop  af
 RO27:4C5D 61               ld   h,c
 RO27:4C5E FE C7            cp   a,C7
 RO27:4C60 FB               ei   
 RO27:4C61 33               inc  sp
 RO27:4C62 CF               rst  08
 RO27:4C63 C0               ret  nz
 RO27:4C64 3F               ccf  
 RO27:4C65 09               add  hl,bc
 RO27:4C66 E6 00            and  a,00
 RO27:4C68 2E 00            ld   l,00
 RO27:4C6A F4               -    
 RO27:4C6B 00               nop  
 RO27:4C6C 21 C3 EF         ld   hl,EFC3
 RO27:4C6F ED               -    
 RO27:4C70 FF               rst  38
 RO27:4C71 F7               rst  30
 RO27:4C72 FF               rst  38
 RO27:4C73 BE               cp   (hl)
 RO27:4C74 FF               rst  38
 RO27:4C75 3A               ldd  a,(hl)
 RO27:4C76 45               ld   b,l
 RO27:4C77 01 9E 00         ld   bc,009E
 RO27:4C7A 4F               ld   c,a
 RO27:4C7B 02               ld   (bc),a
 RO27:4C7C F4               -    
 RO27:4C7D B0               or   b
 RO27:4C7E F8 3B            ld   hl,sp+3B
 RO27:4C80 FC               -    
 RO27:4C81 98               sbc  b
 RO27:4C82 FF               rst  38
 RO27:4C83 40               ld   b,b
 RO27:4C84 BF               cp   a
 RO27:4C85 6B               ld   l,e
 RO27:4C86 90               sub  b
 RO27:4C87 7B               ld   a,e
 RO27:4C88 84               add  h
 RO27:4C89 C4 00 02         call nz,0200
 RO27:4C8C 00               nop  
 RO27:4C8D 70               ld   (hl),b
 RO27:4C8E 00               nop  
 RO27:4C8F C7               rst  00
 RO27:4C90 38 01            jr   c,4C93
 RO27:4C92 FE 00            cp   a,00
 RO27:4C94 FF               rst  38
 RO27:4C95 00               nop  
 RO27:4C96 00               nop  
 RO27:4C97 00               nop  
 RO27:4C98 00               nop  
 RO27:4C99 00               nop  
 RO27:4C9A 00               nop  
 RO27:4C9B 00               nop  
 RO27:4C9C 00               nop  
 RO27:4C9D 00               nop  
 RO27:4C9E 00               nop  
 RO27:4C9F 1C               inc  e
 RO27:4CA0 00               nop  
 RO27:4CA1 FF               rst  38
 RO27:4CA2 00               nop  
 RO27:4CA3 71               ld   (hl),c
 RO27:4CA4 8E               adc  (hl)
 RO27:4CA5 03               inc  bc
 RO27:4CA6 00               nop  
 RO27:4CA7 00               nop  
 RO27:4CA8 00               nop  
 RO27:4CA9 00               nop  
 RO27:4CAA 00               nop  
 RO27:4CAB 00               nop  
 RO27:4CAC 00               nop  
 RO27:4CAD 00               nop  
 RO27:4CAE 00               nop  
 RO27:4CAF 00               nop  
 RO27:4CB0 00               nop  
 RO27:4CB1 C0               ret  nz
 RO27:4CB2 38 FF            jr   c,4CB3
 RO27:4CB4 00               nop  
 RO27:4CB5 80               add  b
 RO27:4CB6 00               nop  
 RO27:4CB7 00               nop  
 RO27:4CB8 01 00 00         ld   bc,0000
 RO27:4CBB 01 00 00         ld   bc,0000
 RO27:4CBE 00               nop  
 RO27:4CBF 00               nop  
 RO27:4CC0 00               nop  
 RO27:4CC1 00               nop  
 RO27:4CC2 00               nop  
 RO27:4CC3 80               add  b
 RO27:4CC4 00               nop  
 RO27:4CC5 50               ld   d,b
 RO27:4CC6 20 D0            jr   nz,4C98
 RO27:4CC8 20 F1            jr   nz,4CBB
 RO27:4CCA 08 32 88         ld   (8832),sp
 RO27:4CCD 65               ld   h,l
 RO27:4CCE 00               nop  
 RO27:4CCF 22               ldi  (hl),a
 RO27:4CD0 40               ld   b,b
 RO27:4CD1 35               dec  (hl)
 RO27:4CD2 00               nop  
 RO27:4CD3 1B               dec  de
 RO27:4CD4 20 17            jr   nz,4CED
 RO27:4CD6 3F               ccf  
 RO27:4CD7 EB               -    
 RO27:4CD8 1F               rra  
 RO27:4CD9 F7               rst  30
 RO27:4CDA 1F               rra  
 RO27:4CDB E7               rst  20
 RO27:4CDC 5F               ld   e,a
 RO27:4CDD BF               cp   a
 RO27:4CDE 0F               rrca 
 RO27:4CDF 7E               ld   a,(hl)
 RO27:4CE0 1E FD            ld   e,FD
 RO27:4CE2 2F               cpl  
 RO27:4CE3 D6 16            sub  a,16
 RO27:4CE5 41               ld   b,c
 RO27:4CE6 FE AA            cp   a,AA
 RO27:4CE8 FF               rst  38
 RO27:4CE9 70               ld   (hl),b
 RO27:4CEA FE 28            cp   a,28
 RO27:4CEC FF               rst  38
 RO27:4CED 90               sub  b
 RO27:4CEE FD               -    
 RO27:4CEF 40               ld   b,b
 RO27:4CF0 FB               ei   
 RO27:4CF1 00               nop  
 RO27:4CF2 B5               or   l
 RO27:4CF3 00               nop  
 RO27:4CF4 DA 00 00         jp   c,0000
 RO27:4CF7 08 14 35         ld   (3514),sp
 RO27:4CFA 4A               ld   c,d
 RO27:4CFB 43               ld   b,e
 RO27:4CFC BC               cp   h
 RO27:4CFD 84               add  h
 RO27:4CFE 78               ld   a,b
 RO27:4CFF 0C               inc  c
 RO27:4D00 F2               ld   a,(ff00+c)
 RO27:4D01 84               add  h
 RO27:4D02 79               ld   a,c
 RO27:4D03 48               ld   c,b
 RO27:4D04 B4               or   h
 RO27:4D05 07               rlca 
 RO27:4D06 00               nop  
 RO27:4D07 13               inc  de
 RO27:4D08 24               inc  h
 RO27:4D09 8E               adc  (hl)
 RO27:4D0A 71               ld   (hl),c
 RO27:4D0B D4 23 A8         call nc,A823
 RO27:4D0E 07               rlca 
 RO27:4D0F 04               inc  b
 RO27:4D10 93               sub  e
 RO27:4D11 02               ld   (bc),a
 RO27:4D12 2D               dec  l
 RO27:4D13 03               inc  bc
 RO27:4D14 94               sub  h
 RO27:4D15 00               nop  
 RO27:4D16 00               nop  
 RO27:4D17 00               nop  
 RO27:4D18 00               nop  
 RO27:4D19 00               nop  
 RO27:4D1A FF               rst  38
 RO27:4D1B FF               rst  38
 RO27:4D1C FF               rst  38
 RO27:4D1D FF               rst  38
 RO27:4D1E FF               rst  38
 RO27:4D1F FF               rst  38
 RO27:4D20 FF               rst  38
 RO27:4D21 FF               rst  38
 RO27:4D22 FF               rst  38
 RO27:4D23 FF               rst  38
 RO27:4D24 FF               rst  38
 RO27:4D25 00               nop  
 RO27:4D26 00               nop  
 RO27:4D27 01 00 1F         ld   bc,1F00
 RO27:4D2A E0 E0            ld   (ff00+E0),a
 RO27:4D2C FF               rst  38
 RO27:4D2D FF               rst  38
 RO27:4D2E FF               rst  38
 RO27:4D2F FF               rst  38
 RO27:4D30 FF               rst  38
 RO27:4D31 FF               rst  38
 RO27:4D32 FF               rst  38
 RO27:4D33 FF               rst  38
 RO27:4D34 FF               rst  38
 RO27:4D35 BF               cp   a
 RO27:4D36 7F               ld   a,a
 RO27:4D37 BF               cp   a
 RO27:4D38 7F               ld   a,a
 RO27:4D39 DE 3F            sbc  a,3F
 RO27:4D3B 78               ld   a,b
 RO27:4D3C 87               add  a
 RO27:4D3D EF               rst  28
 RO27:4D3E F0 FB            ld   a,(ff00+FB)
 RO27:4D40 FC               -    
 RO27:4D41 FE FF            cp   a,FF
 RO27:4D43 FE FF            cp   a,FF
 RO27:4D45 3F               ccf  
 RO27:4D46 FF               rst  38
 RO27:4D47 9F               sbc  a
 RO27:4D48 FF               rst  38
 RO27:4D49 0F               rrca 
 RO27:4D4A FF               rst  38
 RO27:4D4B 03               inc  bc
 RO27:4D4C FF               rst  38
 RO27:4D4D 7F               ld   a,a
 RO27:4D4E FF               rst  38
 RO27:4D4F BC               cp   h
 RO27:4D50 7F               ld   a,a
 RO27:4D51 EC               -    
 RO27:4D52 1F               rra  
 RO27:4D53 70               ld   (hl),b
 RO27:4D54 8E               adc  (hl)
 RO27:4D55 01 FF 02         ld   bc,02FF
 RO27:4D58 FF               rst  38
 RO27:4D59 21 FF 48         ld   hl,48FF
 RO27:4D5C FF               rst  38
 RO27:4D5D 7F               ld   a,a
 RO27:4D5E B6               or   (hl)
 RO27:4D5F FF               rst  38
 RO27:4D60 3D               dec  a
 RO27:4D61 FF               rst  38
 RO27:4D62 56               ld   d,(hl)
 RO27:4D63 FF               rst  38
 RO27:4D64 2F               cpl  
 RO27:4D65 52               ld   d,d
 RO27:4D66 FF               rst  38
 RO27:4D67 A8               xor  b
 RO27:4D68 FF               rst  38
 RO27:4D69 00               nop  
 RO27:4D6A FF               rst  38
 RO27:4D6B 77               ld   (hl),a
 RO27:4D6C C8               ret  z
 RO27:4D6D FF               rst  38
 RO27:4D6E A2               and  d
 RO27:4D6F FF               rst  38
 RO27:4D70 45               ld   b,l
 RO27:4D71 FF               rst  38
 RO27:4D72 D2 FF A8         jp   nc,A8FF
 RO27:4D75 F6 F9            or   a,F9
 RO27:4D77 7D               ld   a,l
 RO27:4D78 F3               di   
 RO27:4D79 23               inc  hl
 RO27:4D7A DF               rst  18
 RO27:4D7B 5F               ld   e,a
 RO27:4D7C AF               xor  a
 RO27:4D7D FF               rst  38
 RO27:4D7E 1F               rra  
 RO27:4D7F 5F               ld   e,a
 RO27:4D80 AF               xor  a
 RO27:4D81 31 CF 79         ld   sp,79CF
 RO27:4D84 C6 1F            add  a,1F
 RO27:4D86 F0 FF            ld   a,(ff00+FF)
 RO27:4D88 FC               -    
 RO27:4D89 FD               -    
 RO27:4D8A FE F9            cp   a,F9
 RO27:4D8C FE FB            cp   a,FB
 RO27:4D8E FC               -    
 RO27:4D8F E4               -    
 RO27:4D90 F8 FD            ld   hl,sp+FD
 RO27:4D92 C0               ret  nz
 RO27:4D93 E6 03            and  a,03
 RO27:4D95 D8               ret  c
 RO27:4D96 E7               rst  20
 RO27:4D97 36 FF            ld   (hl),FF
 RO27:4D99 7E               ld   a,(hl)
 RO27:4D9A 8D               adc  l
 RO27:4D9B FF               rst  38
 RO27:4D9C 01 7D A3         ld   bc,A37D
 RO27:4D9F F2               ld   a,(ff00+c)
 RO27:4DA0 0F               rrca 
 RO27:4DA1 2C               inc  l
 RO27:4DA2 FF               rst  38
 RO27:4DA3 19               add  hl,de
 RO27:4DA4 FE 47            cp   a,47
 RO27:4DA6 F8 45            ld   hl,sp+45
 RO27:4DA8 BE               cp   (hl)
 RO27:4DA9 C7               rst  00
 RO27:4DAA FF               rst  38
 RO27:4DAB C0               ret  nz
 RO27:4DAC FF               rst  38
 RO27:4DAD B0               or   b
 RO27:4DAE FF               rst  38
 RO27:4DAF 73               ld   (hl),e
 RO27:4DB0 FE C7            cp   a,C7
 RO27:4DB2 FF               rst  38
 RO27:4DB3 E7               rst  20
 RO27:4DB4 FF               rst  38
 RO27:4DB5 AD               xor  l
 RO27:4DB6 1F               rra  
 RO27:4DB7 D3               -    
 RO27:4DB8 3F               ccf  
 RO27:4DB9 E3               -    
 RO27:4DBA 7F               ld   a,a
 RO27:4DBB 47               ld   b,a
 RO27:4DBC BF               cp   a
 RO27:4DBD EE 1F            xor  a,1F
 RO27:4DBF E5               push hl
 RO27:4DC0 1B               dec  de
 RO27:4DC1 57               ld   d,a
 RO27:4DC2 A8               xor  b
 RO27:4DC3 2F               cpl  
 RO27:4DC4 D1               pop  de
 RO27:4DC5 FF               rst  38
 RO27:4DC6 A0               and  b
 RO27:4DC7 BC               cp   h
 RO27:4DC8 D2 83 FC         jp   nc,FC83
 RO27:4DCB CF               rst  08
 RO27:4DCC F0 6F            ld   a,(ff00+6F)
 RO27:4DCE F2               ld   a,(ff00+c)
 RO27:4DCF E7               rst  20
 RO27:4DD0 FC               -    
 RO27:4DD1 F7               rst  30
 RO27:4DD2 FE EB            cp   a,EB
 RO27:4DD4 F7               rst  30
 RO27:4DD5 F3               di   
 RO27:4DD6 0E 3F            ld   c,3F
 RO27:4DD8 04               inc  b
 RO27:4DD9 8E               adc  (hl)
 RO27:4DDA 71               ld   (hl),c
 RO27:4DDB 1F               rra  
 RO27:4DDC F3               di   
 RO27:4DDD 3C               inc  a
 RO27:4DDE C7               rst  00
 RO27:4DDF F6 0B            or   a,0B
 RO27:4DE1 FA 07 D3         ld   a,(D307)
 RO27:4DE4 AE               xor  (hl)
 RO27:4DE5 FF               rst  38
 RO27:4DE6 00               nop  
 RO27:4DE7 0F               rrca 
 RO27:4DE8 F0 92            ld   a,(ff00+92)
 RO27:4DEA FD               -    
 RO27:4DEB 21 FE 65         ld   hl,65FE
 RO27:4DEE FF               rst  38
 RO27:4DEF 99               sbc  c
 RO27:4DF0 FF               rst  38
 RO27:4DF1 02               ld   (bc),a
 RO27:4DF2 FF               rst  38
 RO27:4DF3 83               add  e
 RO27:4DF4 7F               ld   a,a
 RO27:4DF5 C0               ret  nz
 RO27:4DF6 00               nop  
 RO27:4DF7 F8 00            ld   hl,sp+00
 RO27:4DF9 A0               and  b
 RO27:4DFA 40               ld   b,b
 RO27:4DFB 5E               ld   e,(hl)
 RO27:4DFC A0               and  b
 RO27:4DFD CF               rst  08
 RO27:4DFE F0 F1            ld   a,(ff00+F1)
 RO27:4E00 FE 46            cp   a,46
 RO27:4E02 FF               rst  38
 RO27:4E03 1E FF            ld   e,FF
 RO27:4E05 1F               rra  
 RO27:4E06 00               nop  
 RO27:4E07 07               rlca 
 RO27:4E08 08 87 00         ld   (0087),sp
 RO27:4E0B C1               pop  bc
 RO27:4E0C 02               ld   (bc),a
 RO27:4E0D 33               inc  sp
 RO27:4E0E C0               ret  nz
 RO27:4E0F 5A               ld   e,d
 RO27:4E10 A0               and  b
 RO27:4E11 2C               inc  l
 RO27:4E12 D1               pop  de
 RO27:4E13 C0               ret  nz
 RO27:4E14 BC               cp   h
 RO27:4E15 C5               push bc
 RO27:4E16 45               ld   b,l
 RO27:4E17 E2               ld   (ff00+c),a
 RO27:4E18 B2               or   d
 RO27:4E19 53               ld   d,e
 RO27:4E1A 6F               ld   l,a
 RO27:4E1B 21 19 13         ld   hl,1319
 RO27:4E1E 2F               cpl  
 RO27:4E1F 05               dec  b
 RO27:4E20 D7               rst  10
 RO27:4E21 07               rlca 
 RO27:4E22 E8 00            add  sp,00
 RO27:4E24 BF               cp   a
 RO27:4E25 00               nop  
 RO27:4E26 7F               ld   a,a
 RO27:4E27 52               ld   d,d
 RO27:4E28 F6 24            or   a,24
 RO27:4E2A FF               rst  38
 RO27:4E2B 8A               adc  d
 RO27:4E2C FF               rst  38
 RO27:4E2D 5D               ld   e,l
 RO27:4E2E FF               rst  38
 RO27:4E2F 7A               ld   a,d
 RO27:4E30 BF               cp   a
 RO27:4E31 ED               -    
 RO27:4E32 7F               ld   a,a
 RO27:4E33 FF               rst  38
 RO27:4E34 FF               rst  38
 RO27:4E35 00               nop  
 RO27:4E36 25               dec  h
 RO27:4E37 10 DB            <corrupted stop>
 RO27:4E39 00               nop  
 RO27:4E3A BD               cp   l
 RO27:4E3B 00               nop  
 RO27:4E3C 6A               ld   l,d
 RO27:4E3D 00               nop  
 RO27:4E3E B4               or   h
 RO27:4E3F 20 FA            jr   nz,4E3B
 RO27:4E41 50               ld   d,b
 RO27:4E42 F0 25            ld   a,(ff00+25)
 RO27:4E44 FE 00            cp   a,00
 RO27:4E46 43               ld   b,e
 RO27:4E47 21 FB 52         ld   hl,52FB
 RO27:4E4A 77               ld   (hl),a
 RO27:4E4B 21 AF 12         ld   hl,12AF
 RO27:4E4E 47               ld   b,a
 RO27:4E4F 25               dec  h
 RO27:4E50 1F               rra  
 RO27:4E51 A6               and  (hl)
 RO27:4E52 7B               ld   a,e
 RO27:4E53 D0               ret  nc
 RO27:4E54 7F               ld   a,a
 RO27:4E55 4A               ld   c,d
 RO27:4E56 FF               rst  38
 RO27:4E57 A5               and  l
 RO27:4E58 FF               rst  38
 RO27:4E59 D2 FF EA         jp   nc,EAFF
 RO27:4E5C F7               rst  30
 RO27:4E5D B3               or   e
 RO27:4E5E 5E               ld   e,(hl)
 RO27:4E5F 7D               ld   a,l
 RO27:4E60 A9               xor  c
 RO27:4E61 BA               cp   d
 RO27:4E62 D4 FC 9B         call nc,9BFC
 RO27:4E65 3F               ccf  
 RO27:4E66 FF               rst  38
 RO27:4E67 00               nop  
 RO27:4E68 FF               rst  38
 RO27:4E69 7F               ld   a,a
 RO27:4E6A 80               add  b
 RO27:4E6B FD               -    
 RO27:4E6C 82               add  d
 RO27:4E6D FB               ei   
 RO27:4E6E 24               inc  h
 RO27:4E6F 00               nop  
 RO27:4E70 52               ld   d,d
 RO27:4E71 0E 20            ld   c,20
 RO27:4E73 3F               ccf  
 RO27:4E74 C0               ret  nz
 RO27:4E75 F1               pop  af
 RO27:4E76 FE 0F            cp   a,0F
 RO27:4E78 F0 FF            ld   a,(ff00+FF)
 RO27:4E7A 00               nop  
 RO27:4E7B FF               rst  38
 RO27:4E7C 01 7E 82         ld   bc,827E
 RO27:4E7F 0B               dec  bc
 RO27:4E80 21 F5 00         ld   hl,00F5
 RO27:4E83 86               add  (hl)
 RO27:4E84 79               ld   a,c
 RO27:4E85 FE 00            cp   a,00
 RO27:4E87 FE 20            cp   a,20
 RO27:4E89 FD               -    
 RO27:4E8A 50               ld   d,b
 RO27:4E8B E9               jp   hl
 RO27:4E8C 28 94            jr   z,4E22
 RO27:4E8E 90               sub  b
 RO27:4E8F 31 0E 94         ld   sp,940E
 RO27:4E92 6F               ld   l,a
 RO27:4E93 F3               di   
 RO27:4E94 FF               rst  38
 RO27:4E95 E7               rst  20
 RO27:4E96 1F               rra  
 RO27:4E97 EA 3F F7         ld   (F73F),a
 RO27:4E9A 0F               rrca 
 RO27:4E9B EF               rst  28
 RO27:4E9C 3F               ccf  
 RO27:4E9D 7F               ld   a,a
 RO27:4E9E 5F               ld   e,a
 RO27:4E9F 37               scf  
 RO27:4EA0 2F               cpl  
 RO27:4EA1 9A               sbc  d
 RO27:4EA2 0F               rrca 
 RO27:4EA3 15               dec  d
 RO27:4EA4 ED               -    
 RO27:4EA5 6E               ld   l,(hl)
 RO27:4EA6 F1               pop  af
 RO27:4EA7 BA               cp   d
 RO27:4EA8 FF               rst  38
 RO27:4EA9 77               ld   (hl),a
 RO27:4EAA FD               -    
 RO27:4EAB CB FF            set  7,a
 RO27:4EAD 4F               ld   c,a
 RO27:4EAE B7               or   a
 RO27:4EAF BD               cp   l
 RO27:4EB0 67               ld   h,a
 RO27:4EB1 72               ld   (hl),d
 RO27:4EB2 DF               rst  18
 RO27:4EB3 77               ld   (hl),a
 RO27:4EB4 29               add  hl,hl
 RO27:4EB5 EF               rst  28
 RO27:4EB6 F0 C7            ld   a,(ff00+C7)
 RO27:4EB8 F8 EC            ld   hl,sp+EC
 RO27:4EBA F3               di   
 RO27:4EBB FF               rst  38
 RO27:4EBC DF               rst  18
 RO27:4EBD FE BF            cp   a,BF
 RO27:4EBF F1               pop  af
 RO27:4EC0 9E               sbc  (hl)
 RO27:4EC1 FB               ei   
 RO27:4EC2 04               inc  b
 RO27:4EC3 9F               sbc  a
 RO27:4EC4 78               ld   a,b
 RO27:4EC5 E7               rst  20
 RO27:4EC6 07               rlca 
 RO27:4EC7 72               ld   (hl),d
 RO27:4EC8 8F               adc  a
 RO27:4EC9 13               inc  de
 RO27:4ECA FF               rst  38
 RO27:4ECB 6A               ld   l,d
 RO27:4ECC 9F               sbc  a
 RO27:4ECD FD               -    
 RO27:4ECE 7E               ld   a,(hl)
 RO27:4ECF 5F               ld   e,a
 RO27:4ED0 FC               -    
 RO27:4ED1 2B               dec  hl
 RO27:4ED2 FE 02            cp   a,02
 RO27:4ED4 FD               -    
 RO27:4ED5 CF               rst  08
 RO27:4ED6 F1               pop  af
 RO27:4ED7 B7               or   a
 RO27:4ED8 FD               -    
 RO27:4ED9 28 FF            jr   z,4EDA
 RO27:4EDB 8C               adc  h
 RO27:4EDC 7F               ld   a,a
 RO27:4EDD F8 A7            ld   hl,sp+A7
 RO27:4EDF F4               -    
 RO27:4EE0 0B               dec  bc
 RO27:4EE1 FA 05 4D         ld   a,(4D05)
 RO27:4EE4 B2               or   d
 RO27:4EE5 FF               rst  38
 RO27:4EE6 FF               rst  38
 RO27:4EE7 EB               -    
 RO27:4EE8 FC               -    
 RO27:4EE9 CF               rst  08
 RO27:4EEA F0 F7            ld   a,(ff00+F7)
 RO27:4EEC EC               -    
 RO27:4EED EC               -    
 RO27:4EEE 97               sub  a
 RO27:4EEF 7B               ld   a,e
 RO27:4EF0 8C               adc  h
 RO27:4EF1 FF               rst  38
 RO27:4EF2 01 FF 00         ld   bc,00FF
 RO27:4EF5 9F               sbc  a
 RO27:4EF6 FF               rst  38
 RO27:4EF7 FF               rst  38
 RO27:4EF8 FF               rst  38
 RO27:4EF9 F4               -    
 RO27:4EFA 7F               ld   a,a
 RO27:4EFB 88               adc  b
 RO27:4EFC FF               rst  38
 RO27:4EFD C7               rst  00
 RO27:4EFE 3E 3F            ld   a,3F
 RO27:4F00 C4 FF 01         call nz,01FF
 RO27:4F03 FF               rst  38
 RO27:4F04 00               nop  
 RO27:4F05 83               add  e
 RO27:4F06 FF               rst  38
 RO27:4F07 03               inc  bc
 RO27:4F08 FF               rst  38
 RO27:4F09 0F               rrca 
 RO27:4F0A F3               di   
 RO27:4F0B 3A               ldd  a,(hl)
 RO27:4F0C C5               push bc
 RO27:4F0D B7               or   a
 RO27:4F0E 48               ld   c,b
 RO27:4F0F DA 25 AC         jp   c,AC25
 RO27:4F12 57               ld   d,a
 RO27:4F13 D1               pop  de
 RO27:4F14 2F               cpl  
 RO27:4F15 E3               -    
 RO27:4F16 FE 88            cp   a,88
 RO27:4F18 FF               rst  38
 RO27:4F19 00               nop  
 RO27:4F1A FF               rst  38
 RO27:4F1B 91               sub  c
 RO27:4F1C 6F               ld   l,a
 RO27:4F1D 70               ld   (hl),b
 RO27:4F1E BF               cp   a
 RO27:4F1F E0 7F            ld   (ff00+7F),a
 RO27:4F21 C0               ret  nz
 RO27:4F22 FF               rst  38
 RO27:4F23 9C               sbc  h
 RO27:4F24 FF               rst  38
 RO27:4F25 D8               ret  c
 RO27:4F26 3F               ccf  
 RO27:4F27 73               ld   (hl),e
 RO27:4F28 FC               -    
 RO27:4F29 EE F1            xor  a,F1
 RO27:4F2B 9D               sbc  l
 RO27:4F2C E2               ld   (ff00+c),a
 RO27:4F2D B8               cp   b
 RO27:4F2E C7               rst  00
 RO27:4F2F 54               ld   d,h
 RO27:4F30 AB               xor  e
 RO27:4F31 28 D7            jr   z,4F0A
 RO27:4F33 40               ld   b,b
 RO27:4F34 BF               cp   a
 RO27:4F35 A4               and  h
 RO27:4F36 5F               ld   e,a
 RO27:4F37 F1               pop  af
 RO27:4F38 0F               rrca 
 RO27:4F39 D4 2B 39         call nc,392B
 RO27:4F3C C6 0B            add  a,0B
 RO27:4F3E F4               -    
 RO27:4F3F 3D               dec  a
 RO27:4F40 C2 5E A1         jp   nz,A15E
 RO27:4F43 BE               cp   (hl)
 RO27:4F44 41               ld   b,c
 RO27:4F45 9F               sbc  a
 RO27:4F46 E0 07            ld   (ff00+07),a
 RO27:4F48 F8 12            ld   hl,sp+12
 RO27:4F4A ED               -    
 RO27:4F4B E9               jp   hl
 RO27:4F4C 16 9F            ld   d,9F
 RO27:4F4E 6D               ld   l,l
 RO27:4F4F 27               daa  
 RO27:4F50 FF               rst  38
 RO27:4F51 44               ld   b,h
 RO27:4F52 FF               rst  38
 RO27:4F53 2F               cpl  
 RO27:4F54 FF               rst  38
 RO27:4F55 E5               push hl
 RO27:4F56 1F               rra  
 RO27:4F57 CE 3F            adc  a,3F
 RO27:4F59 B5               or   l
 RO27:4F5A 5F               ld   e,a
 RO27:4F5B 4E               ld   c,(hl)
 RO27:4F5C BF               cp   a
 RO27:4F5D A7               and  a
 RO27:4F5E DF               rst  18
 RO27:4F5F D7               rst  10
 RO27:4F60 AB               xor  e
 RO27:4F61 3B               dec  sp
 RO27:4F62 C5               push bc
 RO27:4F63 B4               or   h
 RO27:4F64 CB 7F            bit  7,a
 RO27:4F66 FF               rst  38
 RO27:4F67 AF               xor  a
 RO27:4F68 FF               rst  38
 RO27:4F69 77               ld   (hl),a
 RO27:4F6A FF               rst  38
 RO27:4F6B 2F               cpl  
 RO27:4F6C FF               rst  38
 RO27:4F6D 84               add  h
 RO27:4F6E 7F               ld   a,a
 RO27:4F6F 51               ld   d,c
 RO27:4F70 AF               xor  a
 RO27:4F71 93               sub  e
 RO27:4F72 6F               ld   l,a
 RO27:4F73 39               add  hl,sp
 RO27:4F74 C7               rst  00
 RO27:4F75 FB               ei   
 RO27:4F76 FE 4D            cp   a,4D
 RO27:4F78 FF               rst  38
 RO27:4F79 A0               and  b
 RO27:4F7A FF               rst  38
 RO27:4F7B 40               ld   b,b
 RO27:4F7C FF               rst  38
 RO27:4F7D 42               ld   b,d
 RO27:4F7E FF               rst  38
 RO27:4F7F A4               and  h
 RO27:4F80 FF               rst  38
 RO27:4F81 42               ld   b,d
 RO27:4F82 FF               rst  38
 RO27:4F83 80               add  b
 RO27:4F84 FF               rst  38
 RO27:4F85 7F               ld   a,a
 RO27:4F86 FF               rst  38
 RO27:4F87 4C               ld   c,h
 RO27:4F88 BF               cp   a
 RO27:4F89 B8               cp   b
 RO27:4F8A C7               rst  00
 RO27:4F8B A6               and  (hl)
 RO27:4F8C F9               ld   sp,hl
 RO27:4F8D 13               inc  de
 RO27:4F8E FC               -    
 RO27:4F8F 9D               sbc  l
 RO27:4F90 FA EF FC         ld   a,(FCEF)
 RO27:4F93 D4 FF F8         call nc,F8FF
 RO27:4F96 FF               rst  38
 RO27:4F97 3E FF            ld   a,FF
 RO27:4F99 4F               ld   c,a
 RO27:4F9A BC               cp   h
 RO27:4F9B E9               jp   hl
 RO27:4F9C 16 56            ld   d,56
 RO27:4F9E A9               xor  c
 RO27:4F9F AF               xor  a
 RO27:4FA0 51               ld   d,c
 RO27:4FA1 FD               -    
 RO27:4FA2 03               inc  bc
 RO27:4FA3 BE               cp   (hl)
 RO27:4FA4 41               ld   b,c
 RO27:4FA5 DB               -    
 RO27:4FA6 E7               rst  20
 RO27:4FA7 0D               dec  c
 RO27:4FA8 F3               di   
 RO27:4FA9 F1               pop  af
 RO27:4FAA 7F               ld   a,a
 RO27:4FAB FF               rst  38
 RO27:4FAC 7F               ld   a,a
 RO27:4FAD 31 FF C8         ld   sp,C8FF
 RO27:4FB0 F7               rst  30
 RO27:4FB1 F6 E9            or   a,E9
 RO27:4FB3 FD               -    
 RO27:4FB4 F2               ld   a,(ff00+c)
 RO27:4FB5 F0 FF            ld   a,(ff00+FF)
 RO27:4FB7 A8               xor  b
 RO27:4FB8 FF               rst  38
 RO27:4FB9 46               ld   b,(hl)
 RO27:4FBA FF               rst  38
 RO27:4FBB 61               ld   h,c
 RO27:4FBC FF               rst  38
 RO27:4FBD 8E               adc  (hl)
 RO27:4FBE FF               rst  38
 RO27:4FBF 95               sub  l
 RO27:4FC0 FF               rst  38
 RO27:4FC1 CB FF            set  7,a
 RO27:4FC3 64               ld   h,h
 RO27:4FC4 FF               rst  38
 RO27:4FC5 66               ld   h,(hl)
 RO27:4FC6 FF               rst  38
 RO27:4FC7 0C               inc  c
 RO27:4FC8 FF               rst  38
 RO27:4FC9 F3               di   
 RO27:4FCA FF               rst  38
 RO27:4FCB D9               reti 
 RO27:4FCC E7               rst  20
 RO27:4FCD 3C               inc  a
 RO27:4FCE C3 81 FF         jp   FF81
 RO27:4FD1 BE               cp   (hl)
 RO27:4FD2 FF               rst  38
 RO27:4FD3 59               ld   e,c
 RO27:4FD4 FF               rst  38
 RO27:4FD5 8C               adc  h
 RO27:4FD6 F0 41            ld   a,(ff00+41)
 RO27:4FD8 FE B0            cp   a,B0
 RO27:4FDA FF               rst  38
 RO27:4FDB 0F               rrca 
 RO27:4FDC FF               rst  38
 RO27:4FDD 77               ld   (hl),a
 RO27:4FDE FF               rst  38
 RO27:4FDF 0D               dec  c
 RO27:4FE0 FF               rst  38
 RO27:4FE1 D0               ret  nc
 RO27:4FE2 FF               rst  38
 RO27:4FE3 65               ld   h,l
 RO27:4FE4 FF               rst  38
 RO27:4FE5 0D               dec  c
 RO27:4FE6 1F               rra  
 RO27:4FE7 C0               ret  nz
 RO27:4FE8 0F               rrca 
 RO27:4FE9 40               ld   b,b
 RO27:4FEA FF               rst  38
 RO27:4FEB AB               xor  e
 RO27:4FEC FF               rst  38
 RO27:4FED 46               ld   b,(hl)
 RO27:4FEE FF               rst  38
 RO27:4FEF E0 FF            ld   (ff00+FF),a
 RO27:4FF1 E0 FF            ld   (ff00+FF),a
 RO27:4FF3 BF               cp   a
 RO27:4FF4 FF               rst  38
 RO27:4FF5 38 3F            jr   c,5036
 RO27:4FF7 44               ld   b,h
 RO27:4FF8 C7               rst  00
 RO27:4FF9 9A               sbc  d
 RO27:4FFA 9B               sbc  e
 RO27:4FFB A2               and  d
 RO27:4FFC A3               and  e
 RO27:4FFD 9A               sbc  d
 RO27:4FFE 9B               sbc  e
 RO27:4FFF 44               ld   b,h
 RO27:5000 47               ld   b,a
 RO27:5001 38 BF            jr   c,4FC2
 RO27:5003 00               nop  
 RO27:5004 00               nop  
 RO27:5005 3C               inc  a
 RO27:5006 3F               ccf  
 RO27:5007 66               ld   h,(hl)
 RO27:5008 7F               ld   a,a
 RO27:5009 66               ld   h,(hl)
 RO27:500A 7F               ld   a,a
 RO27:500B 66               ld   h,(hl)
 RO27:500C 7F               ld   a,a
 RO27:500D 66               ld   h,(hl)
 RO27:500E 7F               ld   a,a
 RO27:500F 66               ld   h,(hl)
 RO27:5010 7F               ld   a,a
 RO27:5011 3C               inc  a
 RO27:5012 3F               ccf  
 RO27:5013 00               nop  
 RO27:5014 00               nop  
 RO27:5015 0C               inc  c
 RO27:5016 DF               rst  18
 RO27:5017 1C               inc  e
 RO27:5018 DF               rst  18
 RO27:5019 0C               inc  c
 RO27:501A DF               rst  18
 RO27:501B 0C               inc  c
 RO27:501C DF               rst  18
 RO27:501D 0C               inc  c
 RO27:501E DF               rst  18
 RO27:501F 0C               inc  c
 RO27:5020 DF               rst  18
 RO27:5021 0C               inc  c
 RO27:5022 DF               rst  18
 RO27:5023 00               nop  
 RO27:5024 00               nop  
 RO27:5025 3C               inc  a
 RO27:5026 7F               ld   a,a
 RO27:5027 66               ld   h,(hl)
 RO27:5028 7F               ld   a,a
 RO27:5029 66               ld   h,(hl)
 RO27:502A 7F               ld   a,a
 RO27:502B 0C               inc  c
 RO27:502C 7F               ld   a,a
 RO27:502D 18 7F            jr   50AE
 RO27:502F 30 7F            jr   nc,50B0
 RO27:5031 7E               ld   a,(hl)
 RO27:5032 7F               ld   a,a
 RO27:5033 00               nop  
 RO27:5034 00               nop  
 RO27:5035 3C               inc  a
 RO27:5036 FF               rst  38
 RO27:5037 66               ld   h,(hl)
 RO27:5038 FF               rst  38
 RO27:5039 66               ld   h,(hl)
 RO27:503A FF               rst  38
 RO27:503B 3E FF            ld   a,FF
 RO27:503D 06 FF            ld   b,FF
 RO27:503F 66               ld   h,(hl)
 RO27:5040 FF               rst  38
 RO27:5041 3C               inc  a
 RO27:5042 FF               rst  38
 RO27:5043 00               nop  
 RO27:5044 00               nop  
 RO27:5045 C6 CE            add  a,CE
 RO27:5047 C6 CE            add  a,CE
 RO27:5049 C6 CE            add  a,CE
 RO27:504B FE FE            cp   a,FE
 RO27:504D C6 DE            add  a,DE
 RO27:504F C6 DE            add  a,DE
 RO27:5051 C6 DE            add  a,DE
 RO27:5053 00               nop  
 RO27:5054 00               nop  
 RO27:5055 C6 EE            add  a,EE
 RO27:5057 C6 EE            add  a,EE
 RO27:5059 C6 EE            add  a,EE
 RO27:505B C6 EE            add  a,EE
 RO27:505D C6 EE            add  a,EE
 RO27:505F C6 EE            add  a,EE
 RO27:5061 7C               ld   a,h
 RO27:5062 FE 00            cp   a,00
 RO27:5064 00               nop  
 RO27:5065 FC               -    
 RO27:5066 FF               rst  38
 RO27:5067 C6 EF            add  a,EF
 RO27:5069 C6 EF            add  a,EF
 RO27:506B C6 EF            add  a,EF
 RO27:506D C6 EF            add  a,EF
 RO27:506F C6 EF            add  a,EF
 RO27:5071 FC               -    
 RO27:5072 FF               rst  38
 RO27:5073 00               nop  
 RO27:5074 00               nop  
 RO27:5075 7C               ld   a,h
 RO27:5076 7E               ld   a,(hl)
 RO27:5077 C6 EE            add  a,EE
 RO27:5079 E0 EE            ld   (ff00+EE),a
 RO27:507B 7C               ld   a,h
 RO27:507C 7E               ld   a,(hl)
 RO27:507D 0E 6E            ld   c,6E
 RO27:507F C6 EE            add  a,EE
 RO27:5081 7C               ld   a,h
 RO27:5082 7E               ld   a,(hl)
 RO27:5083 00               nop  
 RO27:5084 00               nop  
 RO27:5085 7C               ld   a,h
 RO27:5086 7E               ld   a,(hl)
 RO27:5087 C6 EE            add  a,EE
 RO27:5089 C6 EE            add  a,EE
 RO27:508B C6 EE            add  a,EE
 RO27:508D C6 EE            add  a,EE
 RO27:508F C6 EE            add  a,EE
 RO27:5091 7C               ld   a,h
 RO27:5092 7E               ld   a,(hl)
 RO27:5093 00               nop  
 RO27:5094 00               nop  
 RO27:5095 E6 EF            and  a,EF
 RO27:5097 E6 EF            and  a,EF
 RO27:5099 F6 FF            or   a,FF
 RO27:509B D6 D7            sub  a,D7
 RO27:509D DE FF            sbc  a,FF
 RO27:509F CE EF            adc  a,EF
 RO27:50A1 CE EF            adc  a,EF
 RO27:50A3 00               nop  
 RO27:50A4 00               nop  
 RO27:50A5 00               nop  
 RO27:50A6 00               nop  
 RO27:50A7 00               nop  
 RO27:50A8 00               nop  
 RO27:50A9 00               nop  
 RO27:50AA 00               nop  
 RO27:50AB 00               nop  
 RO27:50AC 00               nop  
 RO27:50AD 00               nop  
 RO27:50AE 00               nop  
 RO27:50AF 00               nop  
 RO27:50B0 00               nop  
 RO27:50B1 00               nop  
 RO27:50B2 00               nop  
 RO27:50B3 00               nop  
 RO27:50B4 00               nop  
 RO27:50B5 7C               ld   a,h
 RO27:50B6 7E               ld   a,(hl)
 RO27:50B7 C6 EE            add  a,EE
 RO27:50B9 E0 EE            ld   (ff00+EE),a
 RO27:50BB 7C               ld   a,h
 RO27:50BC 7E               ld   a,(hl)
 RO27:50BD 0E 6E            ld   c,6E
 RO27:50BF C6 EE            add  a,EE
 RO27:50C1 7C               ld   a,h
 RO27:50C2 7E               ld   a,(hl)
 RO27:50C3 00               nop  
 RO27:50C4 00               nop  
 RO27:50C5 7C               ld   a,h
 RO27:50C6 7E               ld   a,(hl)
 RO27:50C7 C6 EE            add  a,EE
 RO27:50C9 C6 EE            add  a,EE
 RO27:50CB C6 EE            add  a,EE
 RO27:50CD C6 EE            add  a,EE
 RO27:50CF C6 EE            add  a,EE
 RO27:50D1 7C               ld   a,h
 RO27:50D2 7E               ld   a,(hl)
 RO27:50D3 00               nop  
 RO27:50D4 00               nop  
 RO27:50D5 FE FE            cp   a,FE
 RO27:50D7 C0               ret  nz
 RO27:50D8 F0 C0            ld   a,(ff00+C0)
 RO27:50DA F0 FC            ld   a,(ff00+FC)
 RO27:50DC FC               -    
 RO27:50DD C0               ret  nz
 RO27:50DE F0 C0            ld   a,(ff00+C0)
 RO27:50E0 F0 C0            ld   a,(ff00+C0)
 RO27:50E2 F0 00            ld   a,(ff00+00)
 RO27:50E4 00               nop  
 RO27:50E5 FF               rst  38
 RO27:50E6 FF               rst  38
 RO27:50E7 18 FE            jr   50E7
 RO27:50E9 18 FE            jr   50E9
 RO27:50EB 18 FE            jr   50EB
 RO27:50ED 18 FE            jr   50ED
 RO27:50EF 18 FE            jr   50EF
 RO27:50F1 18 FE            jr   50F1
 RO27:50F3 00               nop  
 RO27:50F4 00               nop  
 RO27:50F5 C6 00            add  a,00
 RO27:50F7 E6 00            and  a,00
 RO27:50F9 E6 00            and  a,00
 RO27:50FB D6 00            sub  a,00
 RO27:50FD D6 00            sub  a,00
 RO27:50FF CE 00            adc  a,00
 RO27:5101 CE 00            adc  a,00
 RO27:5103 C6 00            add  a,00
 RO27:5105 C0               ret  nz
 RO27:5106 00               nop  
 RO27:5107 C0               ret  nz
 RO27:5108 00               nop  
 RO27:5109 00               nop  
 RO27:510A 00               nop  
 RO27:510B DB               -    
 RO27:510C 00               nop  
 RO27:510D DD               -    
 RO27:510E 00               nop  
 RO27:510F D9               reti 
 RO27:5110 00               nop  
 RO27:5111 D9               reti 
 RO27:5112 00               nop  
 RO27:5113 D9               reti 
 RO27:5114 00               nop  
 RO27:5115 00               nop  
 RO27:5116 00               nop  
 RO27:5117 30 00            jr   nc,5119
 RO27:5119 78               ld   a,b
 RO27:511A 00               nop  
 RO27:511B 33               inc  sp
 RO27:511C 00               nop  
 RO27:511D B6               or   (hl)
 RO27:511E 00               nop  
 RO27:511F B7               or   a
 RO27:5120 00               nop  
 RO27:5121 B6               or   (hl)
 RO27:5122 00               nop  
 RO27:5123 B3               or   e
 RO27:5124 00               nop  
 RO27:5125 00               nop  
 RO27:5126 00               nop  
 RO27:5127 00               nop  
 RO27:5128 00               nop  
 RO27:5129 00               nop  
 RO27:512A 00               nop  
 RO27:512B CD 00 6E         call 6E00
 RO27:512E 00               nop  
 RO27:512F EC               -    
 RO27:5130 00               nop  
 RO27:5131 0C               inc  c
 RO27:5132 00               nop  
 RO27:5133 EC               -    
 RO27:5134 00               nop  
 RO27:5135 01 00 01         ld   bc,0100
 RO27:5138 00               nop  
 RO27:5139 01 00 8F         ld   bc,8F00
 RO27:513C 00               nop  
 RO27:513D D9               reti 
 RO27:513E 00               nop  
 RO27:513F D9               reti 
 RO27:5140 00               nop  
 RO27:5141 D9               reti 
 RO27:5142 00               nop  
 RO27:5143 CF               rst  08
 RO27:5144 00               nop  
 RO27:5145 80               add  b
 RO27:5146 00               nop  
 RO27:5147 80               add  b
 RO27:5148 00               nop  
 RO27:5149 80               add  b
 RO27:514A 00               nop  
 RO27:514B 9E               sbc  (hl)
 RO27:514C 00               nop  
 RO27:514D B3               or   e
 RO27:514E 00               nop  
 RO27:514F B3               or   e
 RO27:5150 00               nop  
 RO27:5151 B3               or   e
 RO27:5152 00               nop  
 RO27:5153 9E               sbc  (hl)
 RO27:5154 00               nop  
 RO27:5155 E9               jp   hl
 RO27:5156 1C               inc  e
 RO27:5157 4C               ld   c,h
 RO27:5158 25               dec  h
 RO27:5159 54               ld   d,h
 RO27:515A 46               ld   b,(hl)
 RO27:515B 9E               sbc  (hl)
 RO27:515C 6F               ld   l,a
 RO27:515D 4C               ld   c,h
 RO27:515E 25               dec  h
 RO27:515F F1               pop  af
 RO27:5160 39               add  hl,sp
 RO27:5161 54               ld   d,h
 RO27:5162 46               ld   b,(hl)
 RO27:5163 1A               ld   a,(de)
 RO27:5164 5F               ld   e,a
 RO27:5165 E9               jp   hl
 RO27:5166 18 4C            jr   51B4
 RO27:5168 25               dec  h
 RO27:5169 F1               pop  af
 RO27:516A 39               add  hl,sp
 RO27:516B 54               ld   d,h
 RO27:516C 46               ld   b,(hl)
 RO27:516D A7               and  a
 RO27:516E 10 E9            <corrupted stop>
 RO27:5170 18 4C            jr   51BE
 RO27:5172 25               dec  h
 RO27:5173 54               ld   d,h
 RO27:5174 46               ld   b,(hl)
 RO27:5175 DF               rst  18
 RO27:5176 1C               inc  e
 RO27:5177 1F               rra  
 RO27:5178 21 BF 35         ld   hl,35BF
 RO27:517B 1F               rra  
 RO27:517C 42               ld   b,d
 RO27:517D F0 03            ld   a,(ff00+03)
 RO27:517F E0 03            ld   (ff00+03),a
 RO27:5181 E0 43            ld   (ff00+43),a
 RO27:5183 E0 7F            ld   (ff00+7F),a
 RO27:5185 00               nop  
 RO27:5186 7E               ld   a,(hl)
 RO27:5187 00               nop  
 RO27:5188 7C               ld   a,h
 RO27:5189 10 7C            <corrupted stop>
 RO27:518B 1F               rra  
 RO27:518C 7C               ld   a,h
 RO27:518D 00               nop  
 RO27:518E 00               nop  
 RO27:518F FF               rst  38
 RO27:5190 7F               ld   a,a
 RO27:5191 00               nop  
 RO27:5192 00               nop  
 RO27:5193 FF               rst  38
 RO27:5194 7F               ld   a,a
-
 RO27:5195 0A
 RO27:5196 FC 24 00 00
 RO27:519A FC 1C 00 00
 RO27:519E FC 14 00 00
 RO27:51A2 FC 0C 00 00
 RO27:51A6 FC 04 00 00
 RO27:51AA FC F4 00 00
 RO27:51AE FC EC 00 00
 RO27:51B2 FC E4 00 00
 RO27:51B6 FC DC 00 00
 RO27:51BA FC D4 00 00

 RO27:51BE 0A
 RO27:51BF FC 24 05 00
 RO27:51C3 FC 1C 02 00
 RO27:51C7 FC 14 06 00
 RO27:51CB FC 0C 05 00
 RO27:51CF FC 04 04 00
 RO27:51D3 FC F4 04 00
 RO27:51D7 FC EC 04 00
 RO27:51DB FC E4 03 00
 RO27:51DF FC DC 02 00
 RO27:51E3 FC D4 01 00
-
 RO27:51E7 95 51 1E
 RO27:51EA BE 51 1E 00 00

 RO27:51EF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 RO27:51FF 00 00 7E 7E 42 42 42 42 7E 7E 60 60 60 60 60 60
 RO27:520F 00 00 7C 7C 44 44 44 44 7E 7E 62 62 62 62 62 62
 RO27:521F 00 00 7E 7E 40 40 40 40 7E 7E 60 60 60 60 7E 7E
 RO27:522F 00 00 7E 7E 42 42 40 40 7E 7E 06 06 46 46 7E 7E
 RO27:523F 00 00 7E 7E 0E 0E 08 08 08 08 08 08 08 08 08 08
 RO27:524F 00 00 7C 7C 44 44 44 44 44 44 FE FE C2 C2 C2 C2

 RO27:525F 84 10 B0 2D 55 46 7B 67
-
 RO27:5267 E5               push hl
 RO27:5268 21 00 00         ld   hl,0000
 RO27:526B CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO27:526E 20 03            jr   nz,5273
 RO27:5270 AF               xor  a
 RO27:5271 18 20            jr   5293
 RO27:5273 E5               push hl
 RO27:5274 D5               push de
 RO27:5275 C5               push bc
 RO27:5276 CD A2 05         call 05A2           // Button update, next frame
 RO27:5279 C1               pop  bc
 RO27:527A D1               pop  de
 RO27:527B E1               pop  hl
 RO27:527C F0 91            ld   a,(ff00+91)
 RO27:527E CB 47            bit  0,a            // A
 RO27:5280 20 0A            jr   nz,528C
 RO27:5282 CB 4F            bit  1,a            // B
 RO27:5284 20 06            jr   nz,528C
 RO27:5286 CB 5F            bit  3,a            // Start
 RO27:5288 20 02            jr   nz,528C
 RO27:528A 18 04            jr   5290
 RO27:528C AF               xor  a
 RO27:528D 37               scf  
 RO27:528E 18 03            jr   5293           // End with Carry Flag Set if A, B, or Start is pressed within timer DE
 RO27:5290 23               inc  hl
 RO27:5291 18 D8            jr   526B
 RO27:5293 E1               pop  hl
 RO27:5294 C9               ret                 // A = 0, Carry Flag Set by pressing A, B, or Start within timer DE
 RO27:5295 F0 82            ld   a,(ff00+82)
 RO27:5297 F5               push af
 RO27:5298 3E 04            ld   a,04
 RO27:529A E0 82            ld   (ff00+82),a
 RO27:529C E0 70            ld   (ff00+70),a
 RO27:529E AF               xor  a
 RO27:529F EA B9 DB         ld   (DBB9),a
 RO27:52A2 21 95 DB         ld   hl,DB95
 RO27:52A5 FA BA DB         ld   a,(DBBA)
 RO27:52A8 3C               inc  a
 RO27:52A9 06 00            ld   b,00
 RO27:52AB 4F               ld   c,a
 RO27:52AC 3E FF            ld   a,FF
 RO27:52AE CD 79 3B         call 3B79           // (HL ~ HL+BC-1) = A
 RO27:52B1 FA BA DB         ld   a,(DBBA)       // Loop begins here
 RO27:52B4 57               ld   d,a
 RO27:52B5 CD 4B 29         call 294B           // A = Pseudo RNG result / 256 % (1 + D)
 RO27:52B8 21 95 DB         ld   hl,DB95
 RO27:52BB 06 00            ld   b,00
 RO27:52BD 4F               ld   c,a
 RO27:52BE 09               add  hl,bc
 RO27:52BF 7E               ld   a,(hl)
 RO27:52C0 FE FF            cp   a,FF
 RO27:52C2 20 ED            jr   nz,52B1
 RO27:52C4 FA B9 DB         ld   a,(DBB9)
 RO27:52C7 77               ld   (hl),a
 RO27:52C8 3C               inc  a
 RO27:52C9 EA B9 DB         ld   (DBB9),a
 RO27:52CC FA BA DB         ld   a,(DBBA)
 RO27:52CF 3C               inc  a
 RO27:52D0 4F               ld   c,a
 RO27:52D1 FA B9 DB         ld   a,(DBB9)
 RO27:52D4 B9               cp   c
 RO27:52D5 28 02            jr   z,52D9
 RO27:52D7 18 D8            jr   52B1
 RO27:52D9 F1               pop  af
 RO27:52DA E0 82            ld   (ff00+82),a
 RO27:52DC E0 70            ld   (ff00+70),a
 RO27:52DE C9               ret                 // Arranges order of display tiles to handle for given text portion on "BEGIN WAR"/Victory/Defeat announcement screen
 RO27:52DF F0 82            ld   a,(ff00+82)
 RO27:52E1 F5               push af
 RO27:52E2 3E 04            ld   a,04
 RO27:52E4 E0 82            ld   (ff00+82),a
 RO27:52E6 E0 70            ld   (ff00+70),a
 RO27:52E8 AF               xor  a
 RO27:52E9 EA C3 DB         ld   (DBC3),a
 RO27:52EC 11 01 00         ld   de,0001        // Loop begins here
 RO27:52EF CD 67 52         call 5267           // A = 0, Carry Flag Set by pressing A, B, or Start within 1 frame
 RO27:52F2 38 24            jr   c,5318         // End with Set Carry Flag for pressing A, B, or Start
 RO27:52F4 FA C3 DB         ld   a,(DBC3)
 RO27:52F7 06 00            ld   b,00
 RO27:52F9 4F               ld   c,a
 RO27:52FA 21 95 DB         ld   hl,DB95
 RO27:52FD 09               add  hl,bc
 RO27:52FE 7E               ld   a,(hl)
 RO27:52FF CD 51 53         call 5351           // Handles display tile A of given text portion on "BEGIN WAR"/Victory/Defeat announcement screen
 RO27:5302 FA C3 DB         ld   a,(DBC3)
 RO27:5305 3C               inc  a
 RO27:5306 EA C3 DB         ld   (DBC3),a
 RO27:5309 4F               ld   c,a
 RO27:530A FA BA DB         ld   a,(DBBA)
 RO27:530D 3C               inc  a
 RO27:530E B9               cp   c
 RO27:530F 20 DB            jr   nz,52EC
 RO27:5311 F1               pop  af
 RO27:5312 E0 82            ld   (ff00+82),a
 RO27:5314 E0 70            ld   (ff00+70),a
 RO27:5316 AF               xor  a
 RO27:5317 C9               ret  
 RO27:5318 F1               pop  af
 RO27:5319 E0 82            ld   (ff00+82),a
 RO27:531B E0 70            ld   (ff00+70),a
 RO27:531D 37               scf  
 RO27:531E C9               ret                  // Attempts to handle given text portion on "BEGIN WAR"/Victory/Defeat announcement screen, 1 frame advancing per tile; if A, B, or Start is pressed, preemptive ending with Carry Flag Set; if completed, ending is A = 0
 RO27:531F 4F               ld   c,a
 RO27:5320 F0 82            ld   a,(ff00+82)
 RO27:5322 F5               push af
 RO27:5323 3E 04            ld   a,04
 RO27:5325 E0 82            ld   (ff00+82),a
 RO27:5327 E0 70            ld   (ff00+70),a
 RO27:5329 AF               xor  a
 RO27:532A EA B9 DB         ld   (DBB9),a
 RO27:532D C5               push bc             // Loop begins here
 RO27:532E 21 95 DB         ld   hl,DB95
 RO27:5331 FA B9 DB         ld   a,(DBB9)
 RO27:5334 4F               ld   c,a
 RO27:5335 06 00            ld   b,00
 RO27:5337 09               add  hl,bc
 RO27:5338 7E               ld   a,(hl)
 RO27:5339 C1               pop  bc
 RO27:533A B9               cp   c
 RO27:533B 28 09            jr   z,5346
 RO27:533D FA B9 DB         ld   a,(DBB9)
 RO27:5340 3C               inc  a
 RO27:5341 EA B9 DB         ld   (DBB9),a
 RO27:5344 18 E7            jr   532D
 RO27:5346 FA B9 DB         ld   a,(DBB9)
 RO27:5349 4F               ld   c,a
 RO27:534A F1               pop  af
 RO27:534B E0 82            ld   (ff00+82),a
 RO27:534D E0 70            ld   (ff00+70),a
 RO27:534F 79               ld   a,c
 RO27:5350 C9               ret                 // Unused procedure: A = (first) value within WRA4($DB95) that has initial A
 RO27:5351 57               ld   d,a
 RO27:5352 F0 82            ld   a,(ff00+82)
 RO27:5354 F5               push af
 RO27:5355 3E 04            ld   a,04
 RO27:5357 E0 82            ld   (ff00+82),a
 RO27:5359 E0 70            ld   (ff00+70),a
 RO27:535B 7A               ld   a,d
 RO27:535C EA C2 DB         ld   (DBC2),a
 RO27:535F FA BB DB         ld   a,(DBBB)
 RO27:5362 47               ld   b,a            // Width
 RO27:5363 FA C2 DB         ld   a,(DBC2)
 RO27:5366 EF 14 1B 5F                          // B = A / B, A holds remainder
 RO27:536A F5               push af
 RO27:536B FA BF DB         ld   a,(DBBF)
 RO27:536E 4F               ld   c,a            // Base X
 RO27:536F F1               pop  af             // X Offset
 RO27:5370 81               add  c
 RO27:5371 EA BD DB         ld   (DBBD),a
 RO27:5374 FA BB DB         ld   a,(DBBB)
 RO27:5377 47               ld   b,a            // Width
 RO27:5378 FA C2 DB         ld   a,(DBC2)
 RO27:537B EF 14 1B 5F                          // B = A / B, A holds remainder
 RO27:537F 78               ld   a,b
 RO27:5380 F5               push af
 RO27:5381 FA C0 DB         ld   a,(DBC0)
 RO27:5384 4F               ld   c,a            // Base Y
 RO27:5385 F1               pop  af             // Y Offset
 RO27:5386 81               add  c
 RO27:5387 EA BE DB         ld   (DBBE),a
 RO27:538A F1               pop  af
 RO27:538B E0 82            ld   (ff00+82),a
 RO27:538D E0 70            ld   (ff00+70),a
 RO27:538F FA C2 DB         ld   a,(DBC2)
 RO27:5392 F5               push af
 RO27:5393 FA C6 DB         ld   a,(DBC6)
 RO27:5396 4F               ld   c,a            // Default tile
 RO27:5397 F1               pop  af
 RO27:5398 81               add  c
 RO27:5399 67               ld   h,a
 RO27:539A FA BD DB         ld   a,(DBBD)
 RO27:539D 47               ld   b,a
 RO27:539E FA BE DB         ld   a,(DBBE)
 RO27:53A1 4F               ld   c,a
 RO27:53A2 11 01 01         ld   de,0101
 RO27:53A5 FA C7 DB         ld   a,(DBC7)       // Palette
 RO27:53A8 EF 15 FD 67                          // (VRA0:$9800 BC) = H, (VRA1:$9800 BC) = A
 RO27:53AC C9               ret                 // Handles display tile A of given text portion on "BEGIN WAR"/Victory/Defeat announcement screen
 RO27:53AD CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:53B0 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:53B3 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:53B6 AF               xor  a
 RO27:53B7 E0 95            ld   (ff00+95),a
 RO27:53B9 E0 96            ld   (ff00+96),a
 RO27:53BB EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:53BF CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:53C2 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:53C5 3E 00            ld   a,00
 RO27:53C7 E0 83            ld   (ff00+83),a
 RO27:53C9 E0 4F            ld   (ff00+4F),a
 RO27:53CB F0 83            ld   a,(ff00+83)
 RO27:53CD F5               push af
 RO27:53CE 3E 00            ld   a,00
 RO27:53D0 E0 83            ld   (ff00+83),a
 RO27:53D2 E0 4F            ld   (ff00+4F),a
 RO27:53D4 11 C3 55         ld   de,55C3
 RO27:53D7 21 00 90         ld   hl,9000
 RO27:53DA 01 00 08         ld   bc,0800
 RO27:53DD CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:53E0 11 C3 5D         ld   de,5DC3
 RO27:53E3 21 00 88         ld   hl,8800
 RO27:53E6 01 10 01         ld   bc,0110
 RO27:53E9 CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:53EC F1               pop  af
 RO27:53ED E0 83            ld   (ff00+83),a
 RO27:53EF E0 4F            ld   (ff00+4F),a
 RO27:53F1 3E 00            ld   a,00
 RO27:53F3 06 08            ld   b,08
 RO27:53F5 21 D3 5E         ld   hl,5ED3
 RO27:53F8 CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($5ED3) to ($5F12)
 RO27:53FB CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO27:53FE C9               ret                 // Establishes basic graphics data for "BEGIN WAR" and Victory/Defeat screens
 RO27:53FF CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:5402 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:5405 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:5408 AF               xor  a
 RO27:5409 E0 95            ld   (ff00+95),a
 RO27:540B E0 96            ld   (ff00+96),a
 RO27:540D EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:5411 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:5414 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:5417 3E 00            ld   a,00
 RO27:5419 E0 83            ld   (ff00+83),a
 RO27:541B E0 4F            ld   (ff00+4F),a
 RO27:541D F0 83            ld   a,(ff00+83)
 RO27:541F F5               push af
 RO27:5420 3E 00            ld   a,00
 RO27:5422 E0 83            ld   (ff00+83),a
 RO27:5424 E0 4F            ld   (ff00+4F),a
 RO27:5426 11 C3 55         ld   de,55C3
 RO27:5429 21 00 90         ld   hl,9000
 RO27:542C 01 00 08         ld   bc,0800
 RO27:542F CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:5432 11 C3 5D         ld   de,5DC3
 RO27:5435 21 00 88         ld   hl,8800
 RO27:5438 01 10 01         ld   bc,0110
 RO27:543B CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:543E F1               pop  af
 RO27:543F E0 83            ld   (ff00+83),a
 RO27:5441 E0 4F            ld   (ff00+4F),a
 RO27:5443 3E 00            ld   a,00
 RO27:5445 06 08            ld   b,08
 RO27:5447 21 D3 5E         ld   hl,5ED3
 RO27:544A CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($5ED3) to ($5F12)
 RO27:544D CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO27:5450 C9               ret                 // Establishes basic graphics data for "BEGIN WAR" and Victory/Defeat screens
 RO27:5451 FA C4 DB         ld   a,(DBC4)
 RO27:5454 FE 00            cp   a,00
 RO27:5456 20 25            jr   nz,547D        // Jumps for White Moon
 RO27:5458 3E 01            ld   a,01
 RO27:545A EA C7 DB         ld   (DBC7),a
 RO27:545D 3E 03            ld   a,03
 RO27:545F EA BF DB         ld   (DBBF),a
 RO27:5462 3E 06            ld   a,06
 RO27:5464 EA C0 DB         ld   (DBC0),a
 RO27:5467 3E 0E            ld   a,0E
 RO27:5469 EA BB DB         ld   (DBBB),a
 RO27:546C 3E 02            ld   a,02
 RO27:546E EA BC DB         ld   (DBBC),a
 RO27:5471 3E 1B            ld   a,1B
 RO27:5473 EA BA DB         ld   (DBBA),a       // 27, 14, 2, ?, ?, 3, 6
 RO27:5476 3E 21            ld   a,21
 RO27:5478 EA C6 DB         ld   (DBC6),a
 RO27:547B 18 23            jr   54A0
 RO27:547D 3E 02            ld   a,02
 RO27:547F EA C7 DB         ld   (DBC7),a
 RO27:5482 3E 01            ld   a,01
 RO27:5484 EA BF DB         ld   (DBBF),a
 RO27:5487 3E 06            ld   a,06
 RO27:5489 EA C0 DB         ld   (DBC0),a
 RO27:548C 3E 12            ld   a,12
 RO27:548E EA BB DB         ld   (DBBB),a
 RO27:5491 3E 02            ld   a,02
 RO27:5493 EA BC DB         ld   (DBBC),a
 RO27:5496 3E 23            ld   a,23
 RO27:5498 EA BA DB         ld   (DBBA),a       // 35, 18, 2, ?, ?, 1, 6
 RO27:549B 3E 3D            ld   a,3D
 RO27:549D EA C6 DB         ld   (DBC6),a
 RO27:54A0 C9               ret                 // Establishes basic data for country name's line on Victory/Defeat screen
 RO27:54A1 FA C5 DB         ld   a,(DBC5)
 RO27:54A4 FE 00            cp   a,00
 RO27:54A6 20 20            jr   nz,54C8        // Branches for Defeat
 RO27:54A8 3E 04            ld   a,04
 RO27:54AA EA BF DB         ld   (DBBF),a
 RO27:54AD 3E 0A            ld   a,0A
 RO27:54AF EA C0 DB         ld   (DBC0),a
 RO27:54B2 3E 0C            ld   a,0C
 RO27:54B4 EA BB DB         ld   (DBBB),a
 RO27:54B7 3E 02            ld   a,02
 RO27:54B9 EA BC DB         ld   (DBBC),a
 RO27:54BC 3E 17            ld   a,17
 RO27:54BE EA BA DB         ld   (DBBA),a       // 23, 12, 2, ?, ?, 4, 10
 RO27:54C1 3E 61            ld   a,61
 RO27:54C3 EA C6 DB         ld   (DBC6),a
 RO27:54C6 18 1E            jr   54E6
 RO27:54C8 3E 04            ld   a,04
 RO27:54CA EA BF DB         ld   (DBBF),a
 RO27:54CD 3E 0A            ld   a,0A
 RO27:54CF EA C0 DB         ld   (DBC0),a
 RO27:54D2 3E 0C            ld   a,0C
 RO27:54D4 EA BB DB         ld   (DBBB),a
 RO27:54D7 3E 02            ld   a,02
 RO27:54D9 EA BC DB         ld   (DBBC),a
 RO27:54DC 3E 17            ld   a,17
 RO27:54DE EA BA DB         ld   (DBBA),a       // 23, 12, 2, ?, ?, 4, 10
 RO27:54E1 3E 79            ld   a,79
 RO27:54E3 EA C6 DB         ld   (DBC6),a
 RO27:54E6 C9               ret                 // Establishes basic data for "VICTORY"/"DEFEAT line on Victory/Defeat screen
 RO27:54E7 57               ld   d,a
 RO27:54E8 F0 82            ld   a,(ff00+82)
 RO27:54EA F5               push af
 RO27:54EB 3E 04            ld   a,04
 RO27:54ED E0 82            ld   (ff00+82),a
 RO27:54EF E0 70            ld   (ff00+70),a
 RO27:54F1 7A               ld   a,d
 RO27:54F2 EA C4 DB         ld   (DBC4),a
 RO27:54F5 78               ld   a,b
 RO27:54F6 EA C5 DB         ld   (DBC5),a
 RO27:54F9 CD AD 53         call 53AD           // Establishes basic graphics data for "BEGIN WAR" and Victory/Defeat screens
 RO27:54FC CD 15 38         call 3815           // No Music
 RO27:54FF CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:5502 11 1E 00         ld   de,001E
 RO27:5505 CD 67 52         call 5267           // A = 0, Carry Flag Set by pressing A, B, or Start within 30 frames
 RO27:5508 38 4D            jr   c,5557         // Ends immediately if A, B, or Start is pressed within 30 frames
 RO27:550A CD 51 54         call 5451           // Establishes basic data for country name's line on Victory/Defeat screen
 RO27:550D CD 95 52         call 5295           // Arranges order of display tiles to handle for given text portion on "BEGIN WAR"/Victory/Defeat announcement screen
 RO27:5510 FA C4 DB         ld   a,(DBC4)
 RO27:5513 FE 00            cp   a,00
 RO27:5515 28 02            jr   z,5519
 RO27:5517 18 04            jr   551D
 RO27:5519 3E 64            ld   a,64
 RO27:551B 18 02            jr   551F
 RO27:551D 3E 65            ld   a,65           // Red Star holds 100, White Moon holds 101
 RO27:551F CD 44 38         call 3844
 RO27:5522 CD DF 52         call 52DF           // Attempts to handle given text portion on "BEGIN WAR"/Victory/Defeat announcement screen, 1 frame advancing per tile; if A, B, or Start is pressed, preemptive ending with Carry Flag Set; if completed, ending is A = 0
 RO27:5525 38 30            jr   c,5557         // Ends immediately if A, B, or Start is pressed within 28 or 36 frames
 RO27:5527 11 3C 00         ld   de,003C
 RO27:552A CD 67 52         call 5267           // A = 0, Carry Flag Set by pressing A, B, or Start within 60 frames
 RO27:552D 38 28            jr   c,5557         // Ends immediately if A, B, or Start is pressed within 60 frames
 RO27:552F CD A1 54         call 54A1           // Establishes basic data for "VICTORY"/"DEFEAT line on Victory/Defeat screen
 RO27:5532 CD 95 52         call 5295           // Arranges order of display tiles to handle for given text portion on "BEGIN WAR"/Victory/Defeat announcement screen
 RO27:5535 FA C5 DB         ld   a,(DBC5)
 RO27:5538 FE 00            cp   a,00
 RO27:553A 28 02            jr   z,553E
 RO27:553C 18 04            jr   5542
 RO27:553E 3E 85            ld   a,85
 RO27:5540 18 02            jr   5544
 RO27:5542 3E 86            ld   a,86           // Victory holds 133, Defeat holds 134
 RO27:5544 CD 44 38         call 3844
 RO27:5547 CD DF 52         call 52DF           // Attempts to handle given text portion on "BEGIN WAR"/Victory/Defeat announcement screen, 1 frame advancing per tile; if A, B, or Start is pressed, preemptive ending with Carry Flag Set; if completed, ending is A = 0
 RO27:554A 38 0B            jr   c,5557         // Ends immediately if A, B, or Start is pressed within 24 frames
 RO27:554C 11 3C 00         ld   de,003C
 RO27:554F 01 00 00         ld   bc,0000
 RO27:5552 CD 67 52         call 5267           // A = 0, Carry Flag Set by pressing A, B, or Start within 60 frames
 RO27:5555 38 00            jr   c,5557         // Ends immediately if A, B, or Start is pressed within 60 frames
 RO27:5557 CD 43 38         call 3843
 RO27:555A CD 15 38         call 3815
 RO27:555D CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:5560 F1               pop  af
 RO27:5561 E0 82            ld   (ff00+82),a
 RO27:5563 E0 70            ld   (ff00+70),a
 RO27:5565 C9               ret                 // Victory/Defeat screen plays out for about 2.5 seconds (A is country to list, B is Victory/Defeat choice)
 RO27:5566 F0 82            ld   a,(ff00+82)
 RO27:5568 F5               push af
 RO27:5569 3E 04            ld   a,04
 RO27:556B E0 82            ld   (ff00+82),a
 RO27:556D E0 70            ld   (ff00+70),a
 RO27:556F CD FF 53         call 53FF           // Establishes basic graphics data for "BEGIN WAR" and Victory/Defeat screens
 RO27:5572 CD 15 38         call 3815
 RO27:5575 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:5578 11 1E 00         ld   de,001E
 RO27:557B CD 67 52         call 5267           // A = 0, Carry Flag Set by pressing A, B, or Start within 30 frames
 RO27:557E 38 37            jr   c,55B7         // Ends immediately if A, B, or Start is pressed within 30 frames
 RO27:5580 AF               xor  a
 RO27:5581 EA C7 DB         ld   (DBC7),a
 RO27:5584 3E 02            ld   a,02
 RO27:5586 EA BF DB         ld   (DBBF),a
 RO27:5589 3E 08            ld   a,08
 RO27:558B EA C0 DB         ld   (DBC0),a
 RO27:558E 3E 10            ld   a,10
 RO27:5590 EA BB DB         ld   (DBBB),a
 RO27:5593 3E 02            ld   a,02
 RO27:5595 EA BC DB         ld   (DBBC),a
 RO27:5598 3E 1F            ld   a,1F
 RO27:559A EA BA DB         ld   (DBBA),a       // 31, 16, 2, ?, ?, 2, 8
 RO27:559D 3E 01            ld   a,01
 RO27:559F EA C6 DB         ld   (DBC6),a
 RO27:55A2 CD 95 52         call 5295           // Arranges order of display tiles to handle for given text portion on "BEGIN WAR"/Victory/Defeat announcement screen
 RO27:55A5 3E 1D            ld   a,1D
 RO27:55A7 CD 44 38         call 3844
 RO27:55AA CD DF 52         call 52DF           // Attempts to handle given text portion on "BEGIN WAR"/Victory/Defeat announcement screen, 1 frame advancing per tile; if A, B, or Start is pressed, preemptive ending with Carry Flag Set; if completed, ending is A = 0
 RO27:55AD 38 08            jr   c,55B7         // Ends immediately if A, B, or Start is pressed within 32 frames
 RO27:55AF 11 78 00         ld   de,0078
 RO27:55B2 CD 67 52         call 5267           // A = 0, Carry Flag Set by pressing A, B, or Start within 120 frames
 RO27:55B5 38 00            jr   c,55B7         // Ends immediately if A, B, or Start is pressed within 120 frames
 RO27:55B7 CD 43 38         call 3843
 RO27:55BA CD 15 38         call 3815
 RO27:55BD F1               pop  af
 RO27:55BE E0 82            ld   (ff00+82),a
 RO27:55C0 E0 70            ld   (ff00+70),a
 RO27:55C2 C9               ret                 // "BEGIN WAR" screen plays out for about 3 seconds


 RO27:55C3 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO27:55D3 FF FF FF FF E0 C0 E0 C0 E0 C1 E0 C1 E0 C1 E1 C0
 RO27:55E3 FF FF FF FF 03 01 00 01 C1 E0 C1 E0 C1 E0 C0 01
 RO27:55F3 FF FF FF FF 80 C0 C0 C0 C3 C1 C3 C1 C3 C1 C1 C0
 RO27:5603 FF FF FF FF 0F 06 04 06 F6 FC FE FC FE FC FE 04
 RO27:5613 FF FF FF FF 00 00 00 00 0F 1F 0F 1F 0F 1F 0F 10
 RO27:5623 FF FF FF FF 08 18 0C 18 EC F8 FC F8 FC F8 FC 08
 RO27:5633 FF FF FF FF 18 30 30 38 30 38 33 38 32 39 33 39
 RO27:5643 FF FF FF FF 0E 1F 0F 0F 07 0F 0F 07 03 07 87 03
 RO27:5653 FF FF FF FF 1F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F
 RO27:5663 FF FF FF FF C3 81 83 C1 C1 C1 E0 C1 E0 C1 C1 E0
 RO27:5673 FF FF FF FF E1 C0 C0 C0 80 C0 80 C0 C0 80 80 90
 RO27:5683 FF FF FF FF F3 E3 F7 E3 63 E7 47 E7 CF 67 6F 47
 RO27:5693 FF FF FF FF F0 E0 E0 E0 C0 E0 E8 C0 88 C8 DC 88
 RO27:56A3 FF FF FF FF FC 7E 3E 7E 7E 3E 3E 3E 1E 3E 3E 1E
 RO27:56B3 FF FF FF FF 00 00 00 00 1F 0E 1F 0E 1F 0E 0E 00
 RO27:56C3 FF FF FF FF 2F 1F 07 0F 07 0F 07 0F 07 0F 07 0F
 RO27:56D3 E0 C0 E0 C1 E0 C1 E0 C1 E0 C1 E0 C0 FF C0 FF FF
 RO27:56E3 01 03 20 C1 C1 E0 C1 E0 21 C0 00 01 FD 03 FF FF
 RO27:56F3 C0 C0 C2 C1 C3 C1 C3 C1 C2 C1 C0 C0 BF C0 FF FF
 RO27:5703 0E 04 06 FC FE FC FE FC 02 FC 04 06 FE 07 FF FF
 RO27:5713 08 10 00 1E 0E 1E 0E 1E 10 0E 00 00 FE 01 FF FF
 RO27:5723 1C 08 1C 08 1C 08 1C 08 1C 08 1C 08 F7 08 FF FF
 RO27:5733 33 39 33 39 33 39 33 39 33 39 33 39 D7 39 FF FF
 RO27:5743 01 83 C3 81 80 C1 E1 C0 C0 E0 F0 E0 EF F0 FF FF
 RO27:5753 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F 3F FF 3F FF FF
 RO27:5763 E0 E0 F0 E0 F0 E0 E0 F0 F0 F0 F8 F0 F7 F8 FF FF
 RO27:5773 10 90 B8 10 10 38 10 38 3C 38 7C 38 BB 7C FF FF
 RO27:5783 07 4F 4F 0F 1E 0F 0F 1E 0E 1E 1E 1C FB 1C FF FF
 RO27:5793 08 9C 9C 00 00 00 7E 00 3F 7E 7E 7F FE 7F FF FF
 RO27:57A3 0E 1E 1E 0E 0E 0E 06 0E 0E 06 02 06 FD 02 FF FF
 RO27:57B3 00 00 14 08 18 0C 1C 0C 1C 0E 1E 0E FF 0E FF FF
 RO27:57C3 0F 0F 2F 1F 1F 1F 1F 0F 0F 0F 07 0F FF 07 FF FF

 RO27:57D3 FF FF E0 FF F0 E0 F0 E0 F0 E0 F0 E0 F0 E0 F0 E0
 RO27:57E3 FF FF 01 FF 00 00 F0 00 70 F0 70 F0 70 F0 00 00
 RO27:57F3 FF FF E0 FF 60 E0 F0 60 F0 60 F0 60 F0 60 F0 60
 RO27:5803 FF FF 02 FF 02 03 FD 03 FF FF FF FF FB FF 07 03
 RO27:5813 FF FF 00 FF 00 00 07 00 0F 07 0F 07 0F 07 0F 07
 RO27:5823 FF FF 1F FF 07 0F 0F 07 87 07 87 07 87 07 87 07
 RO27:5833 FF FF FC FF F0 F8 F0 F0 F0 F0 F0 F0 F0 F0 F0 F0
 RO27:5843 FF FF 00 FF 01 00 7F 00 FF 7F FF 7F 02 01 00 00
 RO27:5853 FF FF 80 FF C0 80 F8 80 FC F8 FC F8 FC F8 FC F8
 RO27:5863 FF FF 03 FF 07 03 3F 03 3F 3F 3F 3F 3F 3F 3F 3F
 RO27:5873 FF FF E0 FF E0 F0 F0 E0 C0 E0 E8 C0 84 C8 D8 8C
 RO27:5883 FF FF 7E FF 3E 7E 7F 3E 3F 3E 1F 3E 3F 1E 0F 1E
 RO27:5893 FF FF 00 FF 00 00 0E 00 0E 0F 0E 0F 0E 0F 00 00
 RO27:58A3 FF FF 1F FF 1F 0F 07 0F 0F 07 0F 07 0F 07 0F 07
 RO27:58B3 F0 E0 F0 E0 F0 E0 F0 E0 F0 E0 F0 E0 EF F0 FF FF
 RO27:58C3 00 00 40 C1 61 C0 40 E0 70 E0 60 F0 7F F0 FF FF
 RO27:58D3 70 E0 F0 E0 F0 E0 70 E0 F0 60 60 60 BF 60 FF FF
 RO27:58E3 07 03 FF FF FF FF FF FF FD 03 00 03 FE 03 FF FF
 RO27:58F3 0F 07 0F 07 0F 07 0F 07 07 00 00 00 FF 00 FF FF
 RO27:5903 87 07 87 07 87 07 87 07 0F 07 07 0F EF 1F FF FF
 RO27:5913 F0 F0 F8 F0 FF F8 FF FF FF F0 F8 F0 F7 F8 FF FF
 RO27:5923 00 00 00 00 E0 00 F0 E0 E0 00 01 00 FD 03 FF FF
 RO27:5933 FC F8 FC F8 FC F8 FC F8 FC F8 FC F8 FF F8 FF FF
 RO27:5943 3F 3F 3F 3F 3F 3F 3E 3F 3E 3E 3E 3C DF 3C FF FF
 RO27:5953 8E 9C 9C 00 00 00 01 3E 3E 7F 7F 7F FF 7F FF FF
 RO27:5963 1F 0E 0F 0E 07 0E 0F 06 07 06 86 02 FD 02 FF FF
 RO27:5973 00 00 08 0C 0C 0C 0E 0C 0E 0E 0F 0E F6 0F FF FF
 RO27:5983 07 0F 1F 1F 0F 1F 0F 0F 07 0F 0F 07 FB 07 FF FF
 RO27:5993 FF FF 81 FF C3 81 83 C1 C1 C1 E0 C1 E1 C0 C1 E0
 RO27:59A3 FF FF C0 FF E1 C0 C0 C0 80 C0 C0 80 C0 80 80 90
 RO27:59B3 FF FF E0 FF F0 E2 F4 E2 60 E6 C4 66 EC 46 6C 46
 RO27:59C3 FF FF 0E FF 1E 0E 1F 0E 1F 0E 1F 0E 1F 0E 00 00
 RO27:59D3 FF FF 04 FF 06 0C 0E 0C 0E 0C 0E 0C 0E 0C 0E 0C
 RO27:59E3 FF FF 08 FF 18 08 03 18 0F 1F 0F 1F 0F 1F 0F 1F
 RO27:59F3 FF FF 00 FF 00 00 03 00 07 83 07 83 07 83 07 83
 RO27:5A03 FF FF 40 FF 00 60 20 60 E1 E0 E1 E0 E1 E0 E0 E0
 RO27:5A13 FF FF 03 FF 07 03 FB 03 FF FF FF FF FB FF 07 03
 RO27:5A23 FF FF F0 FF F0 F8 F8 F8 F8 F8 F9 F8 F8 F9 F9 F9
 RO27:5A33 FF FF 1F FF 0F 1E 1E 0E 0C 0E 06 0C 0C 04 00 04
 RO27:5A43 FF FF 03 FF 03 03 07 03 07 03 87 03 07 83 87 83
 RO27:5A53 FF FF C0 FF C0 80 83 00 87 07 87 07 87 07 87 07
 RO27:5A63 FF FF 0F FF 03 07 06 03 83 82 C3 82 C3 82 C3 82
 RO27:5A73 FF FF 80 FF 80 00 07 00 07 0F 07 0F 07 0F 07 0F
 RO27:5A83 FF FF 1E FF 06 0E 07 06 83 06 83 06 83 06 83 06
 RO27:5A93 FF FF 03 FF 03 03 03 01 01 01 00 41 20 40 00 60
 RO27:5AA3 FF FF C7 FF EF C7 EF C7 EF C7 EF C7 EF C7 6F C7
 RO27:5AB3 E0 E0 F0 E0 F0 E0 E0 F0 F0 F0 F8 F0 F7 F8 FF FF
 RO27:5AC3 10 90 B8 10 10 38 18 38 3C 38 7C 38 BB 7C FF FF
 RO27:5AD3 04 4E 4C 0E 1C 0E 0C 1E 0C 1E 1C 1E DD 3E FF FF
 RO27:5AE3 00 00 1F 0E 1F 0E 1F 0E 1F 0E 1E 0E FF 0E FF FF
 RO27:5AF3 0E 0C 0E 0C 0E 0C 0E 0C 0E 0C 0E 0C F7 0C FF FF
 RO27:5B03 0F 1F 0F 1F 0F 1F 0F 1F 0F 1F 0F 1F EF 1F FF FF
 RO27:5B13 07 83 07 83 07 83 07 83 07 83 07 83 7F 83 FF FF
 RO27:5B23 E0 E0 E1 E0 E1 E0 E1 E0 E0 E0 C0 E0 DF E0 FF FF
 RO27:5B33 07 03 FF FF FF FF FF FF FD 03 03 03 FF 03 FF FF
 RO27:5B43 F9 F9 F9 F9 F9 F9 F9 F9 F9 F9 F0 F9 F6 F9 FF FF
 RO27:5B53 85 00 00 81 81 81 C3 81 81 C3 C3 C3 DB E7 FF FF
 RO27:5B63 87 83 87 83 87 83 87 83 87 83 03 83 7F 83 FF FF
 RO27:5B73 87 07 87 07 87 07 87 07 87 00 80 80 DF E0 FF FF
 RO27:5B83 C3 82 C3 82 C3 82 C3 82 82 03 03 07 F7 0F FF FF
 RO27:5B93 07 0F 07 0F 07 0F 07 0F 07 00 80 00 BF C0 FF FF
 RO27:5BA3 83 06 83 06 83 06 83 06 07 06 0E 06 EF 1E FF FF
 RO27:5BB3 30 60 20 70 38 70 30 78 3C 78 38 7C BD 7E FF FF
 RO27:5BC3 6F 47 2F 47 6F 07 2F 07 0F 07 0F 07 F7 0F FF FF
 RO27:5BD3 FF FF 81 FF C3 81 81 C1 E0 C1 C1 E0 C0 E0 F0 E0
 RO27:5BE3 FF FF F8 FF FD F8 F8 F9 F3 F9 F9 F3 F3 F3 67 F3
 RO27:5BF3 FF FF 03 FF 03 83 87 83 87 83 87 83 87 83 87 83
 RO27:5C03 FF FF C0 FF C0 80 87 00 0F 07 0F 07 0F 07 0F 07
 RO27:5C13 FF FF 10 FF 10 10 C7 10 EE FF FE FF FE FF FE FF
 RO27:5C23 FF FF 00 FF 00 00 07 00 0F 07 0F 07 0F 07 0F 07
 RO27:5C33 FF FF E0 FF 60 C0 01 C0 C3 83 C3 83 C3 83 C3 83
 RO27:5C43 FF FF 07 FF 05 03 C3 01 E1 C1 E1 C1 E1 C1 E1 C1
 RO27:5C53 FF FF 00 FF 00 80 83 80 87 83 87 83 87 83 80 80
 RO27:5C63 FF FF 0E FF 06 03 81 03 C1 83 C1 83 C1 83 01 03
 RO27:5C73 FF FF 07 FF 07 03 83 03 03 81 C0 81 C1 C0 C0 E0
 RO27:5C83 FF FF C3 FF E3 C7 CF C7 CF 8F 0F 9F BF 1F 1F 3F
 RO27:5C93 E0 F0 F0 F0 F8 F0 F0 F8 F8 F8 FC F8 FB FC FF FF
 RO27:5CA3 F3 67 47 67 2F 47 47 0F 1F 0F 0F 1F FF 1F FF FF
 RO27:5CB3 87 83 87 83 87 83 87 83 87 83 07 83 7F 83 FF FF
 RO27:5CC3 0F 07 0F 07 0F 07 0F 07 87 00 00 80 9F E0 FF FF
 RO27:5CD3 FE FF FE FF FE FF FE FF EE 1F 0E 1F EE 1F FF FF
 RO27:5CE3 0F 07 0F 07 0F 07 0F 07 0F 07 0F 07 F7 0F FF FF
 RO27:5CF3 C3 83 C3 83 C3 83 C3 83 C3 80 C0 C0 EF F0 FF FF
 RO27:5D03 E1 C1 E1 C1 E1 C1 E1 C1 C3 01 01 03 FB 07 FF FF
 RO27:5D13 80 80 87 82 86 83 87 83 87 83 07 83 7F 83 FF FF
 RO27:5D23 07 03 0F 07 03 07 87 03 03 83 83 81 BF C1 FF FF
 RO27:5D33 F0 E0 E0 F0 F0 F0 F0 F0 F0 F0 E0 F0 EF F0 FF FF
 RO27:5D43 7F 3F 7F 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF FF
 RO27:5D53 FF FF FF FF FE FE FF FE FF FE FF FE FF FE FF FE
 RO27:5D63 FF FF FF FF 00 00 00 00 0F 0E 0F 0E 0F 0E 0F 0E
 RO27:5D73 FF FF FF FF 2E 1C 1C 0E 04 0E 04 0E 04 0E 04 0E
 RO27:5D83 FF FF FF FF 00 00 00 00 1F 0F 1F 0F 1F 0F 0F 00
 RO27:5D93 FF FF FF FF 70 20 70 20 B0 E0 F0 E0 F0 E0 B0 60
 RO27:5DA3 FF FF FF FF 02 03 01 03 7F FF 7F FF 7F FF FB 03
 RO27:5DB3 FF FF FF FF 00 00 00 00 0F 07 0F 07 0F 07 07 00
 RO27:5DC3 FF FF FF FF 3F 1F 1F 1F DF FF FF FF FF FE FE 1E
 RO27:5DD3 FF FF FF FF 83 81 01 81 80 01 21 00 40 20 30 60
 RO27:5DE3 FF FF F0 FF F8 F0 FF F0 FF FF FF FF 7F FF FF 7F
 RO27:5DF3 FF FF 00 FF 00 00 07 00 87 07 87 07 87 07 87 07
 RO27:5E03 FF FF 7F FF FF 7F FF 7F FF FF FF FF FF FF FF FF
 RO27:5E13 FF FE FF FE FF FE FF FE FF FE FF FE FF FE FF FF
 RO27:5E23 0F 0E 0F 0E 0F 0E 0F 0E 01 0E 00 00 FF 00 FF FF
 RO27:5E33 04 0E 04 0E 04 0E 04 0E 0C 0E 1C 0E FD 1E FF FF
 RO27:5E43 00 00 10 0F 1F 0F 1F 0F 10 0F 00 00 FF 00 FF FF
 RO27:5E53 30 60 30 E0 F0 E0 F0 E0 70 A0 70 20 FF 20 FF FF
 RO27:5E63 03 03 07 FB 7F FF 7F FF 7F FF 7F FF 7E FF FF FF
 RO27:5E73 00 00 08 07 0F 07 0F 07 08 07 00 00 FF 00 FF FF
 RO27:5E83 3C 1E 1C FC F8 FC F9 F8 01 F9 13 11 ED 13 FF FF
 RO27:5E93 60 70 F0 00 00 00 F8 00 FC F8 F8 FC FB FC FF FF
 RO27:5EA3 7F 7F 3F 7F 7F 3F 3F 3F 1F 3F 1F 1F EF 1F FF FF
 RO27:5EB3 87 07 87 07 87 07 87 07 87 07 87 07 FB 07 FF FF
 RO27:5EC3 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF

 RO27:5ED3 1F 03 15 02 0B 01 00 00
 RO27:5EDB 1F 01 75 00 4B 00 00 00
 RO27:5EE3 18 63 10 42 08 21 00 00
 RO27:5EEB 00 00 00 00 00 00 00 00
 RO27:5EF3 00 00 00 00 00 00 00 00
 RO27:5EFB 00 00 00 00 00 00 00 00
 RO27:5F03 00 00 00 00 00 00 00 00
 RO27:5F0B 00 00 00 00 00 00 00 00

 RO27:5F13 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:5F16 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:5F19 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:5F1C AF               xor  a
 RO27:5F1D E0 95            ld   (ff00+95),a
 RO27:5F1F E0 97            ld   (ff00+97),a
 RO27:5F21 E0 98            ld   (ff00+98),a
 RO27:5F23 3E 04            ld   a,04
 RO27:5F25 E0 96            ld   (ff00+96),a    // SCY = 4
 RO27:5F27 EF 10 A8 68                          // Sets up basic covered graphics values
 RO27:5F2B EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:5F2F CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:5F32 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:5F35 3E 00            ld   a,00
 RO27:5F37 E0 83            ld   (ff00+83),a
 RO27:5F39 E0 4F            ld   (ff00+4F),a
 RO27:5F3B 3E 00            ld   a,00
 RO27:5F3D EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO27:5F41 F0 83            ld   a,(ff00+83)
 RO27:5F43 F5               push af
 RO27:5F44 3E 01            ld   a,01
 RO27:5F46 E0 83            ld   (ff00+83),a
 RO27:5F48 E0 4F            ld   (ff00+4F),a
 RO27:5F4A 11 D3 65         ld   de,65D3
 RO27:5F4D 21 00 90         ld   hl,9000
 RO27:5F50 01 20 02         ld   bc,0220
 RO27:5F53 CD 50 3B         call 3B50           // ($9000 ~ $921F) = ($65D3 ~ $67F2)
 RO27:5F56 11 B1 67         ld   de,67B1
 RO27:5F59 21 20 92         ld   hl,9220
 RO27:5F5C 01 10 00         ld   bc,0010
 RO27:5F5F EF 14 50 3B                          // VRA1($9220 ~ $922F) = $14:($67B1 ~ $67C0) (Separating Dash)
 RO27:5F63 F1               pop  af
 RO27:5F64 E0 83            ld   (ff00+83),a
 RO27:5F66 E0 4F            ld   (ff00+4F),a
 RO27:5F68 CD F2 61         call 61F2           // VRA1($9230) to VRA1($95EF) holds non-ruined property map graphics
 RO27:5F6B 3E 00            ld   a,00
 RO27:5F6D 06 08            ld   b,08
 RO27:5F6F 21 F3 67         ld   hl,67F3
 RO27:5F72 CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($67F3) to ($6832)
 RO27:5F75 CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO27:5F78 CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO27:5F7B 3E 05            ld   a,05
 RO27:5F7D EF 0B 5D 76                          // Establishes faction color palettes in ($C4E0) table (A is number of palettes skipped in table)
 RO27:5F81 01 0F 01         ld   bc,010F        // Map Name window
 RO27:5F84 11 03 12         ld   de,1203
 RO27:5F87 EF 22 47 62                          // Basic setup for table 1~18,15~17 including defaulted palette for interior's tiles
 RO27:5F8B FA 83 C8         ld   a,(C883)
 RO27:5F8E 3C               inc  a              // Map #
 RO27:5F8F 01 10 02         ld   bc,0210        // 2,16
 RO27:5F92 16 02            ld   d,02
 RO27:5F94 CD 37 32         call 3237           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:5F97 01 09 00         ld   bc,0009
 RO27:5F9A 3E 00            ld   a,00
 RO27:5F9C 21 65 CC         ld   hl,CC65
 RO27:5F9F CD 79 3B         call 3B79           // (HL ~ HL+BC-1) = A
 RO27:5FA2 11 A5 C8         ld   de,C8A5
 RO27:5FA5 21 65 CC         ld   hl,CC65
 RO27:5FA8 01 08 00         ld   bc,0008
 RO27:5FAB CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:5FAE 01 10 05         ld   bc,0510        // 5,16
 RO27:5FB1 21 65 CC         ld   hl,CC65        // Map Name
 RO27:5FB4 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:5FB7 3E 08            ld   a,08
 RO27:5FB9 01 10 11         ld   bc,1110
 RO27:5FBC 11 01 01         ld   de,0101
 RO27:5FBF 26 19            ld   h,19
 RO27:5FC1 EF 15 FD 67                          // (VRA0:$9800 17,16) = $19, (VRA1:$9800 17,16) = 8 (Day symbol)
 RO27:5FC5 FA 33 C6         ld   a,(C633)
 RO27:5FC8 CB 3F            srl  a
 RO27:5FCA 3C               inc  a              // Day #
 RO27:5FCB 01 10 0F         ld   bc,0F10        // 15,16
 RO27:5FCE 16 02            ld   d,02
 RO27:5FD0 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:5FD3 01 01 01         ld   bc,0101
 RO27:5FD6 11 0E 06         ld   de,060E
 RO27:5FD9 EF 22 47 62                          // Basic setup for table rectangle 1~6,1~14 including defaulted palette for interior's tiles
 RO27:5FDD 01 02 02         ld   bc,0202
 RO27:5FE0 21 A0 65         ld   hl,65A0        // "Unit"
 RO27:5FE3 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:5FE6 FA 09 CD         ld   a,(CD09)
 RO27:5FE9 01 03 04         ld   bc,0403
 RO27:5FEC 16 02            ld   d,02
 RO27:5FEE CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:5FF1 01 04 02         ld   bc,0204
 RO27:5FF4 CD D4 0E         call 0ED4           // HL = $9882
 RO27:5FF7 3E 23            ld   a,23
 RO27:5FF9 06 01            ld   b,01
 RO27:5FFB 0E 05            ld   c,05
 RO27:5FFD 16 02            ld   d,02           // Red Star City
 RO27:5FFF EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:6003 FA 4C C6         ld   a,(C64C)       // Red Star's City count
 RO27:6006 01 05 04         ld   bc,0405
 RO27:6009 16 02            ld   d,02
 RO27:600B CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:600E 01 06 02         ld   bc,0206
 RO27:6011 CD D4 0E         call 0ED4           // HL = $98C2
 RO27:6014 3E 27            ld   a,27
 RO27:6016 06 01            ld   b,01
 RO27:6018 0E 05            ld   c,05
 RO27:601A 16 04            ld   d,04           // Red Star Factory
 RO27:601C EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:6020 FA 4E C6         ld   a,(C64E)       // Red Star's Factory count
 RO27:6023 01 07 04         ld   bc,0407
 RO27:6026 16 02            ld   d,02
 RO27:6028 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:602B 01 08 02         ld   bc,0208
 RO27:602E CD D4 0E         call 0ED4           // HL = $9902
 RO27:6031 3E 2B            ld   a,2B
 RO27:6033 06 01            ld   b,01
 RO27:6035 0E 05            ld   c,05
 RO27:6037 16 06            ld   d,06           // Red Star Airport
 RO27:6039 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:603D FA 50 C6         ld   a,(C650)       // Red Star's Airport count
 RO27:6040 01 09 04         ld   bc,0409
 RO27:6043 16 02            ld   d,02
 RO27:6045 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:6048 01 0A 02         ld   bc,020A
 RO27:604B CD D4 0E         call 0ED4           // HL = $9942
 RO27:604E 3E 2F            ld   a,2F
 RO27:6050 06 01            ld   b,01
 RO27:6052 0E 05            ld   c,05
 RO27:6054 16 09            ld   d,09           // Red Star Harbor
 RO27:6056 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:605A FA 53 C6         ld   a,(C653)       // Red Star's Harbor count
 RO27:605D 01 0B 04         ld   bc,040B
 RO27:6060 16 02            ld   d,02
 RO27:6062 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:6065 01 0C 02         ld   bc,020C
 RO27:6068 CD D4 0E         call 0ED4           // HL = $9982
 RO27:606B 3E 33            ld   a,33
 RO27:606D 06 01            ld   b,01
 RO27:606F 0E 05            ld   c,05
 RO27:6071 16 0B            ld   d,0B           // Red Star Communication Tower
 RO27:6073 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:6077 FA 55 C6         ld   a,(C655)       // Red Star's Communication Tower count
 RO27:607A 01 0D 04         ld   bc,040D
 RO27:607D 16 02            ld   d,02
 RO27:607F CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:6082 01 01 07         ld   bc,0701
 RO27:6085 11 0E 06         ld   de,060E
 RO27:6088 EF 22 47 62                          // Basic setup for table rectangle 7~12,1~14 including defaulted palette for interior's tiles
 RO27:608C 01 04 08         ld   bc,0804
 RO27:608F CD D4 0E         call 0ED4           // HL = $9888
 RO27:6092 3E 37            ld   a,37
 RO27:6094 06 01            ld   b,01
 RO27:6096 0E 05            ld   c,05
 RO27:6098 16 17            ld   d,17           // Neutral City
 RO27:609A EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:609E FA 61 C6         ld   a,(C661)       // Neutral City count
 RO27:60A1 01 05 0A         ld   bc,0A05
 RO27:60A4 16 02            ld   d,02
 RO27:60A6 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:60A9 01 06 08         ld   bc,0806
 RO27:60AC CD D4 0E         call 0ED4           // HL = $98C8
 RO27:60AF 3E 3B            ld   a,3B
 RO27:60B1 06 01            ld   b,01
 RO27:60B3 0E 05            ld   c,05
 RO27:60B5 16 19            ld   d,19           // Neutral Factory
 RO27:60B7 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:60BB FA 63 C6         ld   a,(C663)       // Neutral Factory count
 RO27:60BE 01 07 0A         ld   bc,0A07
 RO27:60C1 16 02            ld   d,02
 RO27:60C3 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:60C6 01 08 08         ld   bc,0808
 RO27:60C9 CD D4 0E         call 0ED4           // HL = $9908
 RO27:60CC 3E 3F            ld   a,3F
 RO27:60CE 06 01            ld   b,01
 RO27:60D0 0E 05            ld   c,05
 RO27:60D2 16 1B            ld   d,1B           // Neutral Airport
 RO27:60D4 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:60D8 FA 65 C6         ld   a,(C665)       // Neutral Airport count
 RO27:60DB 01 09 0A         ld   bc,0A09
 RO27:60DE 16 02            ld   d,02
 RO27:60E0 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:60E3 01 0A 08         ld   bc,080A
 RO27:60E6 CD D4 0E         call 0ED4           // HL = $9948
 RO27:60E9 3E 43            ld   a,43
 RO27:60EB 06 01            ld   b,01
 RO27:60ED 0E 05            ld   c,05
 RO27:60EF 16 1D            ld   d,1D           // Neutral Harbor
 RO27:60F1 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:60F5 FA 67 C6         ld   a,(C667)       // Neutral Harbor count
 RO27:60F8 01 0B 0A         ld   bc,0A0B
 RO27:60FB 16 02            ld   d,02
 RO27:60FD CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:6100 01 0C 08         ld   bc,080C
 RO27:6103 CD D4 0E         call 0ED4           // HL = $9988
 RO27:6106 3E 47            ld   a,47
 RO27:6108 06 01            ld   b,01
 RO27:610A 0E 05            ld   c,05
 RO27:610C 16 1F            ld   d,1F           // Neutral Communication Tower
 RO27:610E EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:6112 FA 69 C6         ld   a,(C669)       // Neutral Communication Tower count
 RO27:6115 01 0D 0A         ld   bc,0A0D
 RO27:6118 16 02            ld   d,02
 RO27:611A CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:611D 01 01 0D         ld   bc,0D01
 RO27:6120 11 0E 06         ld   de,060E
 RO27:6123 EF 22 47 62                          // Basic setup for table rectangle 13~18,1~14 including defaulted palette for interior's tiles
 RO27:6127 01 02 0E         ld   bc,0E02
 RO27:612A 21 A0 65         ld   hl,65A0        // "Unit"
 RO27:612D CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:6130 FA 0A CD         ld   a,(CD0A)
 RO27:6133 01 03 10         ld   bc,1003
 RO27:6136 16 02            ld   d,02
 RO27:6138 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:613B 01 04 0E         ld   bc,0E04
 RO27:613E CD D4 0E         call 0ED4           // HL = $988E
 RO27:6141 3E 4B            ld   a,4B
 RO27:6143 06 01            ld   b,01
 RO27:6145 0E 05            ld   c,05
 RO27:6147 16 0D            ld   d,0D           // White Moon City
 RO27:6149 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:614D FA 57 C6         ld   a,(C657)       // White Moon's City count
 RO27:6150 01 05 10         ld   bc,1005
 RO27:6153 16 02            ld   d,02
 RO27:6155 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:6158 01 06 0E         ld   bc,0E06
 RO27:615B CD D4 0E         call 0ED4           // HL = $98CE
 RO27:615E 3E 4F            ld   a,4F
 RO27:6160 06 01            ld   b,01
 RO27:6162 0E 05            ld   c,05
 RO27:6164 16 0F            ld   d,0F           // White Moon Factory
 RO27:6166 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:616A FA 59 C6         ld   a,(C659)       // White Moon's Factory count
 RO27:616D 01 07 10         ld   bc,1007
 RO27:6170 16 02            ld   d,02
 RO27:6172 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:6175 01 08 0E         ld   bc,0E08
 RO27:6178 CD D4 0E         call 0ED4           // HL = $990E
 RO27:617B 3E 53            ld   a,53
 RO27:617D 06 01            ld   b,01
 RO27:617F 0E 05            ld   c,05
 RO27:6181 16 11            ld   d,11           // White Moon Airport
 RO27:6183 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:6187 FA 5B C6         ld   a,(C65B)       // White Moon's Airport count
 RO27:618A 01 09 10         ld   bc,1009
 RO27:618D 16 02            ld   d,02
 RO27:618F CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:6192 01 0A 0E         ld   bc,0E0A
 RO27:6195 CD D4 0E         call 0ED4           // HL = $994E
 RO27:6198 3E 57            ld   a,57
 RO27:619A 06 01            ld   b,01
 RO27:619C 0E 05            ld   c,05
 RO27:619E 16 14            ld   d,14           // White Moon Harbor
 RO27:61A0 EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:61A4 FA 5E C6         ld   a,(C65E)       // White Moon's Harbor count
 RO27:61A7 01 0B 10         ld   bc,100B
 RO27:61AA 16 02            ld   d,02
 RO27:61AC CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:61AF 01 0C 0E         ld   bc,0E0C
 RO27:61B2 CD D4 0E         call 0ED4           // HL = $998E
 RO27:61B5 3E 5B            ld   a,5B
 RO27:61B7 06 01            ld   b,01
 RO27:61B9 0E 05            ld   c,05
 RO27:61BB 16 16            ld   d,16           // White Moon Communication Tower
 RO27:61BD EF 0B CF 76                          // Establishes terrain graphics at HL (A is tile location on character base, B is palette's VRAM bank, C is first palette + 3, D is terrain type)
 RO27:61C1 FA 60 C6         ld   a,(C660)       // White Moon's Communication Tower count
 RO27:61C4 01 0D 10         ld   bc,100D
 RO27:61C7 16 02            ld   d,02
 RO27:61C9 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:61CC F0 83            ld   a,(ff00+83)
 RO27:61CE F5               push af
 RO27:61CF 3E 20            ld   a,20
 RO27:61D1 0E 00            ld   c,00
 RO27:61D3 06 15            ld   b,15
 RO27:61D5 11 52 6F         ld   de,6F52        // Pointing Up Arrow
 RO27:61D8 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO27:61DB EA 3F C9         ld   (C93F),a
 RO27:61DE 01 18 58         ld   bc,5818
 RO27:61E1 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO27:61E4 F1               pop  af
 RO27:61E5 E0 83            ld   (ff00+83),a
 RO27:61E7 E0 4F            ld   (ff00+4F),a
 RO27:61E9 C9               ret                 // Establishes Intel bottom half screen graphics
 RO27:61EA AF               xor  a
 RO27:61EB EA 3D C9         ld   (C93D),a       // Stop showing property counts on Intel screen
 RO27:61EE CD 1D 63         call 631D           // Establishes Intel top half screen graphics
 RO27:61F1 C9               ret                 // Sets up Intel top half
 RO27:61F2 3E 01            ld   a,01
 RO27:61F4 E0 83            ld   (ff00+83),a
 RO27:61F6 E0 4F            ld   (ff00+4F),a
 RO27:61F8 3E 02            ld   a,02
 RO27:61FA 21 30 92         ld   hl,9230
 RO27:61FD EF 0B 77 76                          // (HL ~ HL+63) holds Red City map graphics
 RO27:6201 3E 04            ld   a,04
 RO27:6203 21 70 92         ld   hl,9270
 RO27:6206 EF 0B 77 76                          // (HL ~ HL+63) holds Red Factory map graphics
 RO27:620A 3E 06            ld   a,06
 RO27:620C 21 B0 92         ld   hl,92B0
 RO27:620F EF 0B 77 76                          // (HL ~ HL+63) holds Red Airport map graphics
 RO27:6213 3E 09            ld   a,09
 RO27:6215 21 F0 92         ld   hl,92F0
 RO27:6218 EF 0B 77 76                          // (HL ~ HL+63) holds Red Harbor map graphics
 RO27:621C 3E 0B            ld   a,0B
 RO27:621E 21 30 93         ld   hl,9330
 RO27:6221 EF 0B 77 76                          // (HL ~ HL+63) holds Red Communication Tower map graphics
 RO27:6225 3E 17            ld   a,17
 RO27:6227 21 70 93         ld   hl,9370
 RO27:622A EF 0B 77 76                          // (HL ~ HL+63) holds Red Neutral City map graphics
 RO27:622E 3E 19            ld   a,19
 RO27:6230 21 B0 93         ld   hl,93B0
 RO27:6233 EF 0B 77 76                          // (HL ~ HL+63) holds Neutral Factory map graphics
 RO27:6237 3E 1B            ld   a,1B
 RO27:6239 21 F0 93         ld   hl,93F0
 RO27:623C EF 0B 77 76                          // (HL ~ HL+63) holds Neutral Airport map graphics
 RO27:6240 3E 1D            ld   a,1D
 RO27:6242 21 30 94         ld   hl,9430
 RO27:6245 EF 0B 77 76                          // (HL ~ HL+63) holds Neutral Harbor map graphics
 RO27:6249 3E 1F            ld   a,1F
 RO27:624B 21 70 94         ld   hl,9470
 RO27:624E EF 0B 77 76                          // (HL ~ HL+63) holds Neutral Communication Tower map graphics
 RO27:6252 3E 0D            ld   a,0D
 RO27:6254 21 B0 94         ld   hl,94B0
 RO27:6257 EF 0B 77 76                          // (HL ~ HL+63) holds White City map graphics
 RO27:625B 3E 0F            ld   a,0F
 RO27:625D 21 F0 94         ld   hl,94F0
 RO27:6260 EF 0B 77 76                          // (HL ~ HL+63) holds White Factory map graphics
 RO27:6264 3E 11            ld   a,11
 RO27:6266 21 30 95         ld   hl,9530
 RO27:6269 EF 0B 77 76                          // (HL ~ HL+63) holds White Airport map graphics
 RO27:626D 3E 14            ld   a,14
 RO27:626F 21 70 95         ld   hl,9570
 RO27:6272 EF 0B 77 76                          // (HL ~ HL+63) holds White Harbor map graphics
 RO27:6276 3E 16            ld   a,16
 RO27:6278 21 B0 95         ld   hl,95B0
 RO27:627B EF 0B 77 76                          // (HL ~ HL+63) holds White Communication Tower map graphics
 RO27:627F C9               ret                 // VRA1($9230) to VRA1($95EF) holds non-ruined property map graphics
 RO27:6280 3E 00            ld   a,00
 RO27:6282 E0 83            ld   (ff00+83),a
 RO27:6284 E0 4F            ld   (ff00+4F),a
 RO27:6286 C5               push bc
 RO27:6287 CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO27:628A 01 08 00         ld   bc,0008
 RO27:628D 3E 22            ld   a,22
 RO27:628F CD 79 3B         call 3B79           // (HL ~ HL+BC-1) = A
 RO27:6292 3E 01            ld   a,01
 RO27:6294 E0 83            ld   (ff00+83),a
 RO27:6296 E0 4F            ld   (ff00+4F),a
 RO27:6298 C1               pop  bc
 RO27:6299 CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO27:629C 01 08 00         ld   bc,0008
 RO27:629F 3E 08            ld   a,08
 RO27:62A1 CD 79 3B         call 3B79           // (HL ~ HL+BC-1) = 8
 RO27:62A4 3E 00            ld   a,00
 RO27:62A6 E0 83            ld   (ff00+83),a
 RO27:62A8 E0 4F            ld   (ff00+4F),a
 RO27:62AA C9               ret                 // Coordinates BC for 8 spaces holds tile $22 from VRA1
 RO27:62AB CD EA 61         call 61EA           // Sets up Intel top half
 RO27:62AE CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:62B1 CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO27:62B4 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:62B7 3E 00            ld   a,00
 RO27:62B9 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:62BD F0 92            ld   a,(ff00+92)
 RO27:62BF CB 77            bit  6,a            // Up
 RO27:62C1 28 1B            jr   z,62DE
 RO27:62C3 FA 3D C9         ld   a,(C93D)
 RO27:62C6 FE 00            cp   a,00
 RO27:62C8 28 E7            jr   z,62B1         // Further wait for button input without doing anything if already on top half
 RO27:62CA 3E 01            ld   a,01
 RO27:62CC CD 44 38         call 3844
 RO27:62CF AF               xor  a
 RO27:62D0 EA 3D C9         ld   (C93D),a
 RO27:62D3 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:62D6 CD EA 61         call 61EA           // Sets up Intel top half
 RO27:62D9 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:62DC 18 D3            jr   62B1           // Further wait for button input after pressing Up
 RO27:62DE CB 7F            bit  7,a            // Down
 RO27:62E0 28 17            jr   z,62F9
 RO27:62E2 FA 3D C9         ld   a,(C93D)
 RO27:62E5 FE 01            cp   a,01
 RO27:62E7 28 C8            jr   z,62B1         // Further wait for button input without doing anything if already on bottom half
 RO27:62E9 3E 01            ld   a,01
 RO27:62EB CD 44 38         call 3844
 RO27:62EE CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:62F1 CD 97 65         call 6597           // Sets up Intel bottom half
 RO27:62F4 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:62F7 18 B8            jr   62B1           // Further wait for button input after pressing Down
 RO27:62F9 CB 47            bit  0,a            // A
 RO27:62FB 28 03            jr   z,6300
 RO27:62FD AF               xor  a
 RO27:62FE 18 0A            jr   630A           // Ends with A = 0 for A Button pressed
 RO27:6300 CB 4F            bit  1,a            // B
 RO27:6302 28 04            jr   z,6308
 RO27:6304 3E FF            ld   a,FF
 RO27:6306 18 02            jr   630A           // Ends with A = -1 for B Button pressed
 RO27:6308 18 A7            jr   62B1           // Waiting for button input
 RO27:630A F5               push af
 RO27:630B 3E 0C            ld   a,0C
 RO27:630D CD 44 38         call 3844
 RO27:6310 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:6313 AF               xor  a
 RO27:6314 E0 95            ld   (ff00+95),a
 RO27:6316 E0 96            ld   (ff00+96),a
 RO27:6318 CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO27:631B F1               pop  af
 RO27:631C C9               ret                 // Controls for Map Intel screen; ends with A = 0 for A Button press, or -1 for B Button press
 RO27:631D CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:6320 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:6323 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:6326 AF               xor  a
 RO27:6327 E0 95            ld   (ff00+95),a
 RO27:6329 E0 96            ld   (ff00+96),a
 RO27:632B E0 97            ld   (ff00+97),a
 RO27:632D E0 98            ld   (ff00+98),a
 RO27:632F EF 10 A8 68                          // Sets up basic covered graphics values
 RO27:6333 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:6337 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:633A CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:633D 3E 00            ld   a,00
 RO27:633F E0 83            ld   (ff00+83),a
 RO27:6341 E0 4F            ld   (ff00+4F),a
 RO27:6343 3E 00            ld   a,00
 RO27:6345 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO27:6349 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:634C AF               xor  a
 RO27:634D E0 95            ld   (ff00+95),a
 RO27:634F 3E 00            ld   a,00
 RO27:6351 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO27:6355 F0 83            ld   a,(ff00+83)
 RO27:6357 F5               push af
 RO27:6358 3E 01            ld   a,01
 RO27:635A E0 83            ld   (ff00+83),a
 RO27:635C E0 4F            ld   (ff00+4F),a
 RO27:635E 11 D3 65         ld   de,65D3
 RO27:6361 21 00 90         ld   hl,9000
 RO27:6364 01 20 02         ld   bc,0220
 RO27:6367 CD 50 3B         call 3B50           // VRA1($9000~$921F) = ($65D3~$65E2) (Results screen added graphics)
 RO27:636A 11 B1 67         ld   de,67B1
 RO27:636D 21 20 92         ld   hl,9220
 RO27:6370 01 10 00         ld   bc,0010
 RO27:6373 EF 14 50 3B                          // VRA1($9220~$922F) = $14:($67B1~$67C0) (Separating dash)
 RO27:6377 F1               pop  af
 RO27:6378 E0 83            ld   (ff00+83),a
 RO27:637A E0 4F            ld   (ff00+4F),a
 RO27:637C FA 3F C9         ld   a,(C93F)
 RO27:637F CD 5F 2F         call 2F5F           // set 0,($D000 + ($C93F) * 16) WRAM bank 4 (Pointing Up Arrow Sprite disabled)
 RO27:6382 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:6385 3E 00            ld   a,00
 RO27:6387 06 08            ld   b,08
 RO27:6389 21 F3 67         ld   hl,67F3
 RO27:638C CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($67F3) to ($6832)
 RO27:638F CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO27:6392 CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO27:6395 01 00 00         ld   bc,0000
 RO27:6398 11 12 0A         ld   de,0A12
 RO27:639B EF 10 09 6A                          // Tile placement and coloring handled for [$9800] table 10x18 using [$DC6C] and [$DC6D] as the base
 RO27:639F F0 83            ld   a,(ff00+83)
 RO27:63A1 F5               push af
 RO27:63A2 3E 01            ld   a,01
 RO27:63A4 E0 83            ld   (ff00+83),a
 RO27:63A6 E0 4F            ld   (ff00+4F),a
 RO27:63A8 AF               xor  a
 RO27:63A9 01 01 01         ld   bc,0101
 RO27:63AC 11 10 08         ld   de,0810
 RO27:63AF EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 1,1 to 8,16
 RO27:63B3 F1               pop  af
 RO27:63B4 E0 83            ld   (ff00+83),a
 RO27:63B6 E0 4F            ld   (ff00+4F),a
 RO27:63B8 3E 0B            ld   a,0B
 RO27:63BA 01 01 04         ld   bc,0401
 RO27:63BD 11 02 02         ld   de,0202
 RO27:63C0 26 1A            ld   h,1A
 RO27:63C2 EF 15 FD 67                          // (VRA0:$9800 4~5,1~2) = $1A~$1D, (VRA1:$9800 4~5,1~2) = 11 (Red Star icon)
 RO27:63C6 3E 00            ld   a,00
 RO27:63C8 E0 83            ld   (ff00+83),a
 RO27:63CA E0 4F            ld   (ff00+4F),a
 RO27:63CC 01 03 01         ld   bc,0103
 RO27:63CF CD D4 0E         call 0ED4           // HL = $9861
 RO27:63D2 11 A5 65         ld   de,65A5        // "Built"
 RO27:63D5 CD 63 0F         call 0F63           // ($9861) holds text for "Built"
 RO27:63D8 FA B4 C8         ld   a,(C8B4)
 RO27:63DB 67               ld   h,a
 RO27:63DC FA B3 C8         ld   a,(C8B3)
 RO27:63DF 6F               ld   l,a            // HL holds Red Star's Built Unit count
 RO27:63E0 01 04 04         ld   bc,0404
 RO27:63E3 16 05            ld   d,05
 RO27:63E5 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:63E8 01 05 01         ld   bc,0105
 RO27:63EB CD D4 0E         call 0ED4           // HL = $98A1
 RO27:63EE 11 AE 65         ld   de,65AE        // "Lost"
 RO27:63F1 CD 63 0F         call 0F63           // ($98A1) holds text for "Lost"
 RO27:63F4 FA B8 C8         ld   a,(C8B8)
 RO27:63F7 67               ld   h,a
 RO27:63F8 FA B7 C8         ld   a,(C8B7)
 RO27:63FB 6F               ld   l,a            // HL holds Red Star's Lost Unit count
 RO27:63FC 01 06 04         ld   bc,0406
 RO27:63FF 16 05            ld   d,05
 RO27:6401 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:6404 01 07 01         ld   bc,0107        // Location of separator dashes
 RO27:6407 CD 80 62         call 6280           // Coordinates BC for 8 spaces holds tile $22 from VRA1
 RO27:640A 01 08 01         ld   bc,0108
 RO27:640D CD D4 0E         call 0ED4           // HL = $9901
 RO27:6410 11 B7 65         ld   de,65B7        // "Gold"
 RO27:6413 CD 63 0F         call 0F63           // ($9901) holds text for "Gold"
 RO27:6416 21 34 C6         ld   hl,C634
 RO27:6419 01 09 04         ld   bc,0409
 RO27:641C 16 05            ld   d,05
 RO27:641E CD A3 32         call 32A3           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL 3 byte reverse holds the number, BC is coordinates, D is the number of digits)
 RO27:6421 01 0A 01         ld   bc,010A
 RO27:6424 CD D4 0E         call 0ED4           // HL = $9941
 RO27:6427 11 BB 65         ld   de,65BB        // "Materials"
 RO27:642A CD 63 0F         call 0F63           // ($9941) holds text for "Materials"
 RO27:642D FA 3A C6         ld   a,(C63A)
 RO27:6430 6F               ld   l,a
 RO27:6431 FA 3B C6         ld   a,(C63B)
 RO27:6434 67               ld   h,a
 RO27:6435 01 0B 04         ld   bc,040B
 RO27:6438 16 05            ld   d,05
 RO27:643A CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:643D 01 0C 01         ld   bc,010C        // Location of separator dashes
 RO27:6440 CD 80 62         call 6280           // Coordinates BC for 8 spaces holds tile $22 from VRA1
 RO27:6443 01 0D 01         ld   bc,010D
 RO27:6446 CD D4 0E         call 0ED4           // HL = $99A1
 RO27:6449 11 BF 65         ld   de,65BF        // "Gold Income"
 RO27:644C CD 63 0F         call 0F63           // ($99A1) holds text for "Gold Income"
 RO27:644F FA 3F C6         ld   a,(C63F)
 RO27:6452 67               ld   h,a
 RO27:6453 FA 3E C6         ld   a,(C63E)
 RO27:6456 6F               ld   l,a
 RO27:6457 01 0E 03         ld   bc,030E
 RO27:645A 16 05            ld   d,05
 RO27:645C CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:645F 01 0E 08         ld   bc,080E
 RO27:6462 CD D4 0E         call 0ED4           // HL = $99C8
 RO27:6465 11 D1 65         ld   de,65D1        // "0"
 RO27:6468 CD 63 0F         call 0F63           // ($99C8) holds "0" (for 1s digit of Gold Income)
 RO27:646B 01 0F 01         ld   bc,010F
 RO27:646E CD D4 0E         call 0ED4           // HL = $99E1
 RO27:6471 11 C8 65         ld   de,65C8        // "Materials Income"
 RO27:6474 CD 63 0F         call 0F63           // ($99E1) holds text for "Materials Income"
 RO27:6477 FA 43 C6         ld   a,(C643)
 RO27:647A 67               ld   h,a
 RO27:647B FA 42 C6         ld   a,(C642)
 RO27:647E 6F               ld   l,a
 RO27:647F 01 10 04         ld   bc,0410
 RO27:6482 16 05            ld   d,05
 RO27:6484 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:6487 01 00 0A         ld   bc,0A00        // Starting White Moon's side
 RO27:648A 11 12 0A         ld   de,0A12
 RO27:648D EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO27:6491 F0 83            ld   a,(ff00+83)
 RO27:6493 F5               push af
 RO27:6494 3E 01            ld   a,01
 RO27:6496 E0 83            ld   (ff00+83),a
 RO27:6498 E0 4F            ld   (ff00+4F),a
 RO27:649A AF               xor  a
 RO27:649B 01 01 0B         ld   bc,0B01
 RO27:649E 11 10 08         ld   de,0810
 RO27:64A1 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 11~18,1~16
 RO27:64A5 F1               pop  af
 RO27:64A6 E0 83            ld   (ff00+83),a
 RO27:64A8 E0 4F            ld   (ff00+4F),a
 RO27:64AA 3E 0B            ld   a,0B
 RO27:64AC 01 01 0E         ld   bc,0E01
 RO27:64AF 11 02 02         ld   de,0202
 RO27:64B2 26 1E            ld   h,1E
 RO27:64B4 EF 15 FD 67                          // (VRA0:$9800 14~15,12) = $1E~$21, (VRA1:$9800 14~15,1~2) = 11 (White Moon icon)
 RO27:64B8 3E 00            ld   a,00
 RO27:64BA E0 83            ld   (ff00+83),a
 RO27:64BC E0 4F            ld   (ff00+4F),a
 RO27:64BE 01 03 0B         ld   bc,0B03
 RO27:64C1 CD D4 0E         call 0ED4           // HL = $986B
 RO27:64C4 11 A5 65         ld   de,65A5        // "Built"
 RO27:64C7 CD 63 0F         call 0F63           // ($986B) holds text for "Built"
 RO27:64CA FA B6 C8         ld   a,(C8B6)
 RO27:64CD 67               ld   h,a
 RO27:64CE FA B5 C8         ld   a,(C8B5)
 RO27:64D1 6F               ld   l,a            // HL holds White Moon's Built Unit count
 RO27:64D2 01 04 0E         ld   bc,0E04
 RO27:64D5 16 05            ld   d,05
 RO27:64D7 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:64DA 01 05 0B         ld   bc,0B05
 RO27:64DD CD D4 0E         call 0ED4           // HL = $98AB
 RO27:64E0 11 AE 65         ld   de,65AE        // "Lost"
 RO27:64E3 CD 63 0F         call 0F63           // ($98AB) holds text for "Lost"
 RO27:64E6 FA BA C8         ld   a,(C8BA)
 RO27:64E9 67               ld   h,a
 RO27:64EA FA B9 C8         ld   a,(C8B9)
 RO27:64ED 6F               ld   l,a            // HL holds White Moon's Lost Unit count
 RO27:64EE 01 06 0E         ld   bc,0E06
 RO27:64F1 16 05            ld   d,05
 RO27:64F3 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:64F6 01 07 0B         ld   bc,0B07        // Location of separator dashes
 RO27:64F9 CD 80 62         call 6280           // Coordinates BC for 8 spaces holds tile $22 from VRA1
 RO27:64FC 01 08 0B         ld   bc,0B08
 RO27:64FF CD D4 0E         call 0ED4           // HL = $990B
 RO27:6502 11 B7 65         ld   de,65B7        // "Gold"
 RO27:6505 CD 63 0F         call 0F63           // ($990B) holds text for "Gold"
 RO27:6508 21 37 C6         ld   hl,C637
 RO27:650B 01 09 0E         ld   bc,0E09
 RO27:650E 16 05            ld   d,05
 RO27:6510 CD A3 32         call 32A3           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL 3 byte reverse holds the number, BC is coordinates, D is the number of digits)
 RO27:6513 01 0A 0B         ld   bc,0B0A
 RO27:6516 CD D4 0E         call 0ED4           // HL = $994B
 RO27:6519 11 BB 65         ld   de,65BB        // "Materials"
 RO27:651C CD 63 0F         call 0F63           // ($994B) holds text for "Materials"
 RO27:651F FA 3C C6         ld   a,(C63C)
 RO27:6522 6F               ld   l,a
 RO27:6523 FA 3D C6         ld   a,(C63D)
 RO27:6526 67               ld   h,a
 RO27:6527 01 0B 0E         ld   bc,0E0B
 RO27:652A 16 05            ld   d,05
 RO27:652C CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:652F 01 0C 0B         ld   bc,0B0C        // Location of separator dashes
 RO27:6532 CD 80 62         call 6280           // Coordinates BC for 8 spaces holds tile $22 from VRA1
 RO27:6535 01 0D 0B         ld   bc,0B0D
 RO27:6538 CD D4 0E         call 0ED4           // HL = $99AB
 RO27:653B 11 BF 65         ld   de,65BF        // "Gold Income"
 RO27:653E CD 63 0F         call 0F63           // ($99AB) holds text for "Gold Income"
 RO27:6541 FA 41 C6         ld   a,(C641)
 RO27:6544 67               ld   h,a
 RO27:6545 FA 40 C6         ld   a,(C640)
 RO27:6548 6F               ld   l,a
 RO27:6549 01 0E 0D         ld   bc,0D0E
 RO27:654C 16 05            ld   d,05
 RO27:654E CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:6551 01 0E 12         ld   bc,120E
 RO27:6554 CD D4 0E         call 0ED4           // HL = $99D2
 RO27:6557 11 D1 65         ld   de,65D1        // "0"
 RO27:655A CD 63 0F         call 0F63           // ($99D2) holds "0" (for 1s digit of Gold Income)
 RO27:655D 01 0F 0B         ld   bc,0B0F
 RO27:6560 CD D4 0E         call 0ED4           // HL = $99EB
 RO27:6563 11 C8 65         ld   de,65C8        // "Materials Income"
 RO27:6566 CD 63 0F         call 0F63           // ($99EB)) holds text for "Materials Income"
 RO27:6569 FA 45 C6         ld   a,(C645)
 RO27:656C 67               ld   h,a
 RO27:656D FA 44 C6         ld   a,(C644)
 RO27:6570 6F               ld   l,a
 RO27:6571 01 10 0E         ld   bc,0E10
 RO27:6574 16 05            ld   d,05
 RO27:6576 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:6579 F0 83            ld   a,(ff00+83)
 RO27:657B F5               push af
 RO27:657C 3E 20            ld   a,20
 RO27:657E 0E 00            ld   c,00
 RO27:6580 06 15            ld   b,15
 RO27:6582 11 60 6F         ld   de,6F60        // Pointing Down Arrow
 RO27:6585 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO27:6588 EA 3E C9         ld   (C93E),a
 RO27:658B 01 98 58         ld   bc,5898        // 80,136
 RO27:658E CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO27:6591 F1               pop  af
 RO27:6592 E0 83            ld   (ff00+83),a
 RO27:6594 E0 4F            ld   (ff00+4F),a
 RO27:6596 C9               ret                 // Establishes Intel top half screen graphics
 RO27:6597 3E 01            ld   a,01
 RO27:6599 EA 3D C9         ld   (C93D),a       // Start showing property counts on Intel screen
 RO27:659C CD 13 5F         call 5F13           // Establishes Intel bottom half screen graphics
 RO27:659F C9               ret                 // Sets up Intel bottom half

 RO27:65A0 D5 C6 FF C4 00                       // "Unit"
 RO27:65A5 6E 62 6B 8D D5 C6 FF C4 00           // "Built Unit"
 RO27:65AE 96 8D 82 72 D5 C6 FF C4 00           // "Lost Unit"
 RO27:65B7 6C 67 8D 00                          // "Gold"
 RO27:65BB 6C 93 62 00                          // "Materials"
 
 RO27:65BF 76 AD 63 6C AD 6C 67 8D 00           // "Incoming Gold"
 RO27:65C8 76 AD 63 6C AD 6C 93 62 00           // "Incoming Materials"
 RO27:65D1 30 00                                // "0"

 RO27:65D3 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

 RO27:65E3 FF 00 FF 7F E0 7F F7 78 F7 78 F7 78 F7 78 F7 78
 RO27:65F3 FF 00 FF FF 03 FF FD 03 EE F1 F7 F8 F7 F8 0E F1
 RO27:6603 FF 00 FF FF 80 FF DF E0 DF E3 DF E3 DF E3 DC E3
 RO27:6613 FF 00 FF FF 06 FF F5 0E FD FE FD FE FD FE 0D FE
 RO27:6623 FF 00 FF FF 00 FF FF 00 FE 3F FF 3F C0 3F FF 00
 RO27:6633 FF 00 FF FF 40 FF AF 71 AF 71 EF F1 EF F1 2F F1
 RO27:6643 FF 00 FF FF F0 FF FB FD FB FD FB FD FB FD FB FD
 RO27:6653 FF 00 FF FF 01 FF BF C3 BF C3 BF C3 BF C3 BF C3
 RO27:6663 FF 00 FF FF E0 FF EF F0 FE FF FE FF FE FF FE FF
 RO27:6673 FF 00 FF FF 00 FF FE 01 EF 1F EF 1F EF 1F EF 1F
 RO27:6683 FF 00 FF FF 80 FF 7F 80 7F 8F 7F 8F 70 8F 7F 80
 RO27:6693 FF 00 FF FE 1F FE EF 1E AF DE FF FE 3F FE CF 3E

 RO27:66A3 F7 78 F7 78 F7 78 F7 78 F7 78 EF 70 FF 7F FF 00
 RO27:66B3 FD 03 DF E3 FD E3 EF F1 FE F1 77 F8 FF FF FF 00
 RO27:66C3 DF E0 DF E3 DF E3 DF E3 DC E3 3F C0 FF FF FF 00
 RO27:66D3 ED 1E FE FF FF FF FC FF 05 FE F5 0E FF FF FF 00
 RO27:66E3 FF 00 FF 00 FB FC FB FC 03 FC FF 00 FF FF FF 00
 RO27:66F3 AF 71 AF 71 AF 71 AE 71 AF 70 77 F8 FF FF FF 00
 RO27:6703 FB FD FB FD FB FD FB FD 07 F9 FD 03 FF FF FF 00
 RO27:6713 BF C3 BF C3 BF C3 BF C3 BC C3 7F 80 FF FF FF 00
 RO27:6723 FE FF FE FF FE FF CE FF 2E DF FD 1E FF FF FF 00
 RO27:6733 EF 1F EF 1F EF 1F EF 1F EF 1F F7 0F FF FF FF 00
 RO27:6743 7F 80 BF C0 FE FF 3E FF 40 BF 7F 80 FF FF FF 00
 RO27:6753 EF 1E EF 1E EF 1E EF 1E EF 1E DF 3E FF FE FF 00

 RO27:6763 00 FF 7E 81 42 BD 42 BD 7E 81 42 BD 42 BD 7E 81

 RO27:6773 FF FF 81 FF 83 FE 83 FE 83 FE 87 FC FF FC FF 80
 RO27:6783 FF FF 81 FF C1 7F C1 7F C1 7F E1 3F FF 3F FF 01
 RO27:6793 FF E0 9F F8 8F F8 9F F0 9F F1 9E F3 BC EF FF FF
 RO27:67A3 FF 07 F9 1F F1 1F F9 0F F9 8F 79 CF 3D F7 FF FF

 RO27:67B3 FF FF 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 RO27:67C3 FF FF B1 F1 49 79 25 3D 23 3F 23 3F 21 3F 21 3F
 RO27:67D3 C0 C0 A0 E0 DF FF C0 FF A0 BF 90 9F 8C 8F FF FF
 RO27:67E3 41 7F 81 FF 03 FF 03 FF 05 FD 09 F9 31 F1 FF FF

 RO27:67F3 00 00 00 69 FF 7F 40 72
 RO27:67FB FF 7F B5 56 6B 2D 00 00
 RO27:6803 FF 7F 6C 03 08 02 00 00
 RO27:680B 00 69 9F 00 FF 7F 00 00
 RO27:6813 10 42 6B 2D C6 18 00 00
 RO27:681B 9F 53 DF 02 74 01 00 00
 RO27:6823 F0 63 C0 4A 60 25 00 00
 RO27:682B 1F 7C 1F 7C 00 00 FF 7F

 RO27:6833 21 50 DA         ld   hl,DA50
 RO27:6836 FA 4F DA         ld   a,(DA4F)
 RO27:6839 3D               dec  a
 RO27:683A 06 00            ld   b,00
 RO27:683C 4F               ld   c,a
 RO27:683D 09               add  hl,bc
 RO27:683E AF               xor  a
 RO27:683F 77               ld   (hl),a
 RO27:6840 C9               ret  
 RO27:6841 EF 31 1F 58                    
 RO27:6845 CD 9D 03         call 039D
 RO27:6848 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:684B FA F4 DE         ld   a,(DEF4)
 RO27:684E FE 05            cp   a,05
 RO27:6850 20 13            jr   nz,6865
 RO27:6852 FA DE CB         ld   a,(CBDE)
 RO27:6855 FE 01            cp   a,01
 RO27:6857 28 0C            jr   z,6865
 RO27:6859 FA DD CB         ld   a,(CBDD)
 RO27:685C FE 01            cp   a,01
 RO27:685E CA 65 68         jp   z,6865
 RO27:6861 EF 32 1F 4D                          
 RO27:6865 C9               ret  
 RO27:6866 EF 31 1F 58                          
 RO27:686A CD 9D 03         call 039D
 RO27:686D FA CE CA         ld   a,(CACE)
 RO27:6870 FE 01            cp   a,01
 RO27:6872 28 04            jr   z,6878
 RO27:6874 EF 31 7F 63                          
 RO27:6878 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:687B EF 32 1F 4D                          
 RO27:687F C9               ret  
 RO27:6880 FA 37 DA         ld   a,(DA37)
 RO27:6883 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:6886 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:6889 CD D2 04         call 04D2           // Next frame
 RO27:688C AF               xor  a
 RO27:688D EA DD CA         ld   (CADD),a
 RO27:6890 01 06 03         ld   bc,0306
 RO27:6893 11 07 0D         ld   de,0D07
 RO27:6896 EF 10 01 69                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics, frame update per row version (BC is starting location, DE is size)
 RO27:689A F0 83            ld   a,(ff00+83)
 RO27:689C F5               push af
 RO27:689D 3E 01            ld   a,01
 RO27:689F E0 83            ld   (ff00+83),a
 RO27:68A1 E0 4F            ld   (ff00+4F),a
 RO27:68A3 AF               xor  a
 RO27:68A4 01 07 04         ld   bc,0407
 RO27:68A7 11 05 0B         ld   de,0B05
 RO27:68AA EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:68AE F1               pop  af
 RO27:68AF E0 83            ld   (ff00+83),a
 RO27:68B1 E0 4F            ld   (ff00+4F),a
 RO27:68B3 01 08 05         ld   bc,0508
 RO27:68B6 21 C4 68         ld   hl,68C4
 RO27:68B9 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:68BC 01 0A 07         ld   bc,070A
 RO27:68BF EF 15 64 66                          // Sets up "OK/NO" with "NO" highlighted at BC
 RO27:68C3 C9               ret  

 RO27:68C4 A7               and  a
 RO27:68C5 AC               xor  h
 RO27:68C6 76               halt 
 RO27:68C7 62               ld   h,d
 RO27:68C8 86               add  (hl)
 RO27:68C9 78               ld   a,b
 RO27:68CA 6A               ld   l,d
 RO27:68CB 3F               ccf  
 RO27:68CC 00               nop  
 RO27:68CD C5               push bc
 RO27:68CE E5               push hl
 RO27:68CF CD 80 68         call 6880
 RO27:68D2 CD A2 05         call 05A2           // Button update, next frame
 RO27:68D5 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:68D8 3E 00            ld   a,00
 RO27:68DA EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:68DE F0 91            ld   a,(ff00+91)
 RO27:68E0 CB 6F            bit  5,a            // Left
 RO27:68E2 28 11            jr   z,68F5
 RO27:68E4 3E 01            ld   a,01
 RO27:68E6 CD 44 38         call 3844
 RO27:68E9 01 0A 07         ld   bc,070A
 RO27:68EC EF 15 37 66                          // Sets up "OK/NO" with "OK" highlighted at BC
 RO27:68F0 3E 01            ld   a,01
 RO27:68F2 EA DD CA         ld   (CADD),a
 RO27:68F5 F0 91            ld   a,(ff00+91)
 RO27:68F7 CB 67            bit  4,a            // Right
 RO27:68F9 28 10            jr   z,690B
 RO27:68FB 3E 01            ld   a,01
 RO27:68FD CD 44 38         call 3844
 RO27:6900 01 0A 07         ld   bc,070A
 RO27:6903 EF 15 64 66                          // Sets up "OK/NO" with "NO" highlighted at BC
 RO27:6907 AF               xor  a
 RO27:6908 EA DD CA         ld   (CADD),a
 RO27:690B F0 91            ld   a,(ff00+91)
 RO27:690D CB 47            bit  0,a            // A
 RO27:690F 28 1A            jr   z,692B
 RO27:6911 FA DD CA         ld   a,(CADD)
 RO27:6914 FE 00            cp   a,00
 RO27:6916 28 02            jr   z,691A
 RO27:6918 18 07            jr   6921
 RO27:691A 3E 0C            ld   a,0C
 RO27:691C CD 44 38         call 3844
 RO27:691F 18 05            jr   6926
 RO27:6921 3E 02            ld   a,02
 RO27:6923 CD 44 38         call 3844
 RO27:6926 FA DD CA         ld   a,(CADD)
 RO27:6929 18 0F            jr   693A
 RO27:692B F0 91            ld   a,(ff00+91)
 RO27:692D CB 4F            bit  1,a            // B
 RO27:692F 28 A1            jr   z,68D2
 RO27:6931 3E 0C            ld   a,0C
 RO27:6933 CD 44 38         call 3844
 RO27:6936 AF               xor  a
 RO27:6937 EA DD CA         ld   (CADD),a
 RO27:693A FA DD CA         ld   a,(CADD)
 RO27:693D FE 00            cp   a,00
 RO27:693F 28 05            jr   z,6946
 RO27:6941 3E 01            ld   a,01
 RO27:6943 EA 40 DA         ld   (DA40),a
 RO27:6946 FA 37 DA         ld   a,(DA37)
 RO27:6949 CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO27:694C F5               push af
 RO27:694D FA 40 DA         ld   a,(DA40)
 RO27:6950 FE 00            cp   a,00
 RO27:6952 28 02            jr   z,6956
 RO27:6954 18 04            jr   695A
 RO27:6956 EF 10 08 69                          // Restores last table of covered graphics
 RO27:695A F1               pop  af
 RO27:695B E1               pop  hl
 RO27:695C C1               pop  bc
 RO27:695D C9               ret  
 RO27:695E 21 DE CA         ld   hl,CADE
 RO27:6961 01 43 00         ld   bc,0043
 RO27:6964 AF               xor  a
 RO27:6965 CD 79 3B         call 3B79           // (HL ~ HL+BC-1) = A
 RO27:6968 3E 0E            ld   a,0E
 RO27:696A CD 8D 05         call 058D           // ($4000) = 14, ($FF81) = 14
 RO27:696D CD 93 05         call 0593
 RO27:6970 21 DE CA         ld   hl,CADE
 RO27:6973 E5               push hl
 RO27:6974 FA 3B BA         ld   a,(BA3B)
 RO27:6977 AF               xor  a
 RO27:6978 EF 31 06 5F                          
 RO27:697C 54               ld   d,h
 RO27:697D 5D               ld   e,l
 RO27:697E E1               pop  hl
 RO27:697F EF 07 71 2D                          
 RO27:6983 21 DE CA         ld   hl,CADE
 RO27:6986 EF 19 0B 55                          
 RO27:698A 23               inc  hl
 RO27:698B 11 99 A0         ld   de,A099
 RO27:698E EF 07 71 2D                          
 RO27:6992 21 DE CA         ld   hl,CADE
 RO27:6995 EF 19 0B 55                          
 RO27:6999 23               inc  hl
 RO27:699A EF 19 0B 55                          
 RO27:699E 23               inc  hl
 RO27:699F E5               push hl
 RO27:69A0 21 B3 CA         ld   hl,CAB3
 RO27:69A3 11 10 DC         ld   de,DC10
 RO27:69A6 EF 22 AA 62                          
 RO27:69AA 11 10 DC         ld   de,DC10
 RO27:69AD E1               pop  hl
 RO27:69AE EF 07 71 2D                          
 RO27:69B2 CD 9B 05         call 059B
 RO27:69B5 C9               ret  
 RO27:69B6 3E 0E            ld   a,0E
 RO27:69B8 CD 8D 05         call 058D           // ($4000) = 14, ($FF81) = 14
 RO27:69BB CD 93 05         call 0593
 RO27:69BE 11 99 A0         ld   de,A099
 RO27:69C1 21 94 CB         ld   hl,CB94
 RO27:69C4 01 11 00         ld   bc,0011
 RO27:69C7 CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:69CA 21 B3 CA         ld   hl,CAB3
 RO27:69CD 11 10 DC         ld   de,DC10
 RO27:69D0 EF 22 AA 62                          
 RO27:69D4 11 10 DC         ld   de,DC10
 RO27:69D7 21 A5 CB         ld   hl,CBA5
 RO27:69DA 01 20 00         ld   bc,0020
 RO27:69DD CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:69E0 CD 9B 05         call 059B
 RO27:69E3 C9               ret  
 RO27:69E4 3E 0E            ld   a,0E
 RO27:69E6 CD 8D 05         call 058D           // ($4000) = 14, ($FF81) = 14
 RO27:69E9 CD 93 05         call 0593
 RO27:69EC 21 9A D8         ld   hl,D89A
 RO27:69EF 11 10 DC         ld   de,DC10
 RO27:69F2 EF 22 AA 62                          
 RO27:69F6 11 10 DC         ld   de,DC10
 RO27:69F9 21 99 A0         ld   hl,A099
 RO27:69FC 01 21 00         ld   bc,0021
 RO27:69FF CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:6A02 21 CC D8         ld   hl,D8CC
 RO27:6A05 11 10 DC         ld   de,DC10
 RO27:6A08 EF 22 AA 62                          
 RO27:6A0C 11 10 DC         ld   de,DC10
 RO27:6A0F 21 CB A0         ld   hl,A0CB
 RO27:6A12 01 1F 00         ld   bc,001F
 RO27:6A15 CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:6A18 CD 9B 05         call 059B
 RO27:6A1B C9               ret  
 RO27:6A1C 3E 0E            ld   a,0E
 RO27:6A1E CD 8D 05         call 058D           // ($4000) = 14, ($FF81) = 14
 RO27:6A21 CD 93 05         call 0593
 RO27:6A24 FA F4 DE         ld   a,(DEF4)
 RO27:6A27 FE 00            cp   a,00
 RO27:6A29 28 10            jr   z,6A3B
 RO27:6A2B FE 01            cp   a,01
 RO27:6A2D 28 11            jr   z,6A40
 RO27:6A2F FE 02            cp   a,02
 RO27:6A31 28 12            jr   z,6A45
 RO27:6A33 FE 03            cp   a,03
 RO27:6A35 28 13            jr   z,6A4A
 RO27:6A37 FE 0A            cp   a,0A
 RO27:6A39 28 14            jr   z,6A4F
 RO27:6A3B 21 42 BB         ld   hl,BB42
 RO27:6A3E 18 14            jr   6A54
 RO27:6A40 21 47 BB         ld   hl,BB47
 RO27:6A43 18 0F            jr   6A54
 RO27:6A45 21 4C BB         ld   hl,BB4C
 RO27:6A48 18 0A            jr   6A54
 RO27:6A4A 21 51 BB         ld   hl,BB51
 RO27:6A4D 18 05            jr   6A54
 RO27:6A4F 21 56 BB         ld   hl,BB56
 RO27:6A52 18 00            jr   6A54
 RO27:6A54 11 F7 DE         ld   de,DEF7
 RO27:6A57 01 05 00         ld   bc,0005
 RO27:6A5A CD 50 3B         call 3B50           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:6A5D CD 9B 05         call 059B
 RO27:6A60 C9               ret  
 RO27:6A61 FE 00            cp   a,00
 RO27:6A63 28 1C            jr   z,6A81
 RO27:6A65 FE 01            cp   a,01
 RO27:6A67 28 1D            jr   z,6A86
 RO27:6A69 FE 02            cp   a,02
 RO27:6A6B 28 1E            jr   z,6A8B
 RO27:6A6D FE 03            cp   a,03
 RO27:6A6F 28 1F            jr   z,6A90
 RO27:6A71 FE 0A            cp   a,0A
 RO27:6A73 28 20            jr   z,6A95
 RO27:6A75 FE 80            cp   a,80
 RO27:6A77 28 17            jr   z,6A90
 RO27:6A79 FE 05            cp   a,05
 RO27:6A7B 28 1D            jr   z,6A9A
 RO27:6A7D FE 82            cp   a,82
 RO27:6A7F 28 1E            jr   z,6A9F
 RO27:6A81 21 A6 6A         ld   hl,6AA6        // "User registration"
 RO27:6A84 18 1C            jr   6AA2
 RO27:6A86 21 AF 6A         ld   hl,6AAF        // "Map Upload"
 RO27:6A89 18 17            jr   6AA2
 RO27:6A8B 21 B9 6A         ld   hl,6AB9        // "Map submit"
 RO27:6A8E 18 12            jr   6AA2
 RO27:6A90 21 C1 6A         ld   hl,6AC1        // "Map Download"
 RO27:6A93 18 0D            jr   6AA2
 RO27:6A95 21 CB 6A         ld   hl,6ACB        // "Map Delete"
 RO27:6A98 18 08            jr   6AA2
 RO27:6A9A 21 D3 6A         ld   hl,6AD3        // "Mercenary summon"
 RO27:6A9D 18 03            jr   6AA2
 RO27:6A9F 21 DC 6A         ld   hl,6ADC        // "Center Access"
 RO27:6AA2 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:6AA5 C9               ret  

 RO27:6AA6 D5 2D E3 2D 74 63 8B 68 00
 RO27:6AAF CF FF F4 B1 FF F4 DB 2D EC 00
 RO27:6AB9 CF FF F4 74 63 6A 63 00
 RO27:6AC1 CF FF F4 E8 B3 DD DB 2D EC 00
 RO27:6ACB CF FF F4 EB D8 2D C4 00
 RO27:6AD3 86 63 7D 62 86 9E 98 6C 00
 RO27:6ADC BE DD C0 2D 76 B1 B8 BE BD 00

 RO27:6AE6 F0 83            ld   a,(ff00+83)
 RO27:6AE8 F5               push af
 RO27:6AE9 3E 00            ld   a,00
 RO27:6AEB E0 83            ld   (ff00+83),a
 RO27:6AED E0 4F            ld   (ff00+4F),a
 RO27:6AEF 01 0D 02         ld   bc,020D
 RO27:6AF2 11 03 10         ld   de,1003
 RO27:6AF5 AF               xor  a
 RO27:6AF6 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:6AFA F1               pop  af
 RO27:6AFB E0 83            ld   (ff00+83),a
 RO27:6AFD E0 4F            ld   (ff00+4F),a
 RO27:6AFF FA 52 DC         ld   a,(DC52)
 RO27:6B02 FE 00            cp   a,00
 RO27:6B04 20 0A            jr   nz,6B10
 RO27:6B06 21 1A 6B         ld   hl,6B1A        // "Hand around GB."
 RO27:6B09 01 0D 02         ld   bc,020D
 RO27:6B0C CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO27:6B0F C9               ret  
 RO27:6B10 21 31 6B         ld   hl,6B31        // "Use IR Comm."
 RO27:6B13 01 0D 02         ld   bc,020D
 RO27:6B16 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO27:6B19 C9               ret                 // Establish VS Mode Description Text

 RO27:6B1A E1 2D D1 F1 2D B2 60 73 8C 70 6C 6C 73 01
 RO27:6B28 70 62 6E 8D 6C 7F 6D 2E 00

 RO27:6B31 49 52 72 63 6C 8D 60 72 66 AF 73 01
 RO27:6B3D 70 62 6E 8D 6C 7F 6D 2E 00

 RO27:6B46 EA 6E CC         ld   (CC6E),a
 RO27:6B49 F5               push af
 RO27:6B4A EF 14 6D 5B                          // Resets STAT Interrupt
 RO27:6B4E CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:6B51 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:6B54 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:6B57 CD 1B 71         call 711B           // File Menu basic graphics established
 RO27:6B5A F1               pop  af
 RO27:6B5B CD 93 05         call 0593
 RO27:6B5E 3E 00            ld   a,00
 RO27:6B60 CD 8D 05         call 058D           // ($4000) = 0, ($FF81) = 0
 RO27:6B63 FA 0D A0         ld   a,(A00D)       // Highlighted Save File #
 RO27:6B66 CD 9B 05         call 059B
 RO27:6B69 EA 2A C6         ld   (C62A),a
 RO27:6B6C CD EA 6E         call 6EEA           // File Menu used file raw graphics established
 RO27:6B6F FA 2A C6         ld   a,(C62A)
 RO27:6B72 CD A6 6F         call 6FA6           // File A graphics set up for File Menu
 RO27:6B75 CD 37 35         call 3537           // Establishes all unchecked text into appropriate VRAM bank; bit 7,($C00F) being inactive or LY => 142 stops after only one text portion and leaves it considered unchecked
 RO27:6B78 CD E8 74         call 74E8           // Establishes player option sprites of File Menu
 RO27:6B7B FA 6E CC         ld   a,(CC6E)
 RO27:6B7E FE 01            cp   a,01           // Continue
 RO27:6B80 20 02            jr   nz,6B84        // Default Beginner if not Continue
 RO27:6B82 18 04            jr   6B88
 RO27:6B84 AF               xor  a
 RO27:6B85 EA 81 CC         ld   (CC81),a
 RO27:6B88 CD 19 75         call 7519           // Establishes File Choices graphics on File Menu
 RO27:6B8B CD 3C 75         call 753C           // Handles Bullet Pointing Right visibility on File Menu
 RO27:6B8E CD 5A 70         call 705A           // Establishes Bullet Pointing Right position based on choice in File Menu
 RO27:6B91 CD 00 6C         call 6C00           // Establishes Query Text on File Menu
 RO27:6B94 C9               ret  
 RO27:6B95 AF               xor  a
 RO27:6B96 EA 81 CC         ld   (CC81),a
 RO27:6B99 C9               ret  
 RO27:6B9A EA 6E CC         ld   (CC6E),a
 RO27:6B9D F5               push af
 RO27:6B9E EF 14 6D 5B                          // Resets STAT Interrupt
 RO27:6BA2 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:6BA5 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:6BA8 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:6BAB F1               pop  af
 RO27:6BAC CD 1B 71         call 711B           // File Menu basic graphics established
 RO27:6BAF CD EA 6E         call 6EEA           // File Menu used file raw graphics established
 RO27:6BB2 FA 2A C6         ld   a,(C62A)
 RO27:6BB5 CD A6 6F         call 6FA6           // File A graphics set up for File Menu
 RO27:6BB8 CD E8 74         call 74E8           // Establishes player option sprites of File Menu
 RO27:6BBB CD 19 75         call 7519           // Establishes File Choices graphics on File Menu
 RO27:6BBE CD 3C 75         call 753C           // Handles Bullet Pointing Right visibility on File Menu
 RO27:6BC1 CD 5A 70         call 705A           // Establishes Bullet Pointing Right position based on choice in File Menu
 RO27:6BC4 CD 00 6C         call 6C00           // Establishes Query Text on File Menu
 RO27:6BC7 C9               ret                 // Reestablishes File Menu graphics (A is File Menu Parent)
 RO27:6BC8 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:6BCB AF               xor  a
 RO27:6BCC E0 97            ld   (ff00+97),a
 RO27:6BCE E0 98            ld   (ff00+98),a
 RO27:6BD0 CD 1F 05         call 051F           // Shuts off Window Display
 RO27:6BD3 CD 15 75         call 7515           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO27:6BD6 C9               ret                 // Screen Transition White-Out

 RO27:6BD7 CD DB 6E         call 6EDB           // Set Carry Flag if ($CC6E) = 0 or 2; A = 0 otherwise
 RO27:6BDA FA 6E CC         ld   a,(CC6E)
 RO27:6BDD FE 00            cp   a,00           // New Game
 RO27:6BDF 28 08            jr   z,6BE9
 RO27:6BE1 FE 01            cp   a,01           // Continue
 RO27:6BE3 28 06            jr   z,6BEB
 RO27:6BE5 FE 02            cp   a,02           // Save
 RO27:6BE7 28 00            jr   z,6BE9
 RO27:6BE9 37               scf  
 RO27:6BEA C9               ret  
 RO27:6BEB FA 2A C6         ld   a,(C62A)       // Continue comes here
 RO27:6BEE EF 13 DC 58                          // SRA0($A007 + ($C62A))
 RO27:6BF2 CB 47            bit 0,a
 RO27:6BF4 20 02            jr   nz,6BF8
 RO27:6BF6 18 06            jr   6BFE
 RO27:6BF8 EF 15 2C 71                          // Empties ($CCD4), ($CCD5), and ($CCD9)
 RO27:6BFC 37               scf  
 RO27:6BFD C9               ret  
 RO27:6BFE AF               xor  a
 RO27:6BFF C9               ret  
 RO27:6C00 FA 29 C6         ld   a,(C629)
 RO27:6C03 FE 01            cp   a,01           // Continue
 RO27:6C05 28 05            jr   z,6C0C
 RO27:6C07 21 2E 6C         ld   hl,6C2E        // "Save where?"
 RO27:6C0A 18 1E            jr   6C2A
 RO27:6C0C FA 81 CC         ld   a,(CC81)
 RO27:6C0F FE 00            cp   a,00
 RO27:6C11 28 08            jr   z,6C1B
 RO27:6C13 FE 01            cp   a,01
 RO27:6C15 28 09            jr   z,6C20
 RO27:6C17 FE 02            cp   a,02
 RO27:6C19 28 0A            jr   z,6C25
 RO27:6C1B 21 42 6C         ld   hl,6C42        // "Play Beginner?"
 RO27:6C1E 18 0A            jr   6C2A
 RO27:6C20 21 56 6C         ld   hl,6C56        // "Play Campaign?"
 RO27:6C23 18 05            jr   6C2A
 RO27:6C25 21 6A 6C         ld   hl,6C6A        // "Play Standard?"
 RO27:6C28 18 00            jr   6C2A
 RO27:6C2A CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO27:6C2D C9               ret                 // Establishes Query Text on File Menu

 RO27:6C2E 01 03
 RO27:6C30 9C 6A 76 BE 2D EF 6C 7F 6D 66 3F 20 20 20 20 20 20 00
 RO27:6C42 01 03
 RO27:6C44 EE DF C5 2D D3 2D EC 60 61 6F 9E 7F 6D 66 3F 20 20 00
 RO27:6C56 01 03
 RO27:6C58 B7 FC DD F5 2D DD D3 2D EC 60 61 6F 9E 7F 6D 66 3F 00
 RO27:6C6A 01 03
 RO27:6C6C BD C0 DD E8 2D EC D3 2D EC 60 61 6F 9E 7F 6D 66 3F 00

 RO27:6C7E 01 03 01         ld   bc,0103
 RO27:6C81 11 04 12         ld   de,1204
 RO27:6C84 EF 10 01 69                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics, frame update per row version (BC is starting location, DE is size)
 RO27:6C88 F0 83            ld   a,(ff00+83)
 RO27:6C8A F5               push af
 RO27:6C8B 3E 01            ld   a,01
 RO27:6C8D E0 83            ld   (ff00+83),a
 RO27:6C8F E0 4F            ld   (ff00+4F),a
 RO27:6C91 01 04 02         ld   bc,0204
 RO27:6C94 11 02 10         ld   de,1002
 RO27:6C97 AF               xor  a
 RO27:6C98 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:6C9C F1               pop  af
 RO27:6C9D E0 83            ld   (ff00+83),a
 RO27:6C9F E0 4F            ld   (ff00+4F),a
 RO27:6CA1 21 A8 6C         ld   hl,6CA8        // "Saved"
 RO27:6CA4 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO27:6CA7 C9               ret  

 RO27:6CA8 06 04
 RO27:6CAA BE 2D EF 6C 7F 6C 70 00

 RO27:6CB2 CD 7E 6C         call 6C7E           // File Menu Window involving "Saved" text
 RO27:6CB5 CD A2 05         call 05A2           // Button update, next frame
 RO27:6CB8 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:6CBB 3E 70            ld   a,70
 RO27:6CBD EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:6CC1 F0 91            ld   a,(ff00+91)
 RO27:6CC3 CB 47            bit  0,a            // A
 RO27:6CC5 28 07            jr   z,6CCE
 RO27:6CC7 3E 02            ld   a,02
 RO27:6CC9 CD 44 38         call 3844
 RO27:6CCC 18 0D            jr   6CDB
 RO27:6CCE CB 4F            bit  1,a            // B
 RO27:6CD0 28 07            jr   z,6CD9
 RO27:6CD2 3E 02            ld   a,02
 RO27:6CD4 CD 44 38         call 3844
 RO27:6CD7 18 02            jr   6CDB
 RO27:6CD9 18 DA            jr   6CB5
 RO27:6CDB CD D2 04         call 04D2           // Next frame
 RO27:6CDE EF 10 08 69                          // Restores last table of covered graphics
 RO27:6CE2 C9               ret                 // File Menu Save done player interaction management
 RO27:6CE3 FA 81 CC         ld   a,(CC81)
 RO27:6CE6 FE 00            cp   a,00           // Beginner
 RO27:6CE8 28 08            jr   z,6CF2
 RO27:6CEA FE 01            cp   a,01           // Campaign
 RO27:6CEC 28 08            jr   z,6CF6
 RO27:6CEE FE 02            cp   a,02           // Standard
 RO27:6CF0 28 08            jr   z,6CFA
 RO27:6CF2 06 00            ld   b,00
 RO27:6CF4 18 06            jr   6CFC
 RO27:6CF6 06 01            ld   b,01
 RO27:6CF8 18 02            jr   6CFC
 RO27:6CFA 06 02            ld   b,02
 RO27:6CFC FA 83 CC         ld   a,(CC83)       // File #
 RO27:6CFF EF 13 24 5A                          // Reads Save A for Mode B Save info to get important data for text
 RO27:6D03 C9               ret                 // Reads Chosen Save for Chosen Mode Save info to get important data for text
 RO27:6D04 CD A2 05         call 05A2           // Button update, next frame
 RO27:6D07 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:6D0A 3E 70            ld   a,70
 RO27:6D0C EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:6D10 F0 92            ld   a,(ff00+92)
 RO27:6D12 21 BA 6E         ld   hl,6EBA        // Button pressed pointer
 RO27:6D15 CD 9E 3A         call 3A9E           // HL = [HL + 2 * (# of 0s right of rightmost 1 bit in A)]
 RO27:6D18 E9               jp   hl

A:
 RO27:6D19 CD D7 6B         call 6BD7           // Carry Flag Set unless choosing empty file on Continue
 RO27:6D1C 38 02            jr   c,6D20
 RO27:6D1E 18 59            jr   6D79           // Just plays invalid sound and goes back to standby for button press if empty file on Continue
 RO27:6D20 FA 29 C6         ld   a,(C629)
 RO27:6D23 FE 01            cp   a,01           // Continue
 RO27:6D25 28 1E            jr   z,6D45
 RO27:6D27 FE 00            cp   a,00           // New Game
 RO27:6D29 28 35            jr   z,6D60
 RO27:6D2B 3E 02            ld   a,02           // Save
 RO27:6D2D CD 44 38         call 3844
 RO27:6D30 FA 2A C6         ld   a,(C62A)       // File Choice
 RO27:6D33 EF 13 8E 5B                          // Saves all Quick Save data onto File A
 RO27:6D37 FA 2A C6         ld   a,(C62A)
 RO27:6D3A CD A6 6F         call 6FA6           // File A graphics set up for File Menu
 RO27:6D3D CD B2 6C         call 6CB2           // File Menu Save done player interaction management
 RO27:6D40 CD 00 6C         call 6C00           // Establishes Query Text on File Menu
 RO27:6D43 18 BF            jr   6D04           // Further wait for button input after saving
 RO27:6D45 FA 70 CC         ld   a,(CC70)       // Bullet Pointing Right (Continue comes here)
 RO27:6D48 EF 15 D0 5C                          // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO27:6D4C FA 2A C6         ld   a,(C62A)
 RO27:6D4F EA 28 C6         ld   (C628),a
 RO27:6D52 F5               push af
 RO27:6D53 FA 81 CC         ld   a,(CC81)       // Mode Choice
 RO27:6D56 47               ld   b,a
 RO27:6D57 F1               pop  af
 RO27:6D58 F5               push af
 RO27:6D59 C5               push bc
 RO27:6D5A CD E3 6C         call 6CE3           // Reads Chosen Save for Chosen Mode Save info to get important data for text
 RO27:6D5D C1               pop  bc
 RO27:6D5E F1               pop  af
 RO27:6D5F C9               ret  
 RO27:6D60 3E 02            ld   a,02           // New Game comes here
 RO27:6D62 CD 44 38         call 3844
 RO27:6D65 FA 2A C6         ld   a,(C62A)
 RO27:6D68 EA 28 C6         ld   (C628),a
 RO27:6D6B F5               push af
 RO27:6D6C FA 81 CC         ld   a,(CC81)       // Mode Choice
 RO27:6D6F 47               ld   b,a
 RO27:6D70 F1               pop  af
 RO27:6D71 F5               push af
 RO27:6D72 C5               push bc
 RO27:6D73 CD E3 6C         call 6CE3           // Reads Chosen Save for Chosen Mode Save info to get important data for text
 RO27:6D76 C1               pop  bc
 RO27:6D77 F1               pop  af
 RO27:6D78 C9               ret  
 RO27:6D79 3E 03            ld   a,03
 RO27:6D7B CD 44 38         call 3844
 RO27:6D7E 18 84            jr   6D04

B:
 RO27:6D80 3E 0C            ld   a,0C
 RO27:6D82 CD 44 38         call 3844
 RO27:6D85 FA 2A C6         ld   a,(C62A)
 RO27:6D88 3E FF            ld   a,FF
 RO27:6D8A C9               ret  

Start:
 RO27:6D8B FA 29 C6         ld   a,(C629)
 RO27:6D8E FE 01            cp   a,01           // Continue
 RO27:6D90 C2 04 6D         jp   nz,6D04        // Input Invalid if not Continue
 RO27:6D93 FA 2A C6         ld   a,(C62A)
 RO27:6D96 EF 13 DC 58                          // SRA0($A007 + ($C62A))
 RO27:6D9A CB 47            bit 0,a
 RO27:6D9C 20 08            jr   nz,6DA6
 RO27:6D9E 3E 03            ld   a,03
 RO27:6DA0 CD 44 38         call 3844           // Invalid choice sound
 RO27:6DA3 C3 04 6D         jp   6D04           // Further standby for proper input on empty file
 RO27:6DA6 3E 02            ld   a,02
 RO27:6DA8 CD 44 38         call 3844
 RO27:6DAB FA 2A C6         ld   a,(C62A)
 RO27:6DAE F5               push af
 RO27:6DAF CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:6DB2 EF 14 5B 5A                          // Medals Menu master control
 RO27:6DB6 FA 29 C6         ld   a,(C629)       // New Game/Continue/Save
 RO27:6DB9 CD 9A 6B         call 6B9A           // Reestablishes File Menu graphics
 RO27:6DBC F1               pop  af
 RO27:6DBD EA 2A C6         ld   (C62A),a
 RO27:6DC0 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:6DC3 C3 04 6D         jp   6D04

Select:
 RO27:6DC6 FA 29 C6         ld   a,(C629)
 RO27:6DC9 FE 01            cp   a,01           // Continue
 RO27:6DCB C2 04 6D         jp   nz,6D04        // Input Invalid if not Continue
 RO27:6DCE FA 2A C6         ld   a,(C62A)
 RO27:6DD1 EF 13 DC 58                          // SRA0($A007 + ($C62A))
 RO27:6DD5 CB 47            bit 0,a
 RO27:6DD7 20 08            jr   nz,6DE1
 RO27:6DD9 3E 03            ld   a,03
 RO27:6DDB CD 44 38         call 3844           // Invalid choice sound
 RO27:6DDE C3 04 6D         jp   6D04           // Further standby for proper input on empty file
 RO27:6DE1 3E 02            ld   a,02
 RO27:6DE3 CD 44 38         call 3844
 RO27:6DE6 FA 2A C6         ld   a,(C62A)
 RO27:6DE9 F5               push af
 RO27:6DEA CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:6DED FA 2A C6         ld   a,(C62A)
 RO27:6DF0 EF 13 7B 5C                          // Load Save File A's data onto Current Save File data
 RO27:6DF4 FA 2A C6         ld   a,(C62A)
 RO27:6DF7 06 01            ld   b,01
 RO27:6DF9 EF 13 24 5A                          // Reads Save A for Campaign Save info to get important data for text
 RO27:6DFD FA 92 CC         ld   a,(CC92)
 RO27:6E00 EF 25 FD 44                          // Campaign Map Indirect View master control
 RO27:6E04 FA 29 C6         ld   a,(C629)       // New Game/Continue/Save
 RO27:6E07 CD 9A 6B         call 6B9A           // Reestablishes File Menu graphics
 RO27:6E0A F1               pop  af
 RO27:6E0B EA 2A C6         ld   (C62A),a
 RO27:6E0E CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:6E11 C3 04 6D         jp   6D04

Left:
 RO27:6E14 3E 01            ld   a,01
 RO27:6E16 CD 44 38         call 3844
 RO27:6E19 FA 2A C6         ld   a,(C62A)
 RO27:6E1C 3D               dec  a
 RO27:6E1D FE FF            cp   a,FF
 RO27:6E1F 20 02            jr   nz,6E23
 RO27:6E21 3E 02            ld   a,02
 RO27:6E23 EA 2A C6         ld   (C62A),a
 RO27:6E26 CD 19 75         call 7519           // Establishes File Choices graphics on File Menu
 RO27:6E29 FA 2A C6         ld   a,(C62A)
 RO27:6E2C CD A6 6F         call 6FA6           // File A graphics set up for File Menu
 RO27:6E2F CD 5A 70         call 705A           // Establishes Bullet Pointing Right position based on choice in File Menu
 RO27:6E32 CD 3C 75         call 753C           // Handles Bullet Pointing Right visibility on File Menu
 RO27:6E35 CD 00 6C         call 6C00           // Establishes Query Text on File Menu
 RO27:6E38 CD CC 6E         call 6ECC           // Set Carry Flag for nonexistent file; A = 0 otherwise
 RO27:6E3B D2 3E 6E         jp   nc,6E3E
 RO27:6E3E C3 04 6D         jp   6D04

Right:
 RO27:6E41 3E 01            ld   a,01
 RO27:6E43 CD 44 38         call 3844
 RO27:6E46 FA 2A C6         ld   a,(C62A)
 RO27:6E49 3C               inc  a
 RO27:6E4A FE 03            cp   a,03
 RO27:6E4C 20 01            jr   nz,6E4F
 RO27:6E4E AF               xor  a
 RO27:6E4F EA 2A C6         ld   (C62A),a
 RO27:6E52 CD 19 75         call 7519           // Establishes File Choices graphics on File Menu
 RO27:6E55 FA 2A C6         ld   a,(C62A)
 RO27:6E58 CD A6 6F         call 6FA6           // File A graphics set up for File Menu
 RO27:6E5B CD 5A 70         call 705A           // Establishes Bullet Pointing Right position based on choice in File Menu
 RO27:6E5E CD 3C 75         call 753C           // Handles Bullet Pointing Right visibility on File Menu
 RO27:6E61 CD 00 6C         call 6C00           // Establishes Query Text on File Menu
 RO27:6E64 CD CC 6E         call 6ECC           // Set Carry Flag for nonexistent file; A = 0 otherwise
 RO27:6E67 D2 6A 6E         jp   nc,6E6A
 RO27:6E6A C3 04 6D         jp   6D04

Up:
 RO27:6E6D CD DB 6E         call 6EDB           // Set Carry Flag if ($CC6E) = 0 or 2; A = 0 otherwise
 RO27:6E70 DA 04 6D         jp   c,6D04         // Up does nothing on New Game and Save
 RO27:6E73 CD CC 6E         call 6ECC           // Set Carry Flag for nonexistent file; A = 0 otherwise
 RO27:6E76 DA 04 6D         jp   c,6D04         // Up does nothing on nonexistent file
 RO27:6E79 FA 81 CC         ld   a,(CC81)
 RO27:6E7C 3D               dec  a
 RO27:6E7D FE FF            cp   a,FF
 RO27:6E7F 20 28            jr   nz,6EA9
 RO27:6E81 3E 02            ld   a,02
 RO27:6E83 EA 81 CC         ld   (CC81),a
 RO27:6E86 3E 01            ld   a,01
 RO27:6E88 CD 44 38         call 3844
 RO27:6E8B CD 61 75         call 7561           // File Menu Bullet Pointing Right default position
 RO27:6E8E CD 00 6C         call 6C00           // Establishes Query Text on File Menu
 RO27:6E91 C3 04 6D         jp   6D04

Down:
 RO27:6E94 CD DB 6E         call 6EDB           // Set Carry Flag if ($CC6E) = 0 or 2; A = 0 otherwise
 RO27:6E97 DA 04 6D         jp   c,6D04         // Down does nothing on New Game and Save
 RO27:6E9A CD CC 6E         call 6ECC           // Set Carry Flag for nonexistent file; A = 0 otherwise
 RO27:6E9D DA 04 6D         jp   c,6D04         // Down does nothing on nonexistent file
 RO27:6EA0 FA 81 CC         ld   a,(CC81)
 RO27:6EA3 3C               inc  a
 RO27:6EA4 FE 03            cp   a,03
 RO27:6EA6 20 DB            jr   nz,6E83
 RO27:6EA8 AF               xor  a
 RO27:6EA9 EA 81 CC         ld   (CC81),a
 RO27:6EAC 3E 01            ld   a,01
 RO27:6EAE CD 44 38         call 3844
 RO27:6EB1 CD 61 75         call 7561           // File Menu Bullet Pointing Right default position
 RO27:6EB4 CD 00 6C         call 6C00           // Establishes Query Text on File Menu
 RO27:6EB7 C3 04 6D         jp   6D04

 RO27:6EBA 19 6D                                // A
 RO27:6EBC 80 6D                                // B
 RO27:6EBE C6 6D                                // Select
 RO27:6EC0 8B 6D                                // Start
 RO27:6EC2 41 6E                                // Right
 RO27:6EC4 14 6E                                // Left
 RO27:6EC6 6D 6E                                // Up
 RO27:6EC8 94 6E                                // Down
 RO27:6ECA 04 6D                                // None
 
 RO27:6ECC FA 2A C6         ld   a,(C62A)
 RO27:6ECF EF 13 DC 58                          // SRA0($A007 + ($C62A))
 RO27:6ED3 CB 47            bit 0,a
 RO27:6ED5 28 02            jr   z,6ED9
 RO27:6ED7 AF               xor  a
 RO27:6ED8 C9               ret  
 RO27:6ED9 37               scf  
 RO27:6EDA C9               ret                 // Set Carry Flag for nonexistent file; A = 0 otherwise

 RO27:6EDB FA 6E CC         ld   a,(CC6E)
 RO27:6EDE FE 00            cp   a,00           // New Game
 RO27:6EE0 28 06            jr   z,6EE8
 RO27:6EE2 FE 02            cp   a,02           // Save
 RO27:6EE4 28 02            jr   z,6EE8
 RO27:6EE6 AF               xor  a
 RO27:6EE7 C9               ret  
 RO27:6EE8 37               scf  
 RO27:6EE9 C9               ret                 // Set Carry Flag if ($CC6E) = 0 or 2; A = 0 otherwise
 RO27:6EEA F0 83            ld   a,(ff00+83)
 RO27:6EEC F5               push af
 RO27:6EED 3E 00            ld   a,00
 RO27:6EEF E0 83            ld   (ff00+83),a
 RO27:6EF1 E0 4F            ld   (ff00+4F),a
 RO27:6EF3 01 07 01         ld   bc,0107
 RO27:6EF6 11 01 12         ld   de,1201
 RO27:6EF9 3E 13            ld   a,13           // Text Separator
 RO27:6EFB EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:6EFF 3E 01            ld   a,01
 RO27:6F01 E0 83            ld   (ff00+83),a
 RO27:6F03 E0 4F            ld   (ff00+4F),a
 RO27:6F05 01 07 01         ld   bc,0107
 RO27:6F08 11 01 12         ld   de,1201
 RO27:6F0B 3E 08            ld   a,08
 RO27:6F0D EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:6F11 F1               pop  af
 RO27:6F12 E0 83            ld   (ff00+83),a
 RO27:6F14 E0 4F            ld   (ff00+4F),a
 RO27:6F16 3E 0A            ld   a,0A
 RO27:6F18 01 08 01         ld   bc,0108
 RO27:6F1B 11 02 02         ld   de,0202
 RO27:6F1E 26 24            ld   h,24           // B (Beginner)
 RO27:6F20 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:6F24 3E 0A            ld   a,0A
 RO27:6F26 01 0B 01         ld   bc,010B
 RO27:6F29 11 02 02         ld   de,0202
 RO27:6F2C 26 28            ld   h,28           // C (Campaign)
 RO27:6F2E EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:6F32 3E 0A            ld   a,0A
 RO27:6F34 01 0E 01         ld   bc,010E
 RO27:6F37 11 02 02         ld   de,0202
 RO27:6F3A 26 2C            ld   h,2C           // S (Standard)
 RO27:6F3C EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:6F40 3E 2F            ld   a,2F           // Slash
 RO27:6F42 01 09 0E         ld   bc,0E09
 RO27:6F45 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO27:6F48 3E 2F            ld   a,2F           // Slash
 RO27:6F4A 01 0C 0E         ld   bc,0E0C
 RO27:6F4D CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO27:6F50 3E 2F            ld   a,2F           // Slash
 RO27:6F52 01 0F 0E         ld   bc,0E0F
 RO27:6F55 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 or 24 + C / 8, A; [$FFCA] incremented (152 or 24 + C / 8 is 24 + C / 8 if [$FFCB] != 0)
 RO27:6F58 C9               ret                 // File Menu used file raw graphics established
 RO27:6F59 FA 82 CC         ld   a,(CC82)
 RO27:6F5C FE 01            cp   a,01
 RO27:6F5E 28 3F            jr   z,6F9F         // Deactivates Bullet Pointing Right if previously highlighted file didn't exist
 RO27:6F60 3E 01            ld   a,01
 RO27:6F62 EA 82 CC         ld   (CC82),a
 RO27:6F65 F0 83            ld   a,(ff00+83)
 RO27:6F67 F5               push af
 RO27:6F68 3E 01            ld   a,01
 RO27:6F6A E0 83            ld   (ff00+83),a
 RO27:6F6C E0 4F            ld   (ff00+4F),a
 RO27:6F6E 21 00 90         ld   hl,9000
 RO27:6F71 01 10 00         ld   bc,0010
 RO27:6F74 AF               xor  a
 RO27:6F75 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO27:6F78 F1               pop  af
 RO27:6F79 E0 83            ld   (ff00+83),a
 RO27:6F7B E0 4F            ld   (ff00+4F),a
 RO27:6F7D FA 84 CC         ld   a,(CC84)       // Save Soldier #1 Sprite #
 RO27:6F80 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:6F83 FA 85 CC         ld   a,(CC85)       // Save Soldier #2 Sprite #
 RO27:6F86 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:6F89 FA 86 CC         ld   a,(CC86)       // Save Soldier #3 Sprite #
 RO27:6F8C CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:6F8F 11 01 00         ld   de,0001
 RO27:6F92 01 00 00         ld   bc,0000
 RO27:6F95 EF 27 47 40                          // Carry Flag set by A, B, or Start being pressed within 1 frame; no gradual scroll
 RO27:6F99 CD 14 05         call 0514           // Turns on Window Display
 RO27:6F9C CD D2 04         call 04D2           // Next frame
 RO27:6F9F FA 70 CC         ld   a,(CC70)       // Bullet Pointing Right
 RO27:6FA2 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:6FA5 C9               ret                 // File Menu sprite deactivation for nonexistent file
 RO27:6FA6 EA 83 CC         ld   (CC83),a
 RO27:6FA9 EF 13 DC 58                          // SRA0($A007 + ($CC83))
 RO27:6FAD CB 47            bit 0,a
 RO27:6FAF 28 29            jr   z,6FDA         // If file doesn't exist, simply deactivate sprites
 RO27:6FB1 FA 82 CC         ld   a,(CC82)
 RO27:6FB4 FE 01            cp   a,01
 RO27:6FB6 28 05            jr   z,6FBD         // If previously highlighted file exists, simply...
 RO27:6FB8 CD DE 6F         call 6FDE           // Establishes information of selected File on File Menu
 RO27:6FBB 18 1B            jr   6FD8
 RO27:6FBD 3E 00            ld   a,00
 RO27:6FBF EA 82 CC         ld   (CC82),a
 RO27:6FC2 CD DE 6F         call 6FDE           // Establishes information of selected File on File Menu
 RO27:6FC5 CD 5A 70         call 705A           // Establishes Bullet Pointing Right position based on choice in File Menu
 RO27:6FC8 CD 3C 75         call 753C           // Handles Bullet Pointing Right visibility on File Menu
 RO27:6FCB CD 00 6C         call 6C00           // Establishes Query Text on File Menu
 RO27:6FCE CD 2E 35         call 352E           // Text catchup
 RO27:6FD1 CD 1F 05         call 051F           // Shuts off Window Display
 RO27:6FD4 EF 14 30 5D                          // Establishes Player Rank Graphics basics
 RO27:6FD8 18 03            jr   6FDD           // Finished
 RO27:6FDA CD 59 6F         call 6F59           // File Menu sprite deactivation for nonexistent file
 RO27:6FDD C9               ret                 // File A graphics set up for File Menu
 RO27:6FDE FA 83 CC         ld   a,(CC83)       // File #
 RO27:6FE1 EF 13 DC 58                          // SRA0($A007 + ($CC83))
 RO27:6FE5 CB 47            bit 0,a
 RO27:6FE7 CA 4F 70         jp   z,704F         // Ending portion if File doesn't exist yet
 RO27:6FEA CD EA 6E         call 6EEA           // File Menu used file raw graphics established
 RO27:6FED 3E 00            ld   a,00
 RO27:6FEF E0 83            ld   (ff00+83),a
 RO27:6FF1 E0 4F            ld   (ff00+4F),a    // VRA0
 RO27:6FF3 FA 83 CC         ld   a,(CC83)       // File #
 RO27:6FF6 21 2F CC         ld   hl,CC2F
 RO27:6FF9 EF 13 7C 59                          // HL set to hold Player's Name of File A
 RO27:6FFD F0 83            ld   a,(ff00+83)
 RO27:6FFF F5               push af
 RO27:7000 3E 00            ld   a,00
 RO27:7002 E0 83            ld   (ff00+83),a
 RO27:7004 E0 4F            ld   (ff00+4F),a
 RO27:7006 01 05 02         ld   bc,0205
 RO27:7009 11 01 06         ld   de,0601
 RO27:700C AF               xor  a
 RO27:700D EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:7011 F1               pop  af
 RO27:7012 E0 83            ld   (ff00+83),a
 RO27:7014 E0 4F            ld   (ff00+4F),a
 RO27:7016 01 05 02         ld   bc,0205
 RO27:7019 21 2F CC         ld   hl,CC2F
 RO27:701C CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:701F FA 83 CC         ld   a,(CC83)       // File #
 RO27:7022 EF 13 B0 59                          // A set to Player's Rank of File A
 RO27:7026 F5               push af
 RO27:7027 EF 14 8C 5D                          // Readies Player Rank Kanji placement
 RO27:702B F1               pop  af
 RO27:702C F5               push af
 RO27:702D 01 05 0D         ld   bc,0D05
 RO27:7030 11 02 06         ld   de,0602
 RO27:7033 EF 14 15 5E                          // Establishes Player Rank Kanji placements (A is Player Rank, BC is base coordinates, DE is size)
 RO27:7037 EF 14 6D 5D                          // Readies Player Rank Stars placement
 RO27:703B F1               pop  af
 RO27:703C 01 05 09         ld   bc,0905
 RO27:703F 11 02 03         ld   de,0302
 RO27:7042 EF 14 AB 5D                          // Establishes Player Rank Stars placements (A is Player Rank, BC is base coordinates, DE is size)
 RO27:7046 CD 11 73         call 7311           // Establishes Beginner Mode Save Info graphics
 RO27:7049 CD 9E 73         call 739E           // Establishes Campaign Mode Save Info graphics
 RO27:704C CD 31 74         call 7431           // Establishes Standard Mode Save Info graphics
 RO27:704F 11 01 00         ld   de,0001
 RO27:7052 01 00 00         ld   bc,0000
 RO27:7055 EF 27 47 40                          // Carry Flag set by A, B, or Start being pressed within 1 frame; no gradual scroll
 RO27:7059 C9               ret                 // Establishes information of selected File on File Menu
 RO27:705A FA 29 C6         ld   a,(C629)
 RO27:705D FE 01            cp   a,01           // Continue
 RO27:705F 20 2F            jr   nz,7090        // End immediately on not Continue
 RO27:7061 FA 2A C6         ld   a,(C62A)
 RO27:7064 0E 0E            ld   c,0E           // Active Game Mode
 RO27:7066 EF 13 62 59                          // A = Value of Byte in File A indicated by C
 RO27:706A FE 00            cp   a,00
 RO27:706C 28 0B            jr   z,7079         // Beginner
 RO27:706E FE 01            cp   a,01
 RO27:7070 28 0A            jr   z,707C         // Campaign
 RO27:7072 FE 02            cp   a,02
 RO27:7074 28 0A            jr   z,7080         // Standard
 RO27:7076 AF               xor  a              // Beginner
 RO27:7077 18 0B            jr   7084
 RO27:7079 AF               xor  a              // Beginner
 RO27:707A 18 08            jr   7084
 RO27:707C 3E 01            ld   a,01           // Campaign
 RO27:707E 18 04            jr   7084
 RO27:7080 3E 02            ld   a,02           // Standard
 RO27:7082 18 00            jr   7084
 RO27:7084 EA 81 CC         ld   (CC81),a
 RO27:7087 CD 61 75         call 7561           // File Menu Bullet Pointing Right default position
 RO27:708A CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:708D CD D2 04         call 04D2           // Next frame
 RO27:7090 C9               ret                 // Establishes Bullet Pointing Right position based on choice in File Menu
 RO27:7091 3E 0A            ld   a,0A
 RO27:7093 01 02 00         ld   bc,0002
 RO27:7096 11 01 01         ld   de,0101
 RO27:7099 26 11            ld   h,11
 RO27:709B EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:709F 3E AA            ld   a,AA           // Horizontal Flip, BG Priority
 RO27:70A1 01 02 13         ld   bc,1302
 RO27:70A4 11 01 01         ld   de,0101
 RO27:70A7 26 11            ld   h,11
 RO27:70A9 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:70AD 3E 00            ld   a,00
 RO27:70AF E0 83            ld   (ff00+83),a
 RO27:70B1 E0 4F            ld   (ff00+4F),a
 RO27:70B3 01 02 01         ld   bc,0102
 RO27:70B6 CD D4 0E         call 0ED4           // HL = $9841
 RO27:70B9 3E 12            ld   a,12           // Separator
 RO27:70BB 01 12 00         ld   bc,0012
 RO27:70BE CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO27:70C1 3E 01            ld   a,01
 RO27:70C3 E0 83            ld   (ff00+83),a
 RO27:70C5 E0 4F            ld   (ff00+4F),a
 RO27:70C7 01 02 01         ld   bc,0102
 RO27:70CA CD D4 0E         call 0ED4           // HL = $9841
 RO27:70CD 3E 0A            ld   a,0A
 RO27:70CF 01 12 00         ld   bc,0012
 RO27:70D2 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO27:70D5 C9               ret                 // File Menu Separator for used File
 RO27:70D6 3E 0A            ld   a,0A
 RO27:70D8 01 20 00         ld   bc,0020
 RO27:70DB 11 01 01         ld   de,0101
 RO27:70DE 26 11            ld   h,11
 RO27:70E0 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:70E4 3E AA            ld   a,AA
 RO27:70E6 01 20 13         ld   bc,1320
 RO27:70E9 11 01 01         ld   de,0101
 RO27:70EC 26 11            ld   h,11
 RO27:70EE EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:70F2 3E 00            ld   a,00
 RO27:70F4 E0 83            ld   (ff00+83),a
 RO27:70F6 E0 4F            ld   (ff00+4F),a
 RO27:70F8 01 20 01         ld   bc,0120
 RO27:70FB CD D4 0E         call 0ED4           // HL = $9C01
 RO27:70FE 3E 12            ld   a,12           // Separator
 RO27:7100 01 12 00         ld   bc,0012
 RO27:7103 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO27:7106 3E 01            ld   a,01
 RO27:7108 E0 83            ld   (ff00+83),a
 RO27:710A E0 4F            ld   (ff00+4F),a
 RO27:710C 01 20 01         ld   bc,0120
 RO27:710F CD D4 0E         call 0ED4           // HL = $9C01
 RO27:7112 3E 0A            ld   a,0A
 RO27:7114 01 12 00         ld   bc,0012
 RO27:7117 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO27:711A C9               ret                 // File Menu Separator for unused File
 RO27:711B CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:711E CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:7121 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:7124 AF               xor  a
 RO27:7125 E0 95            ld   (ff00+95),a
 RO27:7127 E0 96            ld   (ff00+96),a
 RO27:7129 EA 82 CC         ld   (CC82),a
 RO27:712C EF 10 A8 68                          // Sets up basic covered graphics values
 RO27:7130 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:7134 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:7137 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:713A 3E 00            ld   a,00
 RO27:713C E0 83            ld   (ff00+83),a
 RO27:713E E0 4F            ld   (ff00+4F),a
 RO27:7140 3E 70            ld   a,70
 RO27:7142 EF 15 91 66                          // VRA1:($9630~$96FF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO27:7146 F0 83            ld   a,(ff00+83)
 RO27:7148 F5               push af
 RO27:7149 3E 01            ld   a,01
 RO27:714B E0 83            ld   (ff00+83),a
 RO27:714D E0 4F            ld   (ff00+4F),a
 RO27:714F 11 77 75         ld   de,7577
 RO27:7152 21 00 91         ld   hl,9100
 RO27:7155 01 E0 03         ld   bc,03E0
 RO27:7158 EF 27 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:715C F1               pop  af
 RO27:715D E0 83            ld   (ff00+83),a
 RO27:715F E0 4F            ld   (ff00+4F),a
 RO27:7161 3E 00            ld   a,00
 RO27:7163 06 08            ld   b,08
 RO27:7165 21 57 79         ld   hl,7957
 RO27:7168 0E 27            ld   c,27
 RO27:716A CD D9 06         call 06D9           // ($C4E0) to ($C51F) hold ($7957) to ($7996)
 RO27:716D CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO27:7170 CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO27:7173 FA 29 C6         ld   a,(C629)
 RO27:7176 FE 01            cp   a,01           // Continue
 RO27:7178 20 3A            jr   nz,71B4
 RO27:717A 3E 0A            ld   a,0A
 RO27:717C 01 11 0B         ld   bc,0B11
 RO27:717F 11 01 03         ld   de,0301
 RO27:7182 26 14            ld   h,14           // "START"
 RO27:7184 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7188 3E 08            ld   a,08
 RO27:718A 01 11 0E         ld   bc,0E11
 RO27:718D 11 01 05         ld   de,0501
 RO27:7190 26 17            ld   h,17           // "Medal"
 RO27:7192 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7196 3E 0A            ld   a,0A
 RO27:7198 01 11 01         ld   bc,0111
 RO27:719B 11 01 03         ld   de,0301
 RO27:719E 26 45            ld   h,45           // "SELECT"
 RO27:71A0 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:71A4 3E 08            ld   a,08
 RO27:71A6 01 11 04         ld   bc,0411
 RO27:71A9 11 01 06         ld   de,0601
 RO27:71AC 26 48            ld   h,48           // "Whole Map"
 RO27:71AE EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:71B2 18 1C            jr   71D0
 RO27:71B4 3E 0A            ld   a,0A           // Not Continue Branch
 RO27:71B6 01 11 0E         ld   bc,0E11
 RO27:71B9 11 01 01         ld   de,0101
 RO27:71BC 26 32            ld   h,32           // "B"
 RO27:71BE EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:71C2 3E 08            ld   a,08
 RO27:71C4 01 11 0F         ld   bc,0F11
 RO27:71C7 11 01 03         ld   de,0301
 RO27:71CA 26 33            ld   h,33           // "Back"
 RO27:71CC EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:71D0 01 00 00         ld   bc,0000        // From Continue Branch
 RO27:71D3 11 03 14         ld   de,1403
 RO27:71D6 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO27:71DA 01 02 00         ld   bc,0002
 RO27:71DD 11 0F 14         ld   de,140F
 RO27:71E0 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO27:71E4 CD 91 70         call 7091           // File Menu Separator for used File
 RO27:71E7 3E 08            ld   a,08
 RO27:71E9 01 01 02         ld   bc,0201
 RO27:71EC 11 01 04         ld   de,0401
 RO27:71EF 26 1C            ld   h,1C           // "DATA 1"
 RO27:71F1 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:71F5 3E 08            ld   a,08
 RO27:71F7 01 01 08         ld   bc,0801
 RO27:71FA 11 01 03         ld   de,0301
 RO27:71FD 26 1C            ld   h,1C           // "DATA"
 RO27:71FF EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7203 3E 08            ld   a,08
 RO27:7205 01 01 0B         ld   bc,0B01
 RO27:7208 11 01 01         ld   de,0101
 RO27:720B 26 20            ld   h,20           // "2"
 RO27:720D EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7211 3E 08            ld   a,08
 RO27:7213 01 01 0E         ld   bc,0E01
 RO27:7216 11 01 03         ld   de,0301
 RO27:7219 26 1C            ld   h,1C           // "DATA"
 RO27:721B EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:721F 3E 08            ld   a,08
 RO27:7221 01 01 11         ld   bc,1101
 RO27:7224 11 01 01         ld   de,0101
 RO27:7227 26 21            ld   h,21           // "3"
 RO27:7229 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:722D EF 14 30 5D                          // Establishes Player Rank Graphics basics
 RO27:7231 3E 0D            ld   a,0D
 RO27:7233 06 01            ld   b,01
 RO27:7235 0E 22            ld   c,22
 RO27:7237 21 44 61         ld   hl,6144
 RO27:723A CD D9 06         call 06D9           // ($C4E0 + A * 8) to ($C4E0 + A * 8 + B * 8 - 1) hold C:(HL) to C:(HL + B * 8 - 1)
 RO27:723D CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO27:7240 F0 83            ld   a,(ff00+83)
 RO27:7242 F5               push af
 RO27:7243 3E 01            ld   a,01
 RO27:7245 E0 83            ld   (ff00+83),a
 RO27:7247 E0 4F            ld   (ff00+4F),a
 RO27:7249 11 4C 5F         ld   de,5F4C        // Marching Soldier
 RO27:724C 21 00 80         ld   hl,8000
 RO27:724F 01 D0 01         ld   bc,01D0
 RO27:7252 EF 22 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:7256 F1               pop  af
 RO27:7257 E0 83            ld   (ff00+83),a
 RO27:7259 E0 4F            ld   (ff00+4F),a
 RO27:725B F0 83            ld   a,(ff00+83)
 RO27:725D F5               push af
 RO27:725E 3E 20            ld   a,20
 RO27:7260 0E 80            ld   c,80
 RO27:7262 06 22            ld   b,22
 RO27:7264 11 25 5F         ld   de,5F25
 RO27:7267 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO27:726A EA 84 CC         ld   (CC84),a       // Save Soldier #1 Sprite #
 RO27:726D 01 56 9A         ld   bc,9A56
 RO27:7270 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO27:7273 F1               pop  af
 RO27:7274 E0 83            ld   (ff00+83),a
 RO27:7276 E0 4F            ld   (ff00+4F),a
 RO27:7278 F0 83            ld   a,(ff00+83)
 RO27:727A F5               push af
 RO27:727B 3E 20            ld   a,20
 RO27:727D 0E 80            ld   c,80
 RO27:727F 06 22            ld   b,22
 RO27:7281 11 25 5F         ld   de,5F25
 RO27:7284 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO27:7287 EA 85 CC         ld   (CC85),a       // Save Soldier #2 Sprite #
 RO27:728A 01 6E 9A         ld   bc,9A6E
 RO27:728D CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO27:7290 F1               pop  af
 RO27:7291 E0 83            ld   (ff00+83),a
 RO27:7293 E0 4F            ld   (ff00+4F),a
 RO27:7295 F0 83            ld   a,(ff00+83)
 RO27:7297 F5               push af
 RO27:7298 3E 20            ld   a,20
 RO27:729A 0E 80            ld   c,80
 RO27:729C 06 22            ld   b,22
 RO27:729E 11 25 5F         ld   de,5F25
 RO27:72A1 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO27:72A4 EA 86 CC         ld   (CC86),a       // Save Soldier #3 Sprite #
 RO27:72A7 01 86 9A         ld   bc,9A86
 RO27:72AA CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO27:72AD F1               pop  af
 RO27:72AE E0 83            ld   (ff00+83),a
 RO27:72B0 E0 4F            ld   (ff00+4F),a
 RO27:72B2 3E 07            ld   a,07
 RO27:72B4 E0 97            ld   (ff00+97),a
 RO27:72B6 3E 10            ld   a,10
 RO27:72B8 E0 98            ld   (ff00+98),a    // Intended WX/WY = 7,16
 RO27:72BA 01 20 00         ld   bc,0020
 RO27:72BD 11 0F 14         ld   de,140F
 RO27:72C0 EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO27:72C4 CD D6 70         call 70D6           // File Menu Separator for unused File
 RO27:72C7 3E 08            ld   a,08
 RO27:72C9 01 27 07         ld   bc,0727
 RO27:72CC 11 01 06         ld   de,0601
 RO27:72CF 26 3F            ld   h,3F           // "NO DATA"
 RO27:72D1 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:72D5 FA 29 C6         ld   a,(C629)
 RO27:72D8 FE 01            cp   a,01           // Continue
 RO27:72DA 28 1C            jr   z,72F8         // Skips "B:Back" insert for Continue
 RO27:72DC 3E 0A            ld   a,0A
 RO27:72DE 01 2F 0E         ld   bc,0E2F
 RO27:72E1 11 01 01         ld   de,0101
 RO27:72E4 26 32            ld   h,32           // "B"
 RO27:72E6 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:72EA 3E 08            ld   a,08
 RO27:72EC 01 2F 0F         ld   bc,0F2F
 RO27:72EF 11 01 03         ld   de,0301
 RO27:72F2 26 33            ld   h,33           // "Back"
 RO27:72F4 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:72F8 F0 83            ld   a,(ff00+83)
 RO27:72FA F5               push af
 RO27:72FB 3E 01            ld   a,01
 RO27:72FD E0 83            ld   (ff00+83),a
 RO27:72FF E0 4F            ld   (ff00+4F),a
 RO27:7301 21 00 90         ld   hl,9000
 RO27:7304 01 10 00         ld   bc,0010
 RO27:7307 AF               xor  a
 RO27:7308 CD 79 3B         call 3B79           // (HL ~ HL+BC-1) = A
 RO27:730B F1               pop  af
 RO27:730C E0 83            ld   (ff00+83),a
 RO27:730E E0 4F            ld   (ff00+4F),a
 RO27:7310 C9               ret  
 RO27:7311 FA 83 CC         ld   a,(CC83)       // File #
 RO27:7314 06 00            ld   b,00
 RO27:7316 EF 13 24 5A                          // Reads Save A for Beginner Save info to get important data for text
 RO27:731A FA 92 CC         ld   a,(CC92)       // Map #
 RO27:731D 3C               inc  a
 RO27:731E 01 08 04         ld   bc,0408
 RO27:7321 16 02            ld   d,02
 RO27:7323 CD 37 32         call 3237           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:7326 21 89 CC         ld   hl,CC89
 RO27:7329 01 08 07         ld   bc,0708
 RO27:732C CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:732F FA 93 CC         ld   a,(CC93)
 RO27:7332 FE FF            cp   a,FF
 RO27:7334 28 27            jr   z,735D
 RO27:7336 CB 3F            srl  a
 RO27:7338 3C               inc  a              // Day #
 RO27:7339 01 09 04         ld   bc,0409
 RO27:733C 16 02            ld   d,02
 RO27:733E CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:7341 3E 22            ld   a,22           // Day Kanji
 RO27:7343 16 08            ld   d,08
 RO27:7345 01 09 06         ld   bc,0609
 RO27:7348 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:734B 3E 23            ld   a,23           // Eye Kanji
 RO27:734D 16 08            ld   d,08
 RO27:734F 01 09 07         ld   bc,0709
 RO27:7352 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7355 FA 84 CC         ld   a,(CC84)       // Save Soldier #1 Sprite #
 RO27:7358 CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO27:735B 18 2A            jr   7387
 RO27:735D AF               xor  a
 RO27:735E 16 00            ld   d,00
 RO27:7360 01 09 04         ld   bc,0409
 RO27:7363 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7366 AF               xor  a
 RO27:7367 16 00            ld   d,00
 RO27:7369 01 09 05         ld   bc,0509
 RO27:736C CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:736F AF               xor  a
 RO27:7370 16 00            ld   d,00
 RO27:7372 01 09 06         ld   bc,0609
 RO27:7375 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7378 AF               xor  a
 RO27:7379 16 00            ld   d,00
 RO27:737B 01 09 07         ld   bc,0709
 RO27:737E CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7381 FA 84 CC         ld   a,(CC84)       // Save Soldier #1 Sprite #
 RO27:7384 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:7387 FA 95 CC         ld   a,(CC95)       // Map Clear count
 RO27:738A 01 09 0C         ld   bc,0C09
 RO27:738D 16 02            ld   d,02
 RO27:738F CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:7392 FA 96 CC         ld   a,(CC96)
 RO27:7395 01 09 0F         ld   bc,0F09
 RO27:7398 16 02            ld   d,02
 RO27:739A CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:739D C9               ret                 // Establishes Beginner Mode Save Info graphics
 RO27:739E FA 83 CC         ld   a,(CC83)       // File #
 RO27:73A1 06 01            ld   b,01
 RO27:73A3 EF 13 24 5A                          // Reads Save A for Campaign Save info to get important data for text
 RO27:73A7 FA 92 CC         ld   a,(CC92)       // Map #
 RO27:73AA 3C               inc  a
 RO27:73AB 01 0B 04         ld   bc,040B
 RO27:73AE 16 02            ld   d,02
 RO27:73B0 CD 37 32         call 3237           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:73B3 21 89 CC         ld   hl,CC89
 RO27:73B6 01 0B 07         ld   bc,070B
 RO27:73B9 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:73BC FA 93 CC         ld   a,(CC93)
 RO27:73BF FE FF            cp   a,FF
 RO27:73C1 28 27            jr   z,73EA
 RO27:73C3 CB 3F            srl  a
 RO27:73C5 3C               inc  a
 RO27:73C6 01 0C 04         ld   bc,040C
 RO27:73C9 16 02            ld   d,02
 RO27:73CB CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:73CE 3E 22            ld   a,22
 RO27:73D0 16 08            ld   d,08
 RO27:73D2 01 0C 06         ld   bc,060C
 RO27:73D5 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:73D8 3E 23            ld   a,23
 RO27:73DA 16 08            ld   d,08
 RO27:73DC 01 0C 07         ld   bc,070C
 RO27:73DF CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:73E2 FA 85 CC         ld   a,(CC85)       // Save Soldier #2 Sprite #
 RO27:73E5 CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO27:73E8 18 2A            jr   7414
 RO27:73EA AF               xor  a
 RO27:73EB 16 00            ld   d,00
 RO27:73ED 01 0C 04         ld   bc,040C
 RO27:73F0 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:73F3 AF               xor  a
 RO27:73F4 16 00            ld   d,00
 RO27:73F6 01 0C 05         ld   bc,050C
 RO27:73F9 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:73FC AF               xor  a
 RO27:73FD 16 00            ld   d,00
 RO27:73FF 01 0C 06         ld   bc,060C
 RO27:7402 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7405 AF               xor  a
 RO27:7406 16 00            ld   d,00
 RO27:7408 01 0C 07         ld   bc,070C
 RO27:740B CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:740E FA 85 CC         ld   a,(CC85)       // Save Soldier #2 Sprite #
 RO27:7411 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:7414 FA 95 CC         ld   a,(CC95)
 RO27:7417 01 0C 0C         ld   bc,0C0C
 RO27:741A 16 02            ld   d,02
 RO27:741C CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:741F FA 96 CC         ld   a,(CC96)
 RO27:7422 01 0C 0F         ld   bc,0F0C
 RO27:7425 16 02            ld   d,02
 RO27:7427 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:742A FA 94 CC         ld   a,(CC94)
 RO27:742D EA 76 CC         ld   (CC76),a
 RO27:7430 C9               ret                 // Establishes Campaign Mode Save Info graphics
 RO27:7431 FA 83 CC         ld   a,(CC83)       // File #
 RO27:7434 06 02            ld   b,02
 RO27:7436 EF 13 24 5A                          // Reads Save A for Standard Save info to get important data for text
 RO27:743A FA 93 CC         ld   a,(CC93)
 RO27:743D FE FF            cp   a,FF
 RO27:743F 28 3C            jr   z,747D         // Branch if none
 RO27:7441 CB 3F            srl  a
 RO27:7443 3C               inc  a              // Day #
 RO27:7444 01 0F 04         ld   bc,040F
 RO27:7447 16 02            ld   d,02
 RO27:7449 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:744C 3E 22            ld   a,22
 RO27:744E 16 08            ld   d,08
 RO27:7450 01 0F 06         ld   bc,060F
 RO27:7453 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7456 3E 23            ld   a,23
 RO27:7458 16 08            ld   d,08
 RO27:745A 01 0F 07         ld   bc,070F
 RO27:745D CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7460 FA 92 CC         ld   a,(CC92)
 RO27:7463 3C               inc  a
 RO27:7464 01 0E 04         ld   bc,040E
 RO27:7467 16 02            ld   d,02
 RO27:7469 CD 37 32         call 3237           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:746C 21 89 CC         ld   hl,CC89
 RO27:746F 01 0E 07         ld   bc,070E
 RO27:7472 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7475 FA 86 CC         ld   a,(CC86)       // Save Soldier #3 Sprite #
 RO27:7478 CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO27:747B 18 54            jr   74D1
 RO27:747D AF               xor  a
 RO27:747E 16 00            ld   d,00
 RO27:7480 01 0F 04         ld   bc,040F
 RO27:7483 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7486 AF               xor  a
 RO27:7487 16 00            ld   d,00
 RO27:7489 01 0F 05         ld   bc,050F
 RO27:748C CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:748F AF               xor  a
 RO27:7490 16 00            ld   d,00
 RO27:7492 01 0F 06         ld   bc,060F
 RO27:7495 CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:7498 AF               xor  a
 RO27:7499 16 00            ld   d,00
 RO27:749B 01 0F 07         ld   bc,070F
 RO27:749E CD C2 37         call 37C2           // Text Character A with Palette/Attributes D place at coordinates BC
 RO27:74A1 F0 83            ld   a,(ff00+83)
 RO27:74A3 F5               push af
 RO27:74A4 3E 00            ld   a,00
 RO27:74A6 E0 83            ld   (ff00+83),a
 RO27:74A8 E0 4F            ld   (ff00+4F),a
 RO27:74AA 01 0E 04         ld   bc,040E
 RO27:74AD 11 01 0B         ld   de,0B01
 RO27:74B0 AF               xor  a
 RO27:74B1 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:74B5 3E 01            ld   a,01
 RO27:74B7 E0 83            ld   (ff00+83),a
 RO27:74B9 E0 4F            ld   (ff00+4F),a
 RO27:74BB 01 0E 04         ld   bc,040E
 RO27:74BE 11 01 0B         ld   de,0B01
 RO27:74C1 AF               xor  a
 RO27:74C2 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:74C6 F1               pop  af
 RO27:74C7 E0 83            ld   (ff00+83),a
 RO27:74C9 E0 4F            ld   (ff00+4F),a
 RO27:74CB FA 86 CC         ld   a,(CC86)       // Save Soldier #3 Sprite #
 RO27:74CE CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:74D1 FA 95 CC         ld   a,(CC95)
 RO27:74D4 01 0F 0C         ld   bc,0C0F
 RO27:74D7 16 02            ld   d,02
 RO27:74D9 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:74DC FA 96 CC         ld   a,(CC96)
 RO27:74DF 01 0F 0F         ld   bc,0F0F
 RO27:74E2 16 02            ld   d,02
 RO27:74E4 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:74E7 C9               ret                 // Establishes Standard Mode Save Info graphics
 RO27:74E8 F0 83            ld   a,(ff00+83)
 RO27:74EA F5               push af
 RO27:74EB 3E 00            ld   a,00
 RO27:74ED E0 83            ld   (ff00+83),a
 RO27:74EF E0 4F            ld   (ff00+4F),a
 RO27:74F1 3E 20            ld   a,20
 RO27:74F3 0E 00            ld   c,00
 RO27:74F5 06 15            ld   b,15
 RO27:74F7 11 FA 6F         ld   de,6FFA        // Container Box
 RO27:74FA CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO27:74FD EA 6F CC         ld   (CC6F),a
 RO27:7500 3E 20            ld   a,20
 RO27:7502 0E 00            ld   c,00
 RO27:7504 06 15            ld   b,15
 RO27:7506 11 6E 6F         ld   de,6F6E       // Bullet Pointing Right
 RO27:7509 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO27:750C EA 70 CC         ld   (CC70),a
 RO27:750F F1               pop  af
 RO27:7510 E0 83            ld   (ff00+83),a
 RO27:7512 E0 4F            ld   (ff00+4F),a
 RO27:7514 C9               ret                 // Establishes player option sprites of File Menu
 RO27:7515 CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO27:7518 C9               ret  
 RO27:7519 FA 2A C6         ld   a,(C62A)
 RO27:751C 06 30            ld   b,30
 RO27:751E CD 95 29         call 2995           // HL = A * B
 RO27:7521 7D               ld   a,l
 RO27:7522 C6 27            add  a,27
 RO27:7524 47               ld   b,a
 RO27:7525 3E 1C            ld   a,1C
 RO27:7527 4F               ld   c,a
 RO27:7528 FA 6F CC         ld   a,(CC6F)       // Container Box
 RO27:752B CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO27:752E FA 6E CC         ld   a,(CC6E)
 RO27:7531 FE 01            cp   a,01           // Continue
 RO27:7533 28 06            jr   z,753B         // End without hiding Bullet Pointing Right if in Continue
 RO27:7535 FA 70 CC         ld   a,(CC70)       // Bullet Pointing Right
 RO27:7538 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:753B C9               ret                 // Establishes File Choices graphics on File Menu
 RO27:753C FA 2A C6         ld   a,(C62A)
 RO27:753F EF 13 DC 58                          // SRA0($A007 + ($C62A))
 RO27:7543 CB 47            bit 0,a
 RO27:7545 20 0D            jr   nz,7554        // Displaying Bullet Pointing Right branch if file exists
 RO27:7547 FA 70 CC         ld   a,(CC70)       // Bullet Pointing Right
 RO27:754A CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO27:754D CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:7550 CD D2 04         call 04D2           // Next frame
 RO27:7553 C9               ret  
 RO27:7554 FA 70 CC         ld   a,(CC70)       // Bullet Pointing Right
 RO27:7557 CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO27:755A CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:755D CD D2 04         call 04D2           // Next frame
 RO27:7560 C9               ret                 // Handles Bullet Pointing Right visibility on File Menu
 RO27:7561 FA 81 CC         ld   a,(CC81)       // Mode choice
 RO27:7564 06 18            ld   b,18
 RO27:7566 CD 95 29         call 2995           // HL = A * B
 RO27:7569 7D               ld   a,l
 RO27:756A C6 58            add  a,58
 RO27:756C 4F               ld   c,a
 RO27:756D 3E 14            ld   a,14
 RO27:756F 47               ld   b,a
 RO27:7570 FA 70 CC         ld   a,(CC70)       // Bullet Pointing Right
 RO27:7573 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO27:7576 C9               ret                 // File Menu Bullet Pointing Right default position

 RO27:7577 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF 00 FF
 RO27:7587 DC 64 DC 64 DF 67 D8 67 DF 60 D8 67 DF 67 DC 64
 RO27:7597 00 00 00 00 FF FF 00 FF FF 00 00 FF FF FF 00 00
 RO27:75A7 00 FF 00 FF 00 FF 00 FF 7E FF 00 FF 00 FF 00 FF

 RO27:75B7 80 FF 00 88 00 BD 00 8D 00 ED 00 ED 00 8D 80 FF
 RO27:75C7 00 FF 00 CC 00 B5 00 B5 00 84 00 B5 00 B5 00 FF
 RO27:75D7 01 FF 00 63 00 B7 00 B7 00 77 00 B7 00 B7 01 FF
 RO27:75E7 00 00 00 06 00 18 00 60 00 80 00 60 00 18 00 06
 RO27:75F7 00 00 00 10 00 20 00 20 00 70 00 48 00 8A 00 8C
 RO27:7607 00 00 00 80 00 80 00 80 00 82 00 82 00 84 00 78
 RO27:7617 00 00 00 00 00 10 00 1C 00 10 00 70 00 98 00 64
 RO27:7627 00 00 00 38 00 00 00 7C 00 82 00 02 00 04 00 78

 RO27:7637 00 FF F8 07 CC 33 CC 33 CD 32 CD 32 FB 04 00 FF
 RO27:7647 00 FF 6F 90 E3 1C B3 4C B3 4C FB 04 1B E4 00 FF
 RO27:7657 00 FF CC 33 1C E3 16 E9 36 C9 3F C0 63 9C 00 FF
 RO27:7667 00 FF 30 CF 70 8F 30 CF 30 CF 30 CF 30 CF 00 FF
 RO27:7677 00 FF FC 03 0E F1 7E 81 FC 03 C0 3F FE 01 00 FF
 RO27:7687 00 FF FC 03 0E F1 7C 83 0E F1 0E F1 FC 03 00 FF

 RO27:7697 00 FF 7E 81 42 BD 42 BD 7E 81 42 BD 42 BD 7E 81
 RO27:76A7 00 FF 7E 81 42 BD 7E 81 42 BD 7E 81 42 BD 7E 81

 RO27:76B7 FF 00 FF 7F FF 60 FF 60 FF 61 FF 61 FF 61 FF 60
 RO27:76C7 FF 00 FF FE FF 06 FF 02 FF C2 FF C2 FF C2 FF 06
 RO27:76D7 FF 60 FF 61 FF 61 FF 61 FF 60 FF 60 FF 7F FF 00
 RO27:76E7 FF 06 FF C2 FF C2 FF C2 FF 02 FF 06 FF FE FF 00

 RO27:76F7 FF 00 FF 7F FF 70 FF 60 FF 41 FF 43 FF 43 FF 43
 RO27:7707 FF 00 FF FE FF 06 FF 06 FF FE FF FE FF FE FF FE
 RO27:7717 FF 43 FF 43 FF 43 FF 41 FF 60 FF 70 FF 7F FF 00
 RO27:7727 FF FE FF FE FF FE FF FE FF 06 FF 06 FF FE FF 00

 RO27:7737 FF 00 FF 7F FF 60 FF 40 FF 41 FF 41 FF 40 FF 40
 RO27:7747 FF 00 FF FE FF 06 FF 06 FF FE FF FE FF 06 FF 02
 RO27:7757 FF 40 FF 60 FF 7F FF 7F FF 40 FF 40 FF 7F FF 00
 RO27:7767 FF 02 FF 02 FF 82 FF 82 FF 02 FF 06 FF FE FF 00

 RO27:7777 00 FF 06 81 1C 81 3A 81 36 81 6E 81 5E 81 00 FF
 RO27:7787 00 00 00 FE 7C BE 78 E2 7C FE 6C 8E 7C FA 00 FE

 RO27:7797 81 FF 00 C7 00 DB 00 C7 00 DB 00 DB 00 C7 81 FF
 RO27:77A7 00 00 00 20 00 FC 00 20 00 F8 00 42 00 42 00 3C
 RO27:77B7 00 0A 00 40 00 4E 00 30 00 40 00 80 00 80 00 7E
 RO27:77C7 00 00 00 7C 00 08 00 3C 00 C2 00 32 00 4A 00 3C

 RO27:77D7 FF 00 EF 10 EF 10 83 7C C7 38 C7 38 BB 44 FF 00
 RO27:77E7 FF FF FF EF FF EF FF 83 FF C7 FF C7 FF BB FF FF
 RO27:77F7 00 00 00 30 00 60 00 60 00 72 00 7E 00 3C 00 00
 RO27:7807 FF FF CF CF 9F 9F 9F 9F 8D 8D 81 81 C3 C3 FF FF

 RO27:7817 00 FF 3E C1 60 9F 60 9F 60 9F 60 9F 3E C1 00 FF
 RO27:7827 00 FF C1 3E C1 3E C1 3E C1 3E C1 3E FD 02 00 FF
 RO27:7837 00 FF F8 07 81 7E F1 0E F3 0C 83 7C FE 01 00 FF
 RO27:7847 00 FF C7 38 C6 39 66 99 67 98 F6 09 36 C9 00 FF
 RO27:7857 00 FF CC 33 6C 93 6C 93 CC 33 C0 3F 6C 93 00 FF

 RO27:7867 00 FF 39 C6 39 C6 2D D2 2D D2 27 D8 27 D8 00 FF
 RO27:7877 00 FF 7E 81 66 99 66 99 66 99 66 99 7E 81 00 FF
 RO27:7887 00 FF 1F E0 19 E6 19 E6 19 E6 19 E6 1F E0 00 FF
 RO27:7897 00 FF 06 F9 8E 71 8B 74 9B 64 9F 60 31 CE 00 FF
 RO27:78A7 00 FF 7E 81 18 E7 18 E7 18 E7 98 67 99 66 00 FF
 RO27:78B7 00 FF 30 CF 70 8F 58 A7 D8 27 FC 03 8C 73 00 FF

 RO27:78C7 80 FF 00 88 00 BB 00 88 00 EB 00 EB 00 88 80 FF
 RO27:78D7 00 FF 00 B1 00 B7 00 B1 00 B7 00 B7 00 91 00 FF
 RO27:78E7 01 FF 00 11 00 7B 00 7B 00 7B 00 7B 00 1B 01 FF
 RO27:78F7 00 0A 00 40 00 44 00 FE 00 44 00 4C 00 40 00 3E
 RO27:7907 00 00 00 10 00 20 00 20 00 70 00 48 00 8A 00 8C
 RO27:7917 00 00 00 40 00 FC 00 40 00 5E 00 80 00 A0 00 9E
 RO27:7927 00 00 00 00 00 84 00 82 00 82 00 82 00 A2 00 40
 RO27:7937 00 00 00 40 00 FC 00 40 00 7C 00 C2 00 02 00 3C
 RO27:7947 00 0A 00 10 00 FC 00 38 00 48 00 38 00 08 00 70

 RO27:7957 00 00 00 69 FF 7F 40 72
 RO27:795F FF 7F B5 56 6B 2D 00 00
 RO27:7967 FF 7F 6C 03 08 02 00 00
 RO27:796F 00 69 9F 00 FF 7F 00 00
 RO27:7977 10 42 6B 2D C6 18 00 00
 RO27:797F 9F 53 DF 02 74 01 00 00
 RO27:7987 F0 63 C0 4A 60 25 00 00
 RO27:798F 1F 7C 1F 7C 00 00 FF 7F

 RO27:7997 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:799A CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:799D CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:79A0 EF 10 A8 68                          // Sets up basic covered graphics values
 RO27:79A4 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:79A8 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:79AB AF               xor  a
 RO27:79AC E0 95            ld   (ff00+95),a
 RO27:79AE E0 96            ld   (ff00+96),a
 RO27:79B0 E0 97            ld   (ff00+97),a
 RO27:79B2 E0 98            ld   (ff00+98),a
 RO27:79B4 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:79B7 3E 00            ld   a,00
 RO27:79B9 E0 83            ld   (ff00+83),a
 RO27:79BB E0 4F            ld   (ff00+4F),a
 RO27:79BD 3E 00            ld   a,00
 RO27:79BF EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO27:79C3 01 05 01         ld   bc,0105
 RO27:79C6 11 07 12         ld   de,1207
 RO27:79C9 EF 22 47 62                          // Basic setup for table rectangle 1~18,5~11 including defaulted palette for interior's tiles
 RO27:79CD 21 DF 79         ld   hl,79DF        // "Capitulate?"
 RO27:79D0 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO27:79D3 AF               xor  a
 RO27:79D4 EA 69 DC         ld   (DC69),a       // Default NO
 RO27:79D7 01 09 07         ld   bc,0709
 RO27:79DA EF 15 64 66                          // Sets up "OK/NO" with "NO" highlighted at 7,9
 RO27:79DE C9               ret                 // Establishes graphics for Yield confirmation screen

 RO27:79DF 06 07
 RO27:79E1 6A 63 7C 68 6C 7F 6D 66 3F 00

 RO27:79EB F0 82            ld   a,(ff00+82)
 RO27:79ED F5               push af
 RO27:79EE 3E 04            ld   a,04
 RO27:79F0 E0 82            ld   (ff00+82),a
 RO27:79F2 E0 70            ld   (ff00+70),a
 RO27:79F4 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:79F7 CD 97 79         call 7997           // Establishes graphics for Yield confirmation screen
 RO27:79FA CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:79FD CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO27:7A00 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:7A03 3E 00            ld   a,00
 RO27:7A05 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:7A09 F0 92            ld   a,(ff00+92)
 RO27:7A0B CB 47            bit  0,a            // A
 RO27:7A0D 28 07            jr   z,7A16
 RO27:7A0F 3E 02            ld   a,02
 RO27:7A11 CD 44 38         call 3844
 RO27:7A14 18 3F            jr   7A55           // Ends with A = OK/NO choice for A Button press
 RO27:7A16 CB 4F            bit  1,a            // B
 RO27:7A18 28 0C            jr   z,7A26
 RO27:7A1A 3E 0C            ld   a,0C
 RO27:7A1C CD 44 38         call 3844
 RO27:7A1F 3E FF            ld   a,FF
 RO27:7A21 EA 69 DC         ld   (DC69),a
 RO27:7A24 18 2F            jr   7A55           // Ends with A = -1 for B Button press
 RO27:7A26 CB 67            bit  4,a            // Right
 RO27:7A28 28 12            jr   z,7A3C
 RO27:7A2A AF               xor  a
 RO27:7A2B EA 69 DC         ld   (DC69),a
 RO27:7A2E 3E 01            ld   a,01
 RO27:7A30 CD 44 38         call 3844
 RO27:7A33 01 09 07         ld   bc,0709
 RO27:7A36 EF 15 64 66                          // Sets up "OK/NO" with "NO" highlighted at 7,9
 RO27:7A3A 18 17            jr   7A53           // Further wait for button input after pressing Right
 RO27:7A3C CB 6F            bit  5,a            // Left
 RO27:7A3E 28 13            jr   z,7A53
 RO27:7A40 3E 01            ld   a,01
 RO27:7A42 EA 69 DC         ld   (DC69),a
 RO27:7A45 3E 01            ld   a,01
 RO27:7A47 CD 44 38         call 3844
 RO27:7A4A 01 09 07         ld   bc,0709
 RO27:7A4D EF 15 37 66                          // Sets up "OK/NO" with "OK" highlighted at 7,9
 RO27:7A51 18 00            jr   7A53           // Further wait for button input after pressing Left
 RO27:7A53 18 A8            jr   79FD
 RO27:7A55 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:7A58 FA 69 DC         ld   a,(DC69)
 RO27:7A5B 57               ld   d,a
 RO27:7A5C F1               pop  af
 RO27:7A5D E0 82            ld   (ff00+82),a
 RO27:7A5F E0 70            ld   (ff00+70),a
 RO27:7A61 7A               ld   a,d
 RO27:7A62 C9               ret                 // Controls for Yield confirmation screen; ends with A = 1 for "OK", 0 for "NO", or -1 for cancellation
 RO27:7A63 3E 0A            ld   a,0A
 RO27:7A65 01 06 01         ld   bc,0106
 RO27:7A68 11 01 01         ld   de,0101
 RO27:7A6B 26 22            ld   h,22           // Border Fork
 RO27:7A6D EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7A71 3E AA            ld   a,AA           // Horizontal Flip + BG Priority
 RO27:7A73 01 06 12         ld   bc,1206
 RO27:7A76 11 01 01         ld   de,0101
 RO27:7A79 26 22            ld   h,22           // Border Fork
 RO27:7A7B EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7A7F 3E 00            ld   a,00
 RO27:7A81 E0 83            ld   (ff00+83),a
 RO27:7A83 E0 4F            ld   (ff00+4F),a
 RO27:7A85 01 06 02         ld   bc,0206
 RO27:7A88 CD D4 0E         call 0ED4           // HL = $98C2
 RO27:7A8B 3E 23            ld   a,23           // Horizontal Border Separator
 RO27:7A8D 01 10 00         ld   bc,0010
 RO27:7A90 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO27:7A93 3E 01            ld   a,01
 RO27:7A95 E0 83            ld   (ff00+83),a
 RO27:7A97 E0 4F            ld   (ff00+4F),a
 RO27:7A99 01 06 02         ld   bc,0206
 RO27:7A9C CD D4 0E         call 0ED4           // HL = $98C2
 RO27:7A9F 3E 0A            ld   a,0A
 RO27:7AA1 01 10 00         ld   bc,0010
 RO27:7AA4 CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO27:7AA7 C9               ret                 // Establishes Border Separator of Results Screen Table
 RO27:7AA8 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:7AAB CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:7AAE CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:7AB1 AF               xor  a
 RO27:7AB2 E0 95            ld   (ff00+95),a
 RO27:7AB4 E0 96            ld   (ff00+96),a
 RO27:7AB6 E0 97            ld   (ff00+97),a
 RO27:7AB8 E0 98            ld   (ff00+98),a
 RO27:7ABA EF 10 A8 68                          // Sets up basic covered graphics values
 RO27:7ABE EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:7AC2 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:7AC5 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:7AC8 3E 00            ld   a,00
 RO27:7ACA E0 83            ld   (ff00+83),a
 RO27:7ACC E0 4F            ld   (ff00+4F),a
 RO27:7ACE 3E 00            ld   a,00
 RO27:7AD0 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO27:7AD4 F0 83            ld   a,(ff00+83)
 RO27:7AD6 F5               push af
 RO27:7AD7 3E 01            ld   a,01
 RO27:7AD9 E0 83            ld   (ff00+83),a
 RO27:7ADB E0 4F            ld   (ff00+4F),a
 RO27:7ADD 11 D3 65         ld   de,65D3        // Results screen graphics
 RO27:7AE0 21 00 90         ld   hl,9000
 RO27:7AE3 01 20 02         ld   bc,0220
 RO27:7AE6 EF 27 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO27:7AEA 11 87 75         ld   de,7587        // Table Border graphics
 RO27:7AED 21 20 92         ld   hl,9220
 RO27:7AF0 01 30 00         ld   bc,0030
 RO27:7AF3 EF 27 50 3B                          // (HL ~ HL+BC-1) = (DE ~ DE+BC-1) (Border separator portion, dash)
 RO27:7AF7 F1               pop  af
 RO27:7AF8 E0 83            ld   (ff00+83),a
 RO27:7AFA E0 4F            ld   (ff00+4F),a
 RO27:7AFC 3E 00            ld   a,00
 RO27:7AFE 06 08            ld   b,08
 RO27:7B00 21 F3 67         ld   hl,67F3
 RO27:7B03 0E 27            ld   c,27
 RO27:7B05 CD D9 06         call 06D9           // ($C4E0) to ($C51F) hold ($67F3) to ($6832)
 RO27:7B08 CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO27:7B0B CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO27:7B0E 3E 0A            ld   a,0A
 RO27:7B10 01 01 04         ld   bc,0401
 RO27:7B13 11 02 0C         ld   de,0C02
 RO27:7B16 26 01            ld   h,01
 RO27:7B18 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7B1C 01 04 01         ld   bc,0104
 RO27:7B1F 11 03 12         ld   de,1203
 RO27:7B22 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO27:7B26 21 5F 7C         ld   hl,7C5F        // "Finishing Turn"
 RO27:7B29 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO27:7B2C FA 33 C6         ld   a,(C633)
 RO27:7B2F CB 3F            srl  a
 RO27:7B31 3C               inc  a              // Day #
 RO27:7B32 01 05 0D         ld   bc,0D05
 RO27:7B35 16 02            ld   d,02
 RO27:7B37 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO27:7B3A 3E 08            ld   a,08
 RO27:7B3C 01 05 0F         ld   bc,0F05
 RO27:7B3F 11 01 01         ld   de,0101
 RO27:7B42 26 19            ld   h,19           // Day Kanji
 RO27:7B44 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7B48 01 06 01         ld   bc,0106
 RO27:7B4B 11 0B 12         ld   de,120B
 RO27:7B4E EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO27:7B52 CD 63 7A         call 7A63           // Establishes Border Separator of Results Screen Table
 RO27:7B55 3E 0B            ld   a,0B
 RO27:7B57 01 08 02         ld   bc,0208
 RO27:7B5A 11 02 02         ld   de,0202
 RO27:7B5D 26 1A            ld   h,1A           // Red Star Symbol
 RO27:7B5F EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7B63 01 07 05         ld   bc,0507
 RO27:7B66 21 6A 7C         ld   hl,7C6A        // "Built Unit"
 RO27:7B69 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7B6C FA B4 C8         ld   a,(C8B4)
 RO27:7B6F 67               ld   h,a
 RO27:7B70 FA B3 C8         ld   a,(C8B3)
 RO27:7B73 6F               ld   l,a            // HL holds Red Star's Built Unit count
 RO27:7B74 01 07 0F         ld   bc,0F07
 RO27:7B77 16 03            ld   d,03
 RO27:7B79 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:7B7C 01 08 05         ld   bc,0508
 RO27:7B7F 21 73 7C         ld   hl,7C73        // "Lost Unit"
 RO27:7B82 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7B85 FA B8 C8         ld   a,(C8B8)
 RO27:7B88 67               ld   h,a
 RO27:7B89 FA B7 C8         ld   a,(C8B7)
 RO27:7B8C 6F               ld   l,a            // HL holds Red Star's Lost Unit count
 RO27:7B8D 01 08 0F         ld   bc,0F08
 RO27:7B90 16 03            ld   d,03
 RO27:7B92 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:7B95 01 09 05         ld   bc,0509
 RO27:7B98 21 7C 7C         ld   hl,7C7C        // "Gold"
 RO27:7B9B CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7B9E 21 34 C6         ld   hl,C634
 RO27:7BA1 01 09 0D         ld   bc,0D09
 RO27:7BA4 16 05            ld   d,05
 RO27:7BA6 CD A3 32         call 32A3           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL 3 byte reverse holds the number, BC is coordinates, D is the number of digits)
 RO27:7BA9 01 0A 05         ld   bc,050A
 RO27:7BAC 21 80 7C         ld   hl,7C80        // "Materials"
 RO27:7BAF CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7BB2 FA 3A C6         ld   a,(C63A)
 RO27:7BB5 6F               ld   l,a
 RO27:7BB6 FA 3B C6         ld   a,(C63B)
 RO27:7BB9 67               ld   h,a
 RO27:7BBA 01 0A 0D         ld   bc,0D0A
 RO27:7BBD 16 05            ld   d,05
 RO27:7BBF CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:7BC2 F0 83            ld   a,(ff00+83)
 RO27:7BC4 F5               push af
 RO27:7BC5 3E 00            ld   a,00
 RO27:7BC7 E0 83            ld   (ff00+83),a
 RO27:7BC9 E0 4F            ld   (ff00+4F),a
 RO27:7BCB 01 0B 02         ld   bc,020B
 RO27:7BCE 11 01 10         ld   de,1001
 RO27:7BD1 3E 24            ld   a,24           // Mini Separator
 RO27:7BD3 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:7BD7 3E 01            ld   a,01
 RO27:7BD9 E0 83            ld   (ff00+83),a
 RO27:7BDB E0 4F            ld   (ff00+4F),a
 RO27:7BDD 01 0B 02         ld   bc,020B
 RO27:7BE0 11 01 10         ld   de,1001
 RO27:7BE3 3E 08            ld   a,08
 RO27:7BE5 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO27:7BE9 F1               pop  af
 RO27:7BEA E0 83            ld   (ff00+83),a
 RO27:7BEC E0 4F            ld   (ff00+4F),a
 RO27:7BEE 3E 0B            ld   a,0B
 RO27:7BF0 01 0D 02         ld   bc,020D
 RO27:7BF3 11 02 02         ld   de,0202
 RO27:7BF6 26 1E            ld   h,1E           // Blue Moon Symbol
 RO27:7BF8 EF 15 FD 67                          // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO27:7BFC 01 0C 05         ld   bc,050C
 RO27:7BFF 21 6A 7C         ld   hl,7C6A        // "Built Unit"
 RO27:7C02 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7C05 FA B6 C8         ld   a,(C8B6)
 RO27:7C08 67               ld   h,a
 RO27:7C09 FA B5 C8         ld   a,(C8B5)
 RO27:7C0C 6F               ld   l,a            // HL holds White Moon's Built Unit count
 RO27:7C0D 01 0C 0F         ld   bc,0F0C
 RO27:7C10 16 03            ld   d,03
 RO27:7C12 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:7C15 01 0D 05         ld   bc,050D
 RO27:7C18 21 73 7C         ld   hl,7C73        // "Lost Unit"
 RO27:7C1B CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7C1E FA BA C8         ld   a,(C8BA)
 RO27:7C21 67               ld   h,a
 RO27:7C22 FA B9 C8         ld   a,(C8B9)
 RO27:7C25 6F               ld   l,a            // HL holds White Moon's Lost Unit count
 RO27:7C26 01 0D 0F         ld   bc,0F0D
 RO27:7C29 16 03            ld   d,03
 RO27:7C2B CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:7C2E 01 0E 05         ld   bc,050E
 RO27:7C31 21 7C 7C         ld   hl,7C7C        // "Gold"
 RO27:7C34 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7C37 21 37 C6         ld   hl,C637
 RO27:7C3A 01 0E 0D         ld   bc,0D0E
 RO27:7C3D 16 05            ld   d,05
 RO27:7C3F CD A3 32         call 32A3           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL 3 byte reverse holds the number, BC is coordinates, D is the number of digits)
 RO27:7C42 01 0F 05         ld   bc,050F
 RO27:7C45 21 80 7C         ld   hl,7C80        // "Materials"
 RO27:7C48 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7C4B FA 3C C6         ld   a,(C63C)
 RO27:7C4E 6F               ld   l,a
 RO27:7C4F FA 3D C6         ld   a,(C63D)
 RO27:7C52 67               ld   h,a
 RO27:7C53 01 0F 0D         ld   bc,0D0F
 RO27:7C56 16 05            ld   d,05
 RO27:7C58 CD 51 32         call 3251           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (HL is the number, BC is coordinates, D is the number of digits)
 RO27:7C5B CD 37 35         call 3537           // Establishes all unchecked text into appropriate VRAM bank; bit 7,($C00F) being inactive or LY => 142 stops after only one text portion and leaves it considered unchecked
 RO27:7C5E C9               ret                 // Establishes Results Screen graphics as a whole

 RO27:7C5F 04 05
 RO27:7C61 6B 62 6C AD 63 C0 2D DD 00
 
 RO27:7C6A 6E 62 6B 8D D5 C6 FF C4 00
 RO27:7C73 96 8D 82 72 D5 C6 FF C4 00
 RO27:7C7C 6C 67 8D 00
 RO27:7C80 6C 93 62 00

 RO27:7C84 F0 82            ld   a,(ff00+82)
 RO27:7C86 F5               push af
 RO27:7C87 3E 04            ld   a,04
 RO27:7C89 E0 82            ld   (ff00+82),a
 RO27:7C8B E0 70            ld   (ff00+70),a
 RO27:7C8D CD A8 7A         call 7AA8           // Establishes Results Screen graphics as a whole
 RO27:7C90 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:7C93 CD A2 05         call 05A2           // Button update, next frame
 RO27:7C96 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:7C99 3E 00            ld   a,00
 RO27:7C9B EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:7C9F F0 92            ld   a,(ff00+92)
 RO27:7CA1 CB 47            bit  0,a            // A
 RO27:7CA3 28 07            jr   z,7CAC
 RO27:7CA5 3E 02            ld   a,02
 RO27:7CA7 CD 44 38         call 3844
 RO27:7CAA 18 02            jr   7CAE
 RO27:7CAC 18 E5            jr   7C93           // Standby for A Button Press
 RO27:7CAE CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:7CB1 F1               pop  af
 RO27:7CB2 E0 82            ld   (ff00+82),a
 RO27:7CB4 E0 70            ld   (ff00+70),a
 RO27:7CB6 C9               ret  
 RO27:7CB7 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:7CBA CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:7CBD CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:7CC0 EF 10 A8 68                          // Sets up basic covered graphics values
 RO27:7CC4 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:7CC8 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:7CCB AF               xor  a
 RO27:7CCC E0 95            ld   (ff00+95),a
 RO27:7CCE E0 96            ld   (ff00+96),a
 RO27:7CD0 E0 97            ld   (ff00+97),a
 RO27:7CD2 E0 98            ld   (ff00+98),a
 RO27:7CD4 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:7CD7 3E 00            ld   a,00
 RO27:7CD9 E0 83            ld   (ff00+83),a
 RO27:7CDB E0 4F            ld   (ff00+4F),a
 RO27:7CDD 3E 00            ld   a,00
 RO27:7CDF EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO27:7CE3 01 04 01         ld   bc,0104
 RO27:7CE6 11 0A 12         ld   de,120A
 RO27:7CE9 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO27:7CED 21 35 7D         ld   hl,7D35        // "..is yielding. End the battle?"
 RO27:7CF0 01 07 04         ld   bc,0407
 RO27:7CF3 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO27:7CF6 FA 6A DC         ld   a,(DC6A)       // Yielding AI Army
 RO27:7CF9 FE 00            cp   a,00
 RO27:7CFB 28 04            jr   z,7D01
 RO27:7CFD FE 01            cp   a,01
 RO27:7CFF 28 05            jr   z,7D06
 RO27:7D01 21 19 7D         ld   hl,7D19        // "Red Star.."
 RO27:7D04 18 03            jr   7D09
 RO27:7D06 21 27 7D         ld   hl,7D27        // "White Moon.."
 RO27:7D09 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO27:7D0C 3E 01            ld   a,01
 RO27:7D0E EA 69 DC         ld   (DC69),a
 RO27:7D11 01 0B 07         ld   bc,070B
 RO27:7D14 EF 15 37 66                          // Sets up "OK/NO" with "OK" highlighted at BC
 RO27:7D18 C9               ret                 // AI Yield Request Prompt Text Setup

 RO27:7D19 04 06
 RO27:7D1B DA FF EC BD C0 2D 90 8D 8E 20 20 00

 RO27:7D27 04 06
 RO27:7D29 CE DC B2 C4 D1 2D DD 90 8D 8E 20 00

 RO27:7D35 6A 63 7C 68 6C 7F 6C 70 2E 20 20 20 01
 RO27:7D42 6E 8D 74 63 60 20 20 20 20 20 20 20 01
 RO27:7D4F 6C AD 63 88 AE 63 6C 7F 6D 66 3F 20 00

 RO27:7D5C FE 00            cp   a,00           // Check NO
 RO27:7D5E 28 3C            jr   z,7D9C
 RO27:7D60 FE 01            cp   a,01           // Check OK
 RO27:7D62 28 00            jr   z,7D64
 RO27:7D64 21 C2 7D         ld   hl,7DC2        // "..yielded. .. ..wins."
 RO27:7D67 01 07 04         ld   bc,0407
 RO27:7D6A CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO27:7D6D FA 6A DC         ld   a,(DC6A)       // Yielding AI Army
 RO27:7D70 FE 00            cp   a,00
 RO27:7D72 28 15            jr   z,7D89         // Branch for Red Star yielding
 RO27:7D74 18 00            jr   7D76
 RO27:7D76 01 06 04         ld   bc,0406
 RO27:7D79 21 2F 7E         ld   hl,7E2F        // "White Moon.."
 RO27:7D7C CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7D7F 01 08 04         ld   bc,0408
 RO27:7D82 21 53 7E         ld   hl,7E53        // "Red Star's"
 RO27:7D85 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7D88 C9               ret  
 RO27:7D89 01 06 04         ld   bc,0406
 RO27:7D8C 21 3B 7E         ld   hl,7E3B        // "Red Star.."
 RO27:7D8F CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7D92 01 08 04         ld   bc,0408
 RO27:7D95 21 47 7E         ld   hl,7E47        // "White Moon's"
 RO27:7D98 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7D9B C9               ret  
 RO27:7D9C 21 EF 7D         ld   hl,7DEF        // "..yield ignorend. Battle continues."
 RO27:7D9F 01 07 03         ld   bc,0307
 RO27:7DA2 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO27:7DA5 FA 6A DC         ld   a,(DC6A)       // Yielding AI Army
 RO27:7DA8 FE 00            cp   a,00
 RO27:7DAA 28 02            jr   z,7DAE
 RO27:7DAC 18 0A            jr   7DB8
 RO27:7DAE 01 06 03         ld   bc,0306
 RO27:7DB1 21 53 7E         ld   hl,7E53        // "Red Star's"
 RO27:7DB4 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7DB7 C9               ret  
 RO27:7DB8 01 06 03         ld   bc,0306
 RO27:7DBB 21 47 7E         ld   hl,7E47        // "White Moon's"
 RO27:7DBE CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO27:7DC1 C9               ret                 // AI Yield Response Text Setup

 RO27:7DC2 6A 63 7C 68 6C 7F 6C 70 2E 20 20 20 20 20 01
 RO27:7DD1 20 20 20 20 20 20 20 20 20 20 20 20 20 20 01
 RO27:7DE0 6C AE 63 88 76 75 88 7F 6D 2E 20 20 20 20 00

 RO27:7DEF 6A 63 7C 68 60 81 6C 6C 7F 6C 70 2E 20 20 20 01
 RO27:7DFF 6E 8D 74 63 60 97 AF 6A 63 6C 7F 6D 2E 20 20 01
 RO27:7E0F 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 01
 RO27:7E1F 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20 00

 RO27:7E2F CE DC B2 C4 D1 2D DD 90 8D 7A 20 00
 RO27:7E3B DA FF EC BD C0 2D 90 8D 7A 20 20 00
 RO27:7E47 CE DC B2 C4 D1 2D DD 90 8D 79 20 00
 RO27:7E53 DA FF EC BD C0 2D 90 8D 79 20 20 00

 RO27:7E5F 57               ld   d,a
 RO27:7E60 F0 82            ld   a,(ff00+82)
 RO27:7E62 F5               push af
 RO27:7E63 3E 04            ld   a,04
 RO27:7E65 E0 82            ld   (ff00+82),a
 RO27:7E67 E0 70            ld   (ff00+70),a
 RO27:7E69 7A               ld   a,d
 RO27:7E6A EA 6A DC         ld   (DC6A),a
 RO27:7E6D CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:7E70 CD B7 7C         call 7CB7           // AI Yield Request Prompt Text Setup
 RO27:7E73 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:7E76 CD A2 05         call 05A2           // Button update, next frame
 RO27:7E79 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:7E7C 3E 00            ld   a,00
 RO27:7E7E EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:7E82 F0 92            ld   a,(ff00+92)
 RO27:7E84 CB 47            bit  0,a            // A
 RO27:7E86 28 07            jr   z,7E8F
 RO27:7E88 3E 02            ld   a,02
 RO27:7E8A CD 44 38         call 3844
 RO27:7E8D 18 2F            jr   7EBE
 RO27:7E8F CB 67            bit  4,a            // Right
 RO27:7E91 28 12            jr   z,7EA5
 RO27:7E93 AF               xor  a
 RO27:7E94 EA 69 DC         ld   (DC69),a       // NO
 RO27:7E97 3E 01            ld   a,01
 RO27:7E99 CD 44 38         call 3844
 RO27:7E9C 01 0B 07         ld   bc,070B
 RO27:7E9F EF 15 64 66                          // Sets up "OK/NO" with "NO" highlighted at BC
 RO27:7EA3 18 17            jr   7EBC
 RO27:7EA5 CB 6F            bit  5,a            // Left
 RO27:7EA7 28 13            jr   z,7EBC
 RO27:7EA9 3E 01            ld   a,01
 RO27:7EAB EA 69 DC         ld   (DC69),a       // OK
 RO27:7EAE 3E 01            ld   a,01
 RO27:7EB0 CD 44 38         call 3844
 RO27:7EB3 01 0B 07         ld   bc,070B
 RO27:7EB6 EF 15 37 66                          // Sets up "OK/NO" with "OK" highlighted at BC
 RO27:7EBA 18 00            jr   7EBC
 RO27:7EBC 18 B8            jr   7E76           // Further standby until A Button press
 RO27:7EBE F0 83            ld   a,(ff00+83)
 RO27:7EC0 F5               push af
 RO27:7EC1 3E 00            ld   a,00
 RO27:7EC3 E0 83            ld   (ff00+83),a
 RO27:7EC5 E0 4F            ld   (ff00+4F),a
 RO27:7EC7 01 0B 07         ld   bc,070B
 RO27:7ECA 11 01 05         ld   de,0501
 RO27:7ECD AF               xor  a
 RO27:7ECE EF 15 D3 6A                          // Empties VRA0 map tiles in rectangle 7~11,11
 RO27:7ED2 3E 01            ld   a,01
 RO27:7ED4 E0 83            ld   (ff00+83),a
 RO27:7ED6 E0 4F            ld   (ff00+4F),a
 RO27:7ED8 01 0B 07         ld   bc,070B
 RO27:7EDB 11 01 05         ld   de,0501
 RO27:7EDE AF               xor  a
 RO27:7EDF EF 15 D3 6A                          // Empties VRA0 map tiles in rectangle 7~11,11
 RO27:7EE3 F1               pop  af
 RO27:7EE4 E0 83            ld   (ff00+83),a
 RO27:7EE6 E0 4F            ld   (ff00+4F),a
 RO27:7EE8 FA 69 DC         ld   a,(DC69)       // A = 1 for OK, 0 for NO, -1 for Cancel
 RO27:7EEB CD 5C 7D         call 7D5C           // AI Yield Response Text Setup
 RO27:7EEE CD A2 05         call 05A2           // Button update, next frame
 RO27:7EF1 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:7EF4 3E 00            ld   a,00
 RO27:7EF6 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:7EFA F0 92            ld   a,(ff00+92)
 RO27:7EFC CB 47            bit  0,a            // A
 RO27:7EFE 28 07            jr   z,7F07
 RO27:7F00 3E 02            ld   a,02
 RO27:7F02 CD 44 38         call 3844
 RO27:7F05 18 02            jr   7F09
 RO27:7F07 18 E5            jr   7EEE
 RO27:7F09 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:7F0C FA 69 DC         ld   a,(DC69)
 RO27:7F0F 57               ld   d,a
 RO27:7F10 F1               pop  af
 RO27:7F11 E0 82            ld   (ff00+82),a
 RO27:7F13 E0 70            ld   (ff00+70),a
 RO27:7F15 7A               ld   a,d
 RO27:7F16 C9               ret                 // AI Yield Request master control, ends with A = Choice (A is yielding AI side)
 RO27:7F17 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO27:7F1A CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO27:7F1D CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO27:7F20 EF 10 A8 68                          // Sets up basic covered graphics values
 RO27:7F24 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO27:7F28 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO27:7F2B AF               xor  a
 RO27:7F2C E0 95            ld   (ff00+95),a
 RO27:7F2E E0 96            ld   (ff00+96),a
 RO27:7F30 E0 97            ld   (ff00+97),a
 RO27:7F32 E0 98            ld   (ff00+98),a
 RO27:7F34 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO27:7F37 3E 00            ld   a,00
 RO27:7F39 E0 83            ld   (ff00+83),a
 RO27:7F3B E0 4F            ld   (ff00+4F),a
 RO27:7F3D 3E 00            ld   a,00
 RO27:7F3F EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO27:7F43 01 05 01         ld   bc,0105
 RO27:7F46 11 07 12         ld   de,1207
 RO27:7F49 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO27:7F4D 21 60 7F         ld   hl,7F60        // "Continue game?"
 RO27:7F50 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO27:7F53 3E 01            ld   a,01
 RO27:7F55 EA 6B DC         ld   (DC6B),a       // Default OK
 RO27:7F58 01 09 07         ld   bc,0709
 RO27:7F5B EF 15 37 66                          // Sets up "OK/NO" with "OK" highlighted at BC
 RO27:7F5F C9               ret  

 RO27:7F60 04 07
 RO27:7F62 E1 2D D1 60 72 9A 69 7F 6D 66 3F 00

 RO27:7F6E F0 82            ld   a,(ff00+82)
 RO27:7F70 F5               push af
 RO27:7F71 3E 04            ld   a,04
 RO27:7F73 E0 82            ld   (ff00+82),a
 RO27:7F75 E0 70            ld   (ff00+70),a
 RO27:7F77 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:7F7A CD 17 7F         call 7F17           // Continue Game Prompt Graphics Setup
 RO27:7F7D CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO27:7F80 CD A2 05         call 05A2           // Button update, next frame
 RO27:7F83 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO27:7F86 3E 00            ld   a,00
 RO27:7F88 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO27:7F8C F0 92            ld   a,(ff00+92)
 RO27:7F8E CB 47            bit  0,a            // A
 RO27:7F90 28 07            jr   z,7F99
 RO27:7F92 3E 02            ld   a,02
 RO27:7F94 CD 44 38         call 3844
 RO27:7F97 18 2F            jr   7FC8
 RO27:7F99 CB 67            bit  4,a            // Right
 RO27:7F9B 28 12            jr   z,7FAF
 RO27:7F9D AF               xor  a
 RO27:7F9E EA 6B DC         ld   (DC6B),a       // NO
 RO27:7FA1 3E 01            ld   a,01
 RO27:7FA3 CD 44 38         call 3844
 RO27:7FA6 01 09 07         ld   bc,0709
 RO27:7FA9 EF 15 64 66                          // Sets up "OK/NO" with "NO" highlighted at BC
 RO27:7FAD 18 17            jr   7FC6
 RO27:7FAF CB 6F            bit  5,a            // Left
 RO27:7FB1 28 13            jr   z,7FC6
 RO27:7FB3 3E 01            ld   a,01
 RO27:7FB5 EA 6B DC         ld   (DC6B),a       // OK
 RO27:7FB8 3E 01            ld   a,01
 RO27:7FBA CD 44 38         call 3844
 RO27:7FBD 01 09 07         ld   bc,0709
 RO27:7FC0 EF 15 37 66                          // Sets up "OK/NO" with "OK" highlighted at BC
 RO27:7FC4 18 00            jr   7FC6
 RO27:7FC6 18 B8            jr   7F80           // Further standby until A Button press
 RO27:7FC8 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO27:7FCB FA 6B DC         ld   a,(DC6B)
 RO27:7FCE 57               ld   d,a
 RO27:7FCF F1               pop  af
 RO27:7FD0 E0 82            ld   (ff00+82),a
 RO27:7FD2 E0 70            ld   (ff00+70),a
 RO27:7FD4 7A               ld   a,d
 RO27:7FD5 C9               ret                 // Continue Game Prompt Master Control, ending with A = Decision

 