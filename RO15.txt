 RO15:4000 AF               xor  a
 RO15:4001 EA 27 C6         ld   (C627),a
 RO15:4004 EA 25 C6         ld   (C625),a
 RO15:4007 C9               ret                 // Blanks Configuration menu flags
 RO15:4008 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO15:400B CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO15:400E CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO15:4011 EF 13 C4 59                          // Reads Configuration flags to A
 RO15:4015 EA 27 C6         ld   (C627),a
 RO15:4018 AF               xor  a
 RO15:4019 E0 95            ld   (ff00+95),a
 RO15:401B E0 96            ld   (ff00+96),a
 RO15:401D EF 10 A8 68                          // Sets up basic covered graphics values
 RO15:4021 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO15:4025 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO15:4028 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO15:402B 3E 00            ld   a,00
 RO15:402D E0 83            ld   (ff00+83),a
 RO15:402F E0 4F            ld   (ff00+4F),a
 RO15:4031 3E 00            ld   a,00
 RO15:4033 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO15:4037 F0 83            ld   a,(ff00+83)
 RO15:4039 F5               push af
 RO15:403A 3E 01            ld   a,01
 RO15:403C E0 83            ld   (ff00+83),a
 RO15:403E E0 4F            ld   (ff00+4F),a
 RO15:4040 11 03 45         ld   de,4503        // Configuration graphics basics
 RO15:4043 21 00 90         ld   hl,9000
 RO15:4046 01 90 03         ld   bc,0390
 RO15:4049 CD 50 3B         call 3B50           // VRA1:($9000~$938F) = ($4503~$4892)
 RO15:404C 11 28 59         ld   de,5928
 RO15:404F 21 90 93         ld   hl,9390
 RO15:4052 01 40 00         ld   bc,0040
 RO15:4055 EF 14 50 3B                          // VRA1:($9390 ~ $936F) = $14:($5928 ~ $5967) (graphics text "Decide")
 RO15:4059 F1               pop  af
 RO15:405A E0 83            ld   (ff00+83),a
 RO15:405C E0 4F            ld   (ff00+4F),a
 RO15:405E 3E 00            ld   a,00
 RO15:4060 06 08            ld   b,08
 RO15:4062 21 93 48         ld   hl,4893
 RO15:4065 CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($4893) to ($48D2)
 RO15:4068 CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO15:406B CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO15:406E 3E 0A            ld   a,0A
 RO15:4070 01 01 03         ld   bc,0301
 RO15:4073 11 02 0E         ld   de,0E02
 RO15:4076 26 01            ld   h,01
 RO15:4078 EF 15 FD 67                          // (VRA0:$9800 3~16,1~2) = 1~28, (VRA1:$9800 3~16,1~2) = 10 ("Configuration")
 RO15:407C 01 04 01         ld   bc,0104
 RO15:407F 11 0B 12         ld   de,120B
 RO15:4082 EF 22 47 62                          // Basic setup for table rectangle 1~18,4~14 including defaulted palette for interior's tiles
 RO15:4086 21 DD 43         ld   hl,43DD        // Action Animation
 RO15:4089 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:408C 21 F1 43         ld   hl,43F1        // Auto-Supply
 RO15:408F CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:4092 21 FA 43         ld   hl,43FA        // Dominant Win
 RO15:4095 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:4098 21 E7 43         ld   hl,43E7        // Battle Animation
 RO15:409B CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:409E 3E 00            ld   a,00
 RO15:40A0 E0 83            ld   (ff00+83),a
 RO15:40A2 E0 4F            ld   (ff00+4F),a
 RO15:40A4 3E 0A            ld   a,0A
 RO15:40A6 01 11 01         ld   bc,0111
 RO15:40A9 11 01 03         ld   de,0301
 RO15:40AC 26 21            ld   h,21
 RO15:40AE EF 15 FD 67                          // (VRA0:$9800 1~3,17) = 33~35, (VRA1:$9800 1~3,17) = 10 ("START")
 RO15:40B2 3E 08            ld   a,08
 RO15:40B4 01 11 04         ld   bc,0411
 RO15:40B7 11 01 04         ld   de,0401
 RO15:40BA 26 35            ld   h,35
 RO15:40BC EF 15 FD 67                          // (VRA0:$9800 4~7,17) = 53~56, (VRA1:$9800 4~7,17) = 8 ("Explanation")
 RO15:40C0 3E 0A            ld   a,0A
 RO15:40C2 01 11 09         ld   bc,0911
 RO15:40C5 11 01 01         ld   de,0101
 RO15:40C8 26 34            ld   h,34
 RO15:40CA EF 15 FD 67                          // (VRA0:$9800 9,17) = 52, (VRA1:$9800 9,17) = 10 ("A")
 RO15:40CE 3E 08            ld   a,08
 RO15:40D0 01 11 0A         ld   bc,0A11
 RO15:40D3 11 01 04         ld   de,0401
 RO15:40D6 26 39            ld   h,39
 RO15:40D8 EF 15 FD 67                          // (VRA0:$9800 10~13,17) = 57~60, (VRA1:$9800 10~13,17) = 8 ("Decide")
 RO15:40DC 3E 0A            ld   a,0A
 RO15:40DE 01 11 0F         ld   bc,0F11
 RO15:40E1 11 01 01         ld   de,0101
 RO15:40E4 26 1D            ld   h,1D
 RO15:40E6 EF 15 FD 67                          // (VRA0:$9800 15,17) = 29, (VRA1:$9800 15,17) = 10 ("B")
 RO15:40EA 3E 08            ld   a,08
 RO15:40EC 01 11 10         ld   bc,1011
 RO15:40EF 11 01 03         ld   de,0301
 RO15:40F2 26 1E            ld   h,1E
 RO15:40F4 EF 15 FD 67                          // (VRA0:$9800 16~18,17) = 30~32, (VRA1:$9800 16~18,17) = 8 ("Back")
 RO15:40F8 F0 83            ld   a,(ff00+83)
 RO15:40FA F5               push af
 RO15:40FB 3E 20            ld   a,20
 RO15:40FD 0E 00            ld   c,00
 RO15:40FF 06 15            ld   b,15
 RO15:4101 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO15:4104 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:4107 EA 26 C6         ld   (C626),a
 RO15:410A CD 16 41         call 4116           // Sets up location of pointing right bullet on Configuration screen
 RO15:410D F1               pop  af
 RO15:410E E0 83            ld   (ff00+83),a
 RO15:4110 E0 4F            ld   (ff00+4F),a
 RO15:4112 CD 34 42         call 4234           // Establishes all "ON/OFF" graphics display on Configuration
 RO15:4115 C9               ret                 // Establishes graphics of Configuration menu
 RO15:4116 FA 25 C6         ld   a,(C625)
 RO15:4119 06 10            ld   b,10
 RO15:411B CD 95 29         call 2995           // HL = A * B
 RO15:411E 7D               ld   a,l
 RO15:411F C6 44            add  a,44
 RO15:4121 4F               ld   c,a
 RO15:4122 06 1C            ld   b,1C           // 20,52+Choice*16
 RO15:4124 FA 26 C6         ld   a,(C626)
 RO15:4127 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:412A C9               ret                 // Sets up location of pointing right bullet on Configuration screen
 RO15:412B CD 08 40         call 4008           // Establishes graphics of Configuration menu
 RO15:412E 3E 02            ld   a,02
 RO15:4130 CD 16 38         call 3816           // Menu theme
 RO15:4133 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO15:4136 CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO15:4139 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:413C 3E 00            ld   a,00
 RO15:413E EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:4142 F0 92            ld   a,(ff00+92)
 RO15:4144 CB 77            bit  6,a            // Up
 RO15:4146 28 17            jr   z,415F
 RO15:4148 3E 01            ld   a,01
 RO15:414A CD 44 38         call 3844
 RO15:414D FA 25 C6         ld   a,(C625)
 RO15:4150 3D               dec  a
 RO15:4151 FE FF            cp   a,FF
 RO15:4153 20 02            jr   nz,4157
 RO15:4155 3E 03            ld   a,03
 RO15:4157 EA 25 C6         ld   (C625),a
 RO15:415A CD 16 41         call 4116           // Sets up location of pointing right bullet on Configuration screen
 RO15:415D 18 D7            jr   4136           // Further wait for button input after pressing Up
 RO15:415F CB 7F            bit  7,a            // Down
 RO15:4161 28 16            jr   z,4179
 RO15:4163 3E 01            ld   a,01
 RO15:4165 CD 44 38         call 3844
 RO15:4168 FA 25 C6         ld   a,(C625)
 RO15:416B 3C               inc  a
 RO15:416C FE 04            cp   a,04
 RO15:416E 20 01            jr   nz,4171
 RO15:4170 AF               xor  a
 RO15:4171 EA 25 C6         ld   (C625),a
 RO15:4174 CD 16 41         call 4116           // Sets up location of pointing right bullet on Configuration screen
 RO15:4177 18 BD            jr   4136           // Further wait for button input after pressing Down
 RO15:4179 CB 67            bit  4,a            // Left
 RO15:417B 28 08            jr   z,4185
 RO15:417D CD F6 41         call 41F6           // Attempts to Toggle Off Temporary Configuration Flag based on highlighted Configuration option
 RO15:4180 CD 34 42         call 4234           // Establishes all "ON/OFF" graphics display on Configuration
 RO15:4183 18 B1            jr   4136           // Further wait for button input after pressing Left
 RO15:4185 CB 6F            bit  5,a            // Right
 RO15:4187 28 08            jr   z,4191
 RO15:4189 CD BF 41         call 41BF           // Attempts to Toggle On Temporary Configuration Flag based on highlighted Configuration option
 RO15:418C CD 34 42         call 4234           // Establishes all "ON/OFF" graphics display on Configuration
 RO15:418F 18 A5            jr   4136           // Further wait for button input after pressing Right
 RO15:4191 CB 5F            bit  3,a            // Start
 RO15:4193 28 0A            jr   z,419F
 RO15:4195 3E 02            ld   a,02
 RO15:4197 CD 44 38         call 3844
 RO15:419A CD 11 43         call 4311           // Explanation on Configuration menu
 RO15:419D 18 97            jr   4136           // Further wait for button input after pressing Start
 RO15:419F CB 47            bit  0,a            // A
 RO15:41A1 28 0E            jr   z,41B1
 RO15:41A3 3E 02            ld   a,02
 RO15:41A5 CD 44 38         call 3844
 RO15:41A8 FA 27 C6         ld   a,(C627)       // Temporary Configuration flags
 RO15:41AB EF 13 C8 59                          // Writes Configuration flags from A
 RO15:41AF 18 0A            jr   41BB
 RO15:41B1 CB 4F            bit  1,a            // B
 RO15:41B3 CA 36 41         jp   z,4136         // Wait for button input if no buttons other than Select was pressed
 RO15:41B6 3E 0C            ld   a,0C
 RO15:41B8 CD 44 38         call 3844
 RO15:41BB CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:41BE C9               ret                 // Controls for Configuration menu
 RO15:41BF FA 25 C6         ld   a,(C625)
 RO15:41C2 FE 00            cp   a,00           // Action Animation
 RO15:41C4 28 0F            jr   z,41D5
 RO15:41C6 FE 01            cp   a,01           // Battle Animation
 RO15:41C8 28 08            jr   z,41D2
 RO15:41CA FE 02            cp   a,02           // Auto-Supply
 RO15:41CC 28 0B            jr   z,41D9
 RO15:41CE FE 03            cp   a,03           // Superiority
 RO15:41D0 28 0B            jr   z,41DD
 RO15:41D2 AF               xor  a              // Battle Animation
 RO15:41D3 18 0C            jr   41E1
 RO15:41D5 3E 02            ld   a,02           // Action Animation
 RO15:41D7 18 08            jr   41E1
 RO15:41D9 3E 03            ld   a,03           // Auto-Supply
 RO15:41DB 18 04            jr   41E1
 RO15:41DD 3E 05            ld   a,05           // Superiority
 RO15:41DF 18 00            jr   41E1
 RO15:41E1 F5               push af
 RO15:41E2 CD 2D 42         call 422D           // A holds isolated temporary Configuration flag determined by initial A
 RO15:41E5 28 02            jr   z,41E9         // Toggle On given Temporary Configuration Flag if not already On
 RO15:41E7 F1               pop  af
 RO15:41E8 C9               ret                 // Attempts to Toggle On Temporary Configuration Flag based on highlighted Configuration option
 RO15:41E9 3E 01            ld   a,01
 RO15:41EB CD 44 38         call 3844
 RO15:41EE F1               pop  af
 RO15:41EF 21 27 C6         ld   hl,C627        // Temporary Configuration flags
 RO15:41F2 CD D1 3A         call 3AD1           // (HL + A/8) = (HL + A/8) OR 2^A%8
 RO15:41F5 C9               ret  
 RO15:41F6 FA 25 C6         ld   a,(C625)
 RO15:41F9 FE 00            cp   a,00           // Action Animation
 RO15:41FB 28 0F            jr   z,420C
 RO15:41FD FE 01            cp   a,01           // Battle Animation
 RO15:41FF 28 08            jr   z,4209
 RO15:4201 FE 02            cp   a,02           // Auto-Supply
 RO15:4203 28 0B            jr   z,4210
 RO15:4205 FE 03            cp   a,03           // Superiority
 RO15:4207 28 0B            jr   z,4214
 RO15:4209 AF               xor  a              // Battle Animation
 RO15:420A 18 0C            jr   4218
 RO15:420C 3E 02            ld   a,02           // Action Animation
 RO15:420E 18 08            jr   4218
 RO15:4210 3E 03            ld   a,03           // Auto-Supply
 RO15:4212 18 04            jr   4218
 RO15:4214 3E 05            ld   a,05           // Superiority
 RO15:4216 18 00            jr   4218
 RO15:4218 F5               push af
 RO15:4219 CD 2D 42         call 422D           // A holds isolated temporary Configuration flag determined by initial A
 RO15:421C 20 02            jr   nz,4220        // Toggle Off given Temporary Configuration Flag if not already Off
 RO15:421E F1               pop  af
 RO15:421F C9               ret                 // Attempts to Toggle Off Temporary Configuration Flag based on highlighted Configuration option
 RO15:4220 3E 01            ld   a,01
 RO15:4222 CD 44 38         call 3844
 RO15:4225 F1               pop  af
 RO15:4226 21 27 C6         ld   hl,C627        // Temporary Configuration flags
 RO15:4229 CD DC 3A         call 3ADC           // (HL + A/8) = AND CPL 2^A%8,(HL + A/8)
 RO15:422C C9               ret                 // Toggle Off Temporary Configuration Flag determined by initial A
 RO15:422D 21 27 C6         ld   hl,C627        // Temporary Configuration flags
 RO15:4230 CD C7 3A         call 3AC7           // A = AND (HL + A/8), 2^A%8
 RO15:4233 C9               ret  
 RO15:4234 3E 00            ld   a,00
 RO15:4236 E0 83            ld   (ff00+83),a
 RO15:4238 E0 4F            ld   (ff00+4F),a
 RO15:423A 3E 08            ld   a,08
 RO15:423C 0E 06            ld   c,06
 RO15:423E CD ED 42         call 42ED           // Sets up separating Slash for "ON/OFF" portion of given choice on Configuration (A is Attributes flags, C is Y coordinates)
 RO15:4241 3E 02            ld   a,02           // Action Animation
 RO15:4243 CD 2D 42         call 422D           // A holds isolated temporary Configuration flag determined by initial A
 RO15:4246 28 10            jr   z,4258         // Jumps for Action Animation Off
 RO15:4248 3E 0F            ld   a,0F           // Black/White for chosen
 RO15:424A 0E 06            ld   c,06
 RO15:424C CD F9 42         call 42F9           // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:424F 3E 08            ld   a,08           // White/Blue for not chosen
 RO15:4251 0E 06            ld   c,06
 RO15:4253 CD 05 43         call 4305           // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:4256 18 0E            jr   4266           // Action Animation ON is done
 RO15:4258 3E 08            ld   a,08           // White/Blue for not chosen
 RO15:425A 0E 06            ld   c,06
 RO15:425C CD F9 42         call 42F9           // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:425F 3E 0F            ld   a,0F           // Black/White for chosen
 RO15:4261 0E 06            ld   c,06
 RO15:4263 CD 05 43         call 4305           // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:4266 3E 08            ld   a,08
 RO15:4268 0E 0A            ld   c,0A
 RO15:426A CD ED 42         call 42ED           // Sets up separating Slash for "ON/OFF" portion of given choice on Configuration (A is Attributes flags, C is Y coordinates)
 RO15:426D 3E 03            ld   a,03           // Auto-Supply
 RO15:426F CD 2D 42         call 422D           // A holds isolated temporary Configuration flag determined by initial A
 RO15:4272 28 10            jr   z,4284         // Jumps for Auto-Supply Off
 RO15:4274 3E 0F            ld   a,0F           // Black/White for chosen
 RO15:4276 0E 0A            ld   c,0A
 RO15:4278 CD F9 42         call 42F9           // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:427B 3E 08            ld   a,08           // White/Blue for not chosen
 RO15:427D 0E 0A            ld   c,0A
 RO15:427F CD 05 43         call 4305           // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:4282 18 10            jr   4294           // Auto-Supply ON is done
 RO15:4284 3E 08            ld   a,08           // White/Blue for not chosen
 RO15:4286 0E 0A            ld   c,0A
 RO15:4288 CD F9 42         call 42F9           // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:428B 3E 0F            ld   a,0F           // Black/White for chosen
 RO15:428D 0E 0A            ld   c,0A
 RO15:428F CD 05 43         call 4305           // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:4292 18 00            jr   4294           // Auto-Supply OFF is done
 RO15:4294 3E 08            ld   a,08
 RO15:4296 0E 0C            ld   c,0C
 RO15:4298 CD ED 42         call 42ED           // Sets up separating Slash for "ON/OFF" portion of given choice on Configuration (A is Attributes flags, C is Y coordinates)
 RO15:429B 3E 05            ld   a,05           // Superiority
 RO15:429D CD 2D 42         call 422D           // A holds isolated temporary Configuration flag determined by initial A
 RO15:42A0 28 10            jr   z,42B2         // Jumps for Superiority Off
 RO15:42A2 3E 0F            ld   a,0F           // Black/White for chosen
 RO15:42A4 0E 0C            ld   c,0C
 RO15:42A6 CD F9 42         call 42F9           // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:42A9 3E 08            ld   a,08           // White/Blue for not chosen
 RO15:42AB 0E 0C            ld   c,0C
 RO15:42AD CD 05 43         call 4305           // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:42B0 18 0E            jr   42C0           // Superiority ON is done
 RO15:42B2 3E 08            ld   a,08           // White/Blue for not chosen
 RO15:42B4 0E 0C            ld   c,0C
 RO15:42B6 CD F9 42         call 42F9           // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:42B9 3E 0F            ld   a,0F           // Black/White for chosen
 RO15:42BB 0E 0C            ld   c,0C
 RO15:42BD CD 05 43         call 4305           // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:42C0 3E 08            ld   a,08
 RO15:42C2 0E 08            ld   c,08
 RO15:42C4 CD ED 42         call 42ED           // Sets up separating Slash for "ON/OFF" portion of given choice on Configuration (A is Attributes flags, C is Y coordinates)
 RO15:42C7 3E 00            ld   a,00           // Battle Animation
 RO15:42C9 CD 2D 42         call 422D           // A holds isolated temporary Configuration flag determined by initial A
 RO15:42CC 28 10            jr   z,42DE         // Jumps for Battle Animation Off
 RO15:42CE 3E 0F            ld   a,0F           // Black/White for chosen
 RO15:42D0 0E 08            ld   c,08
 RO15:42D2 CD F9 42         call 42F9           // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:42D5 3E 08            ld   a,08           // White/Blue for not chosen
 RO15:42D7 0E 08            ld   c,08
 RO15:42D9 CD 05 43         call 4305           // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:42DC 18 0E            jr   42EC           // Battle Animation ON is done
 RO15:42DE 3E 08            ld   a,08           // White/Blue for not chosen
 RO15:42E0 0E 08            ld   c,08
 RO15:42E2 CD F9 42         call 42F9           // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:42E5 3E 0F            ld   a,0F           // Black/White for chosen
 RO15:42E7 0E 08            ld   c,08
 RO15:42E9 CD 05 43         call 4305           // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:42EC C9               ret                 // Establishes all "ON/OFF" graphics display on Configuration
 RO15:42ED 06 0E            ld   b,0E
 RO15:42EF 11 01 01         ld   de,0101
 RO15:42F2 26 28            ld   h,28
 RO15:42F4 EF 15 FD 67                          // (VRA0:$9800 14,C) = 40, (VRA1:$9800 14,C) = A
 RO15:42F8 C9               ret                 // Sets up separating Slash for "ON/OFF" portion of given choice on Configuration (A is Attributes flags, C is Y coordinates)
 RO15:42F9 06 0C            ld   b,0C
 RO15:42FB 11 01 02         ld   de,0201
 RO15:42FE 26 26            ld   h,26
 RO15:4300 EF 15 FD 67                          // (VRA0:$9800 12~13,C) = 38~39, (VRA1:$9800 12~13,C) = A
 RO15:4304 C9               ret                 // Sets up "ON" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:4305 06 0F            ld   b,0F
 RO15:4307 11 01 03         ld   de,0301
 RO15:430A 26 29            ld   h,29
 RO15:430C EF 15 FD 67                          // (VRA0:$9800 15~17,C) = 41~43, (VRA1:$9800 15~17,C) = A
 RO15:4310 C9               ret                 // Sets up "OFF" portion of given choice on Configuration (A is Attribute flags, C is Y coordinates)
 RO15:4311 FA 26 C6         ld   a,(C626)
 RO15:4314 CD 5F 2F         call 2F5F           // set 0,($D000 + A * 16) WRAM bank 4
 RO15:4317 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:431A 01 04 01         ld   bc,0104
 RO15:431D 11 0D 12         ld   de,120D
 RO15:4320 EF 10 FA 68                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics (BC is starting location, DE is size)
 RO15:4324 F0 83            ld   a,(ff00+83)
 RO15:4326 F5               push af
 RO15:4327 3E 01            ld   a,01
 RO15:4329 E0 83            ld   (ff00+83),a
 RO15:432B E0 4F            ld   (ff00+4F),a
 RO15:432D AF               xor  a
 RO15:432E 01 05 02         ld   bc,0205
 RO15:4331 11 0B 10         ld   de,100B
 RO15:4334 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 2~17,5~15
 RO15:4338 F1               pop  af
 RO15:4339 E0 83            ld   (ff00+83),a
 RO15:433B E0 4F            ld   (ff00+4F),a
 RO15:433D 3E 00            ld   a,00
 RO15:433F E0 83            ld   (ff00+83),a
 RO15:4341 E0 4F            ld   (ff00+4F),a
 RO15:4343 01 11 01         ld   bc,0111        // 1,17
 RO15:4346 CD D4 0E         call 0ED4           // HL = $9A21
 RO15:4349 01 0E 00         ld   bc,000E
 RO15:434C 3E F7            ld   a,F7
 RO15:434E CD 84 3B         call 3B84           // 1~14,17 = $F7 (Background tile)
 RO15:4351 3E 01            ld   a,01
 RO15:4353 E0 83            ld   (ff00+83),a
 RO15:4355 E0 4F            ld   (ff00+4F),a
 RO15:4357 01 11 01         ld   bc,0111        // 1,17
 RO15:435A CD D4 0E         call 0ED4           // HL = $9A21
 RO15:435D 01 0E 00         ld   bc,000E
 RO15:4360 3E 0C            ld   a,0C
 RO15:4362 CD 84 3B         call 3B84           // 1~14,17 = 12
 RO15:4365 CD C3 43         call 43C3           // Establishes Explanation text of highlighted choice on Configuration menu
 RO15:4368 CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO15:436B CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:436E 3E 00            ld   a,00
 RO15:4370 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:4374 F0 92            ld   a,(ff00+92)
 RO15:4376 CB 4F            bit  1,a            // B
 RO15:4378 28 EE            jr   z,4368
 RO15:437A EF 10 08 69                          // Restores last table of covered graphics
 RO15:437E 3E 00            ld   a,00
 RO15:4380 E0 83            ld   (ff00+83),a
 RO15:4382 E0 4F            ld   (ff00+4F),a
 RO15:4384 3E 0A            ld   a,0A
 RO15:4386 01 11 01         ld   bc,0111
 RO15:4389 11 01 03         ld   de,0301
 RO15:438C 26 21            ld   h,21
 RO15:438E EF 15 FD 67                          // (VRA0:$9800 1~3,17) = 33~35, (VRA1:$9800 1~3,17) = 10 ("START")
 RO15:4392 3E 08            ld   a,08
 RO15:4394 01 11 04         ld   bc,0411
 RO15:4397 11 01 04         ld   de,0401
 RO15:439A 26 35            ld   h,35
 RO15:439C EF 15 FD 67                          // (VRA0:$9800 4~7,17) = 53~56, (VRA1:$9800 4~7,17) = 8 ("Explanation")
 RO15:43A0 3E 0A            ld   a,0A
 RO15:43A2 01 11 09         ld   bc,0911
 RO15:43A5 11 01 01         ld   de,0101
 RO15:43A8 26 34            ld   h,34
 RO15:43AA EF 15 FD 67                          // (VRA0:$9800 9,17) = 52, (VRA1:$9800 9,17) = 10 ("A")
 RO15:43AE 3E 08            ld   a,08
 RO15:43B0 01 11 0A         ld   bc,0A11
 RO15:43B3 11 01 04         ld   de,0401
 RO15:43B6 26 39            ld   h,39
 RO15:43B8 EF 15 FD 67                          // (VRA0:$9800 10~13,17) = 57~60, (VRA1:$9800 10~13,17) = 8 ("Decide")
 RO15:43BC FA 26 C6         ld   a,(C626)
 RO15:43BF CD 45 2F         call 2F45           // res 0,($D000 + A * 16) WRAM bank 4
 RO15:43C2 C9               ret                 // Explanation on Configuration menu
 RO15:43C3 21 F9 44         ld   hl,44F9
 RO15:43C6 FA 25 C6         ld   a,(C625)
 RO15:43C9 87               add  a
 RO15:43CA 4F               ld   c,a
 RO15:43CB 06 00            ld   b,00
 RO15:43CD 09               add  hl,bc
 RO15:43CE 2A               ldi  a,(hl)
 RO15:43CF 5F               ld   e,a
 RO15:43D0 7E               ld   a,(hl)
 RO15:43D1 57               ld   d,a
 RO15:43D2 7A               ld   a,d
 RO15:43D3 67               ld   h,a
 RO15:43D4 7B               ld   a,e
 RO15:43D5 6F               ld   l,a
 RO15:43D6 01 06 03         ld   bc,0306
 RO15:43D9 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO15:43DC C9               ret                 // Establishes Explanation text of highlighted choice on Configuration menu

 RO15:43DD 03 06
 RO15:43DF 6A 63 9C 63 B1 C6 D2 00
 RO15:43E7 03 08
 RO15:43E9 6E 8D 74 63 B1 C6 D2 00
 RO15:43F1 03 0A
 RO15:43F3 96 8D 7E 67 AD 63 00
 RO15:43FA 03 0C
 RO15:43FC 85 63 6E 62 6C AE 63 88 00

 RO15:4405 6A 63 9C 63 B1 C6 D2 01
 RO15:440D 01
 RO15:440E 6E 8D 88 AE 63 10 69 8D 71 68 01
 RO15:4419 7E 67 AD 63 10 74 63 6B 62 75 9C 01
 RO15:4425 D5 C6 FF C4 79 B1 C6 D2 2D BC FE DD 60 01
 RO15:4433 80 89 6A 74 8E 9B 67 7F 6D 2E 00

 RO15:443E 96 8D 7E 67 AD 63 01
 RO15:4445 01
 RO15:4446 94 90 8D 79 6A 63 91 67 79 74 67 01
 RO15:4452 7E 67 AD 63 66 79 63 75 70 73 83 79 79 01
 RO15:4460 63 64 76 62 89 D5 C6 FF C4 76 01
 RO15:446B 94 9C 63 73 67 76 7E 67 AD 63 6C 7F 6D 2E 00

 RO15:447A 85 63 6E 62 6C AE 63 88 01
 RO15:4483 01
 RO15:4484 73 67 90 8D 8E 2C 74 73 83 7C 88 75 01
 RO15:4491 94 AE 63 67 AE 63 76 75 89 74 01
 RO15:449C 6A 63 7C 68 6C 73 67 7F 6D 2E 01
 RO15:44A7 6A 63 7C 68 60 80 74 82 89 66 01
 RO15:44B2 67 AE 7B 6D 89 66 64 87 A0 7F 6D 2E 00

 RO15:44BF 6E 8D 74 63 B1 C6 D2 01
 RO15:44C7 01
 RO15:44C8 6E 8D 74 63 B1 C6 D2 2D BC FE DD 60 01
 RO15:44D5 80 89 6A 74 8E 9B 67 7F 6D 2E 01
 RO15:44E0 4F 46 46 76 6D 89 74 94 AE 63 7E 63 98 69 01
 RO15:44EF 7B AE 63 94 6B 8A 7F 6D 2E 00

 RO15:44F9 05 44                                // Action Anime
 RO15:44FB BF 44                                // Battle Anime
 RO15:44FD 3E 44                                // Auto-Supply
 RO15:44FF 7A 44                                // Superiority
 RO15:4501 00 00

 RO15:4503 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

 RO15:4513 FF 00 FF 7F FF 7F FF 7F F8 7F F7 78 F7 79 F7 79
 RO15:4523 FF 00 FF FF FF FF FF FF 18 FF F7 18 F7 F9 F7 F9
 RO15:4533 FF 00 FF FF FF FF FF FF 18 FF EB 1C BA CD BB CD
 RO15:4543 FF 00 FF FF FF FF FF FF 32 FF F6 3B D6 3B F6 1B
 RO15:4553 FF 00 FF FF FF FF FF FF 02 FF FE 03 FE 3F C2 3F
 RO15:4563 FF 00 FF FF FF FF FF FF 30 FF EF 30 EF 33 EE 33
 RO15:4573 FF 00 FF FF FF FF FF FF 11 FF F7 19 F7 F9 17 F9
 RO15:4583 FF 00 FF FF FF FF FF FF C8 FF DB EC DB EC DB EC
 RO15:4593 FF 00 FF FF FF FF FF FF 0F FF F7 0F DF E7 1E E7
 RO15:45A3 FF 00 FF FF FF FF FF FF 8C FF 7D 8E B7 4F DF 67
 RO15:45B3 FF 00 FF FF FF FF FF FF 00 FF F9 06 6D 9E 6D 9E
 RO15:45C3 FF 00 FF FF FF FF FF FF 60 FF DF 60 DE 67 DE 67
 RO15:45D3 FF 00 FF FF FF FF FF FF 60 FF AF 70 EB 34 EF 34
 RO15:45E3 FF 00 FF FE FF FE FF FE CF FE DF EE 5F EE DF 6E
 RO15:45F3 F7 79 F7 79 F6 79 FB 7C FF 7F FF 7F FF 7F FF 00
 RO15:4603 F7 F9 F7 F9 16 F9 FB 1C FF FF FF FF FF FF FF 00
 RO15:4613 BB CD BB CD 3B CD FB 1D FF FF FF FF FF FF FF 00
 RO15:4623 66 9B F6 8B B6 CB FE C3 FF FF FF FF FF FF FF 00
 RO15:4633 FA 07 FE 3F FE 3F FE 3F FF FF FF FF FF FF FF 00
 RO15:4643 EE 33 EF 33 EC 33 F7 38 FF FF FF FF FF FF FF 00
 RO15:4653 F7 19 77 99 76 99 FB 1C FF FF FF FF FF FF FF 00
 RO15:4663 DB EC DB EC 1B EC FB 1C FF FF FF FF FF FF FF 00
 RO15:4673 FF 06 B5 CE FE C5 DB E5 FF FF FF FF FF FF FF 00
 RO15:4683 1B E7 FF 03 FD F3 F7 F9 FF FF FF FF FF FF FF 00
 RO15:4693 6D 9E 6D 9E 6D 9E 6D 9E FF FF FF FF FF FF FF 00
 RO15:46A3 DE 67 DE 67 D8 67 EF 70 FF FF FF FF FF FF FF 00
 RO15:46B3 ED 36 EF 36 EE 37 EF 77 FF FF FF FF FF FF FF 00
 RO15:46C3 9F 6E DF 2E DF 2E FF 0E FF FE FF FE FF FE FF 00

 RO15:46D3 81 FF 00 C7 00 DB 00 C7 00 DB 00 DB 00 C7 81 FF
 RO15:46E3 00 00 00 20 00 FC 00 20 00 F8 00 42 00 42 00 3C
 RO15:46F3 00 0A 00 40 00 4E 00 30 00 40 00 80 00 80 00 7E
 RO15:4703 00 00 00 7C 00 08 00 3C 00 C2 00 32 00 4A 00 3C
 RO15:4713 80 FF 00 88 00 BD 00 8D 00 ED 00 ED 00 8D 80 FF
 RO15:4723 00 FF 00 CC 00 B5 00 B5 00 84 00 B5 00 B5 00 FF
 RO15:4733 01 FF 00 63 00 B7 00 B7 00 77 00 B7 00 B7 01 FF
 RO15:4743 00 00 00 20 00 F8 00 10 00 7C 00 08 00 80 00 78
 RO15:4753 00 00 00 08 00 10 00 20 00 40 00 20 00 10 00 08
 RO15:4763 00 FF 7E FF 66 FF 66 FF 66 FF 66 FF 7E FF 00 FF
 RO15:4773 00 FF 62 FF 72 FF 7A FF 5E FF 4E FF 46 FF 00 FF
 RO15:4783 00 FF 0C F3 0C F3 18 E7 18 E7 30 CF 30 CF 00 FF
 RO15:4793 00 FF 3F FF 33 FF 33 FF 33 FF 33 FF 3F FF 00 FF
 RO15:47A3 00 FF 3E FF 30 FF 3E FF 30 FF 30 FF 30 FF 00 FF
 RO15:47B3 00 FF 7C FF 60 FF 7C FF 60 FF 60 FF 60 FF 00 FF
 RO15:47C3 00 FF 1F E0 18 E7 1F E0 18 E7 18 E7 18 E7 00 FF
 RO15:47D3 00 FF 8C 73 1C E3 96 69 36 C9 3F C0 63 9C 00 FF
 RO15:47E3 00 FF 7E 81 60 9F 7E 81 7E 81 06 F9 7E 81 00 FF
 RO15:47F3 00 FF FC 03 30 CF 30 CF 30 CF 30 CF 30 CF 00 FF
 RO15:4803 00 FF 3F C0 30 CF 3F C0 3F C0 03 FC 3F C0 00 FF
 RO15:4813 00 FF 60 9F 60 9F 60 9F 60 9F 60 9F 7E 81 00 FF
 RO15:4823 00 FF FD 02 CD 32 CD 32 CC 33 CC 33 FC 03 00 FF
 RO15:4833 00 FF B6 49 B6 49 FC 03 FC 03 D8 27 D8 27 00 FF
 RO15:4843 81 FF 00 E7 00 DB 00 DB 00 C3 00 DB 00 DB 81 FF
 RO15:4853 00 00 00 44 00 44 00 FE 00 44 00 4C 00 40 00 3E
 RO15:4863 00 00 00 00 00 7C 00 82 00 02 00 02 00 04 00 38
 RO15:4873 00 00 00 08 00 BC 00 4A 00 D2 00 B2 00 A2 00 44
 RO15:4883 00 00 00 00 00 84 00 82 00 82 00 82 00 A2 00 40

 RO15:4893 00 00 00 69 FF 7F 40 72
 RO15:489B FF 7F B5 56 6B 2D 00 00
 RO15:48A3 FF 7F 6C 03 08 02 00 00
 RO15:48AB 00 69 9F 00 FF 7F 00 00
 RO15:48B3 10 42 6B 2D C6 18 00 00
 RO15:48BB 9F 53 DF 02 74 01 00 00
 RO15:48C3 F0 63 C0 4A 60 25 00 00
 RO15:48CB 1F 7C 1F 7C 00 00 FF 7F

 RO15:48D3 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO15:48D6 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO15:48D9 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO15:48DC AF               xor  a
 RO15:48DD E0 95            ld   (ff00+95),a
 RO15:48DF E0 96            ld   (ff00+96),a
 RO15:48E1 EF 10 A8 68                          // Sets up basic covered graphics values
 RO15:48E5 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO15:48E9 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO15:48EC CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO15:48EF 3E 00            ld   a,00
 RO15:48F1 E0 83            ld   (ff00+83),a
 RO15:48F3 E0 4F            ld   (ff00+4F),a
 RO15:48F5 3E 00            ld   a,00
 RO15:48F7 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO15:48FB F0 83            ld   a,(ff00+83)
 RO15:48FD F5               push af
 RO15:48FE 3E 01            ld   a,01
 RO15:4900 E0 83            ld   (ff00+83),a
 RO15:4902 E0 4F            ld   (ff00+4F),a
 RO15:4904 11 6B 4A         ld   de,4A6B
 RO15:4907 21 00 90         ld   hl,9000
 RO15:490A 01 00 08         ld   bc,0800
 RO15:490D CD 50 3B         call 3B50           // VRA1:($9000~$97FF) = ($4A6B~$526A)
 RO15:4910 11 6B 52         ld   de,526B
 RO15:4913 21 00 88         ld   hl,8800
 RO15:4916 01 10 02         ld   bc,0210
 RO15:4919 CD 50 3B         call 3B50           // VRA1:($8800~$8A0F) = ($526B~$547A)
 RO15:491C F1               pop  af
 RO15:491D E0 83            ld   (ff00+83),a
 RO15:491F E0 4F            ld   (ff00+4F),a
 RO15:4921 3E 00            ld   a,00
 RO15:4923 06 08            ld   b,08
 RO15:4925 21 7B 54         ld   hl,547B
 RO15:4928 CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($547B) to ($54BA)
 RO15:492B CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO15:492E CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO15:4931 3E 0A            ld   a,0A
 RO15:4933 01 03 05         ld   bc,0503
 RO15:4936 11 02 0A         ld   de,0A02
 RO15:4939 26 49            ld   h,49           // "BEGINNER"
 RO15:493B EF 15 FD 67                          // (VRA0:$9800 5~14,3~4) = 73~92, (VRA1:$9800 5~14,3~4) = 10
 RO15:493F 3E 0A            ld   a,0A
 RO15:4941 01 05 05         ld   bc,0505
 RO15:4944 11 02 0A         ld   de,0A02
 RO15:4947 26 5D            ld   h,5D           // "CAMPAIGN"
 RO15:4949 EF 15 FD 67                          // (VRA0:$9800 5~14,5~6) = 93~112, (VRA1:$9800 5~14,5~6) = 10
 RO15:494D 3E 0A            ld   a,0A
 RO15:494F 01 07 05         ld   bc,0507
 RO15:4952 11 02 0A         ld   de,0A02
 RO15:4955 26 71            ld   h,71           // "STANDARD"
 RO15:4957 EF 15 FD 67                          // (VRA0:$9800 5~14,7~8) = 113~132, (VRA1:$9800 5~14,7~8) = 10
 RO15:495B 3E 0A            ld   a,0A
 RO15:495D 01 09 03         ld   bc,0309
 RO15:4960 11 02 0E         ld   de,0E02
 RO15:4963 26 85            ld   h,85           // "CONFIGURATION"
 RO15:4965 EF 15 FD 67                          // (VRA0:$9800 3~16,9~10) = 133~160, (VRA1:$9800 3~16,9~10) = 10
 RO15:4969 01 0C 01         ld   bc,010C
 RO15:496C 11 05 12         ld   de,1205        // 1~18,12~16
 RO15:496F EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO15:4973 F0 83            ld   a,(ff00+83)
 RO15:4975 F5               push af
 RO15:4976 3E 20            ld   a,20
 RO15:4978 0E 00            ld   c,00
 RO15:497A 06 15            ld   b,15
 RO15:497C 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO15:497F CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:4982 EA 2C CC         ld   (CC2C),a
 RO15:4985 3E 20            ld   a,20
 RO15:4987 0E 00            ld   c,00
 RO15:4989 06 15            ld   b,15
 RO15:498B 11 7C 6F         ld   de,6F7C        // Pointing Left Bullet
 RO15:498E CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:4991 EA 2D CC         ld   (CC2D),a
 RO15:4994 CD A0 49         call 49A0
 RO15:4997 F1               pop  af
 RO15:4998 E0 83            ld   (ff00+83),a
 RO15:499A E0 4F            ld   (ff00+4F),a
 RO15:499C CD E3 49         call 49E3
 RO15:499F C9               ret  
 RO15:49A0 FA 2E CC         ld   a,(CC2E)
 RO15:49A3 06 10            ld   b,10
 RO15:49A5 CD 95 29         call 2995           // HL = A * B
 RO15:49A8 7D               ld   a,l
 RO15:49A9 C6 30            add  a,30
 RO15:49AB 4F               ld   c,a
 RO15:49AC FA 2E CC         ld   a,(CC2E)
 RO15:49AF FE 03            cp   a,03
 RO15:49B1 20 04            jr   nz,49B7
 RO15:49B3 06 20            ld   b,20
 RO15:49B5 18 02            jr   49B9
 RO15:49B7 06 30            ld   b,30
 RO15:49B9 FA 2C CC         ld   a,(CC2C)
 RO15:49BC CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:49BF FA 2E CC         ld   a,(CC2E)
 RO15:49C2 06 10            ld   b,10
 RO15:49C4 CD 95 29         call 2995           // HL = A * B
 RO15:49C7 7D               ld   a,l
 RO15:49C8 C6 30            add  a,30
 RO15:49CA 4F               ld   c,a
 RO15:49CB FA 2E CC         ld   a,(CC2E)
 RO15:49CE FE 03            cp   a,03
 RO15:49D0 20 04            jr   nz,49D6
 RO15:49D2 06 90            ld   b,90
 RO15:49D4 18 02            jr   49D8
 RO15:49D6 06 80            ld   b,80
 RO15:49D8 FA 2D CC         ld   a,(CC2D)
 RO15:49DB CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:49DE C9               ret  
 RO15:49DF CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO15:49E2 C9               ret  
 RO15:49E3 F0 83            ld   a,(ff00+83)
 RO15:49E5 F5               push af
 RO15:49E6 3E 00            ld   a,00
 RO15:49E8 E0 83            ld   (ff00+83),a
 RO15:49EA E0 4F            ld   (ff00+4F),a
 RO15:49EC AF               xor  a
 RO15:49ED 01 0D 02         ld   bc,020D
 RO15:49F0 11 03 10         ld   de,1003
 RO15:49F3 EF 15 D3 6A                          // Empties VRA0 Bank map tiles in rectangle 2~17,13~15
 RO15:49F7 3E 01            ld   a,01
 RO15:49F9 E0 83            ld   (ff00+83),a
 RO15:49FB E0 4F            ld   (ff00+4F),a
 RO15:49FD AF               xor  a
 RO15:49FE 01 0D 02         ld   bc,020D
 RO15:4A01 11 03 10         ld   de,1003
 RO15:4A04 EF 15 D3 6A                          // Empties VRA1 Bank map tiles in rectangle 2~17,13~15
 RO15:4A08 F1               pop  af
 RO15:4A09 E0 83            ld   (ff00+83),a
 RO15:4A0B E0 4F            ld   (ff00+4F),a
 RO15:4A0D F0 83            ld   a,(ff00+83)
 RO15:4A0F F5               push af
 RO15:4A10 3E 00            ld   a,00
 RO15:4A12 E0 83            ld   (ff00+83),a
 RO15:4A14 E0 4F            ld   (ff00+4F),a
 RO15:4A16 01 0D 02         ld   bc,020D
 RO15:4A19 CD D4 0E         call 0ED4           // HL = $99A2
 RO15:4A1C E5               push hl
 RO15:4A1D FA 2E CC         ld   a,(CC2E)
 RO15:4A20 06 0C            ld   b,0C
 RO15:4A22 CD 95 29         call 2995           // HL = A * B
 RO15:4A25 7C               ld   a,h
 RO15:4A26 47               ld   b,a
 RO15:4A27 7D               ld   a,l
 RO15:4A28 4F               ld   c,a
 RO15:4A29 21 3B 4A         ld   hl,4A3B
 RO15:4A2C 09               add  hl,bc
 RO15:4A2D 7C               ld   a,h
 RO15:4A2E 57               ld   d,a
 RO15:4A2F 7D               ld   a,l
 RO15:4A30 5F               ld   e,a
 RO15:4A31 E1               pop  hl
 RO15:4A32 CD 63 0F         call 0F63           // VRA0($99A2) holds text starting at (DE)
 RO15:4A35 F1               pop  af
 RO15:4A36 E0 83            ld   (ff00+83),a
 RO15:4A38 E0 4F            ld   (ff00+4F),a
 RO15:4A3A C9               ret  

 RO15:4A3B EE DF C5 2D D3 2D EC 20 20 20 20 00
 RO15:4A47 B7 FC DD F5 2D DD D3 2D EC 20 20 00
 RO15:4A53 BD C0 DD E8 2D EC D3 2D EC 20 20 00
 RO15:4A5F BA DD CC F8 E0 DA 2D BC FE DD 20 00

 RO15:4A6B 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

 RO15:4A7B FF 00 FF 7F FF 7F FB 7C FF 78 FF 78 FF 78 FF 78
 RO15:4A8B FF 00 FF FF FF FF FD 03 C1 3F FF 7F 81 7F FF 01
 RO15:4A9B FF 00 FF FF FF FF EF F0 FF E0 DF E0 D7 E8 BF C8
 RO15:4AAB FF 00 FF FF FF FF EF F0 7F F0 7F F0 FF 70 BF 70
 RO15:4ABB FF 00 FF FF FF FF EF 70 EF 70 BF 60 DF 20 FF 00
 RO15:4ACB FF 00 FF FF FF FF DF 60 5E E1 5D E3 5E E1 5F E0
 RO15:4ADB FF 00 FF FF FF FF FE 1F 2F DF FF FF 1F FF DF 3F
 RO15:4AEB FF 00 FF FF FF FF FF 00 F7 08 FF 0C F3 0C FF 00
 RO15:4AFB FF 00 FF FF FF FF AF 70 FE 21 DD 23 DD 23 9D 63
 RO15:4B0B FF 00 FF FF FF FF F3 0C 7F 84 B9 C6 BA C7 BB C7
 RO15:4B1B FF 00 FF FF FF FF DB 3C FE 19 E7 19 FD 03 FF 03
 RO15:4B2B FF 00 FF FF FF FF EF F0 EF F0 FF F0 F7 F8 F7 F8
 RO15:4B3B FF 00 FF FF FF FF FD C3 BD C3 BD C3 7E 81 7E 81
 RO15:4B4B FF 00 FF FF FF FF 7F 9E 5D BE FF 3C FB 3C BA 7D
 RO15:4B5B FF 00 FF FF FF FF EF 1E FE 0F F6 0F F6 0F 7E 87
 RO15:4B6B FF 00 FF FF FF FF FF 00 F7 08 EB 1C E3 1C FF 00
 RO15:4B7B FF 00 FF FF FF FF 6F F0 9E 61 9D 63 9F 60 9F 60
 RO15:4B8B FF 00 FF FE FF FE EF 1E 2F DE FF FE EF 1E EF 1E
 RO15:4B9B FF 78 FF 78 FF 78 FF 78 FC 7F FF 7F FF 7F F0 7F
 RO15:4BAB 9F 61 FF 61 9F 61 FE 01 00 FF FF FF FF FF 00 FF
 RO15:4BBB B7 C8 FF 80 5D BE DD 3E 3E FF FF FF FF FF 80 FF
 RO15:4BCB FD 32 DD 32 DF 32 EE 13 03 FF FF FF FF FF 04 FF
 RO15:4BDB F7 08 E7 18 E7 18 F7 18 10 FF FF FF FF FF 07 FF
 RO15:4BEB 5E E1 5D E3 5E E1 5F E0 40 FF FF FF FF FF 80 FF
 RO15:4BFB 1F FF FF FF 0F FF EF 1F 1E FF FF FF FF FF C0 FF
 RO15:4C0B F3 0C FF 0C F3 0C FF 00 00 FF FF FF FF FF 03 FF
 RO15:4C1B DD 23 DD 23 DE 21 FF 20 70 FF FF FF FF FF C0 FF
 RO15:4C2B BB C7 BB C7 7B 87 FF 07 0F FF FF FF FF FF 07 FF
 RO15:4C3B 7B 87 FF 87 FF 87 FF 87 03 FF FF FF FF FF 00 FF
 RO15:4C4B FF F8 FF F8 FB FC FB FC FC FF FF FF FF FF 0F FF
 RO15:4C5B EF 10 CF 30 DF 30 FF 30 30 FF FF FF FF FF F0 FF
 RO15:4C6B B7 78 F7 78 FF 73 6B F7 63 FF FF FF FF FF 3E FF
 RO15:4C7B FA 07 FE 03 FE C3 DC E3 C0 FF FF FF FF FF 00 FF
 RO15:4C8B EF 10 E7 18 EF 18 EB 1C 0C FF FF FF FF FF 0C FF
 RO15:4C9B 5F E0 61 FE C0 7F 9F 60 20 FF FF FF FF FF 07 FF
 RO15:4CAB EF 1E EF 1E EF 1E EF 1E 1F FE FF FE FF FE 87 FE
 RO15:4CBB EF 70 E9 76 FE 7F FE 7F FE 7F FE 7F FE 7F FE 7F
 RO15:4CCB FF 00 F9 06 F7 0F F7 0F F7 0F F7 0F F7 0F F7 0F
 RO15:4CDB 3F C0 3E C1 BF C1 BF C1 BE C1 BF C0 BE C1 BF C1
 RO15:4CEB F5 0E 0D F6 FD FE FD FE 05 FE F5 0E 15 EE FD FE
 RO15:4CFB FB 07 FB 07 FF 03 FD 03 FC 03 BE 41 FF 40 FF 40
 RO15:4D0B FF 80 7E 81 7E 81 FE 01 FE 01 DE 21 9E 61 9E 61
 RO15:4D1B FF C0 DF E0 DE E1 DE E1 DE E1 DE E1 DF E0 DF E0
 RO15:4D2B FE 01 3E C1 DE E1 DE E1 DE E1 3E C1 FE 01 01 FF
 RO15:4D3B BF C0 7E 81 7F 83 7B 87 7B 87 7B 87 7B 87 7B 87
 RO15:4D4B FF 03 7D 83 BD C3 BD C3 BD C3 BD C3 BD C3 BD C3
 RO15:4D5B 7F 80 7C 83 7B 87 7B 87 7C 83 7F 80 7F 80 7B 86
 RO15:4D6B FB 07 FF 03 7F 83 7F 83 7F 83 FF 03 FB 07 F7 0F
 RO15:4D7B F7 F8 FF F0 EF F0 FF E0 DB E4 FD C6 B1 CE FF 80
 RO15:4D8B DF 3F DF 3F FF 1F EF 1F FF 0F F7 0F F7 0F FF 07
 RO15:4D9B FF 00 FC 03 FB 07 FB 07 F8 07 FF 00 FF 00 F9 06
 RO15:4DAB FD 06 FA 07 7B 87 7B 87 FB 07 FB 07 F7 0F F7 0F
 RO15:4DBB FF 07 FB 07 FF 03 7E 81 FF 80 BF C0 DF E0 FF E0
 RO15:4DCB B7 CE FF 8E 6F 9E DF 3E FF 3E BF 7E FF 7E 7F FE
 RO15:4DDB FE 7F FE 7F FE 7F FF 7E FE 7F FF 7F FF 7F FF 00
 RO15:4DEB F7 0F F7 0F F7 0F F7 0F 07 FF FF FF FF FF FF 00
 RO15:4DFB BF C1 BF C1 BF C0 BF C0 C0 FF FF FF FF FF FF 00
 RO15:4E0B FD FE F5 FE FD 06 FD 06 0C FF FF FF FF FF FF 00
 RO15:4E1B DF 60 FF 60 FF 60 AF 70 71 FF FF FF FF FF FF 00
 RO15:4E2B DE 61 5E E1 5E E1 DF E0 C0 FF FF FF FF FF FF 00
 RO15:4E3B DE E1 DE E1 DE E1 FE C1 C0 FF FF FF FF FF FF 00
 RO15:4E4B FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:4E5B 7B 87 7F 83 FF 80 BF C0 E0 FF FF FF FF FF FF 00
 RO15:4E6B BD C3 BD C3 FD 03 FB 07 0F FF FF FF FF FF FF 00
 RO15:4E7B 7A 87 7B 87 7B 87 7F 83 03 FF FF FF FF FF FF 00
 RO15:4E8B FF 07 FB 07 7E 83 7D 82 80 FF FF FF FF FF FF 00
 RO15:4E9B 7F 80 FF 1F DF 3F DF 3F 3F FF FF FF FF FF FF 00
 RO15:4EAB FB 07 FF 03 7D 83 7E 81 81 FF FF FF FF FF FF 00
 RO15:4EBB FB 06 FA 07 FA 07 FB 07 07 FF FF FF FF FF FF 00
 RO15:4ECB F7 0F FF 07 FB 07 FF 03 83 FF FF FF FF FF FF 00
 RO15:4EDB FF E0 FF E0 FF E0 DF E0 E0 FF FF FF FF FF FF 00
 RO15:4EEB 7F FE 7F FE 7F FE 7F FE FF FE FF FE FF FE FF 00

 RO15:4EFB FF 00 FF 7F FF 7F FF 7F FE 7F FE 7F FE 7F FE 7F
 RO15:4F0B FF 00 FF FF FF FF FF FF 03 FF FF 01 F7 39 C7 39
 RO15:4F1B FF 00 FF FF FF FF FF FF 01 FF 7F 81 7F 9F 61 9F
 RO15:4F2B FF 00 FF FF FF FF FF FF 80 FF 7F 80 7F 9F 70 9F
 RO15:4F3B FF 00 FF FF FF FF FF FF 88 FF BB CC BA CD BB CD
 RO15:4F4B FF 00 FF FF FF FF FF FF 32 FF F6 3B D6 3B F6 1B
 RO15:4F5B FF 00 FF FF FF FF FF FF 0C FF FD 0E B5 4E FD 46
 RO15:4F6B FF 00 FF FF FF FF FF FF 80 FF BF C0 BF CF B0 CF
 RO15:4F7B FF 00 FF FF FF FF FF FF 80 FF BF C0 BD CE B1 CE
 RO15:4F8B FF 00 FF FE FF FE FF FE FF FE 7F FE FF 7E FF 7E
 RO15:4F9B FE 7F FE 7F FE 7F FE 7F FF 7F FF 7F FF 7F FF 00
 RO15:4FAB FF 03 F7 39 C7 39 FF 03 FF FF FF FF FF FF FF 00
 RO15:4FBB 7D 83 7F 9F 61 9F 7F 81 FF FF FF FF FF FF FF 00
 RO15:4FCB 77 98 7B 9C 63 9C BF C0 FF FF FF FF FF FF FF 00
 RO15:4FDB BB CD BB CD BB CD BB CD FF FF FF FF FF FF FF 00
 RO15:4FEB 66 9B F6 8B B6 CB FE C3 FF FF FF FF FF FF FF 00
 RO15:4FFB D9 66 FD 62 ED 72 FF 70 FF FF FF FF FF FF FF 00
 RO15:500B BE C1 BF CF B0 CF BF C0 FF FF FF FF FF FF FF 00
 RO15:501B BF C0 BB CC BF CC BD CE FF FF FF FF FF FF FF 00
 RO15:502B FF 7E 7F FE FF 7E BF 7E FF FE FF FE FF FE FF 00

 RO15:503B FF 00 FF 7F FF 7F FF 7F FE 7F FD 7E FD 7E FD 7E
 RO15:504B FF 00 FF FF FF FF FF FF 07 FF FF 07 FF 7F FE 7F
 RO15:505B FF 00 FF FF FF FF FF FF 8E FF 7E 8F B6 4F DE 67
 RO15:506B FF 00 FF FF FF FF FF FF 1C FF FF 1C EB 1C FF 08
 RO15:507B FF 00 FF FF FF FF FF FF 40 FF DF 60 DE 67 D8 67
 RO15:508B FF 00 FF FF FF FF FF FF 78 FF B7 78 FB 34 ED 36
 RO15:509B FF 00 FF FF FF FF FF FF F1 FF F7 F9 77 F9 F7 79
 RO15:50AB FF 00 FF FF FF FF FF FF 80 FF 7F 80 7F 9F 70 9F
 RO15:50BB FF 00 FF FF FF FF FF FF 83 FF BF C3 AD D3 BF D1
 RO15:50CB FF 00 FF FE FF FE FF FE 3F FE 7F BE 7F BE 7F BE
 RO15:50DB FD 7E FD 7E FD 7E FE 7F FF 7F FF 7F FF 7F FF 00
 RO15:50EB FF 7E FD 7E 86 7D FB 05 FF FF FF FF FF FF FF 00
 RO15:50FB 1A E7 FE 03 FC F3 F6 F9 FF FF FF FF FF FF FF 00
 RO15:510B B5 4A FD 42 D9 66 FD 66 FF FF FF FF FF FF FF 00
 RO15:511B DF 60 DF 67 DF 67 DF 67 FF FF FF FF FF FF FF 00
 RO15:512B F1 6E DF E0 EF DF BF DF FF FF FF FF FF FF FF 00
 RO15:513B B7 79 F7 39 D7 39 77 99 FF FF FF FF FF FF FF 00
 RO15:514B 77 98 7B 9C 63 9C BF C0 FF FF FF FF FF FF FF 00
 RO15:515B B6 D9 BF D8 BB DC BF DC FF FF FF FF FF FF FF 00
 RO15:516B 7F BE 7F BE 7F BE FF 3E FF FE FF FE FF FE FF 00

 RO15:517B FF 00 FF 7F FF 7F FF 7F F8 7F F7 78 F7 79 F6 79
 RO15:518B FF 00 FF FF FF FF FF FF 00 FF F7 08 FD FE 1D FE
 RO15:519B FF 00 FF FF FF FF FF FF 0E FF ED 1E BE 7D BB 7D
 RO15:51AB FF 00 FF FF FF FF FF FF 38 FF FB 3C DA 3D 7B 9D
 RO15:51BB FF 00 FF FF FF FF FF FF 32 FF F6 3B D6 3B F6 1B
 RO15:51CB FF 00 FF FF FF FF FF FF 03 FF FD 03 F7 39 F7 39
 RO15:51DB FF 00 FF FF FF FF FF FF E3 FF DF E3 ED D3 B7 D9
 RO15:51EB FF 00 FF FF FF FF FF FF 80 FF BF C0 BD CE B1 CE
 RO15:51FB FF 00 FF FF FF FF FF FF C0 FF 5F E0 DE 67 DE 67
 RO15:520B FF 00 FF FE FF FE FF FE 7F FE BF 7E FF 3E FF 3E
 RO15:521B F7 78 FB 7C FF 7F F7 78 FF 7F FF 7F FF 7F FF 00
 RO15:522B ED 1E FD 0E BD CE FD 1E FF FF FF FF FF FF FF 00
 RO15:523B BC 7B B7 78 BB 77 AF 77 FF FF FF FF FF FF FF 00
 RO15:524B 6B 9D FB 0D F3 CD DB E5 FF FF FF FF FF FF FF 00
 RO15:525B 66 9B F6 8B B6 CB FE C3 FF FF FF FF FF FF FF 00
 RO15:526B F7 39 F7 39 C7 39 FE 03 FF FF FF FF FF FF FF 00
 RO15:527B C6 B9 7F 80 BF 7C FD 7E FF FF FF FF FF FF FF 00
 RO15:528B BF C0 BB CC 3F CC BD 4E FF FF FF FF FF FF FF 00
 RO15:529B DE 67 5E E7 D8 67 9F 60 FF FF FF FF FF FF FF 00
 RO15:52AB FF 3E FF 3E FF 3E FF 7E FF FE FF FE FF FE FF 00

 RO15:52BB FF 00 FF 7F FF 7F FF 7F F8 7F F7 78 F7 79 F7 79
 RO15:52CB FF 00 FF FF FF FF FF FF 18 FF F7 18 F7 F9 F7 F9
 RO15:52DB FF 00 FF FF FF FF FF FF 18 FF EB 1C BA CD BB CD
 RO15:52EB FF 00 FF FF FF FF FF FF 32 FF F6 3B D6 3B F6 1B
 RO15:52FB FF 00 FF FF FF FF FF FF 02 FF FE 03 FE 3F C2 3F
 RO15:530B FF 00 FF FF FF FF FF FF 30 FF EF 30 EF 33 EE 33
 RO15:531B FF 00 FF FF FF FF FF FF 11 FF F7 19 F7 F9 17 F9
 RO15:532B FF 00 FF FF FF FF FF FF C8 FF DB EC DB EC DB EC
 RO15:533B FF 00 FF FF FF FF FF FF 0F FF F7 0F DF E7 1E E7
 RO15:534B FF 00 FF FF FF FF FF FF 8C FF 7D 8E B7 4F DF 67
 RO15:535B FF 00 FF FF FF FF FF FF 00 FF F9 06 6D 9E 6D 9E
 RO15:536B FF 00 FF FF FF FF FF FF 60 FF DF 60 DE 67 DE 67
 RO15:537B FF 00 FF FF FF FF FF FF 60 FF AF 70 EB 34 EF 34
 RO15:538B FF 00 FF FE FF FE FF FE CF FE DF EE 5F EE DF 6E
 RO15:539B F7 79 F7 79 F6 79 FB 7C FF 7F FF 7F FF 7F FF 00
 RO15:53AB F7 F9 F7 F9 16 F9 FB 1C FF FF FF FF FF FF FF 00
 RO15:53BB BB CD BB CD 3B CD FB 1D FF FF FF FF FF FF FF 00
 RO15:53CB 66 9B F6 8B B6 CB FE C3 FF FF FF FF FF FF FF 00
 RO15:53DB FA 07 FE 3F FE 3F FE 3F FF FF FF FF FF FF FF 00
 RO15:53EB EE 33 EF 33 EC 33 F7 38 FF FF FF FF FF FF FF 00
 RO15:53FB F7 19 77 99 76 99 FB 1C FF FF FF FF FF FF FF 00
 RO15:540B DB EC DB EC 1B EC FB 1C FF FF FF FF FF FF FF 00
 RO15:541B FF 06 B5 CE FE C5 DB E5 FF FF FF FF FF FF FF 00
 RO15:542B 1B E7 FF 03 FD F3 F7 F9 FF FF FF FF FF FF FF 00
 RO15:543B 6D 9E 6D 9E 6D 9E 6D 9E FF FF FF FF FF FF FF 00
 RO15:544B DE 67 DE 67 D8 67 EF 70 FF FF FF FF FF FF FF 00
 RO15:545B ED 36 EF 36 EE 37 EF 77 FF FF FF FF FF FF FF 00
 RO15:546B 9F 6E DF 2E DF 2E FF 0E FF FE FF FE FF FE FF 00

 RO15:547B 00 00 00 69 FF 7F 40 72
 RO15:5483 FF 7F B5 56 6B 2D 00 00
 RO15:548B FF 7F 6C 03 08 02 00 00
 RO15:5493 00 69 9F 00 FF 7F 00 00
 RO15:549B 10 42 6B 2D C6 18 00 00
 RO15:54A3 9F 53 DF 02 74 01 00 00
 RO15:54AB F0 63 C0 4A 60 25 00 00
 RO15:54B3 1F 7C 1F 7C 00 00 FF 7F

 RO15:54BB CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO15:54BE CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO15:54C1 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO15:54C4 AF               xor  a
 RO15:54C5 E0 95            ld   (ff00+95),a
 RO15:54C7 E0 96            ld   (ff00+96),a
 RO15:54C9 3E 02            ld   a,02
 RO15:54CB EA 2A C6         ld   (C62A),a       // Default of 2
 RO15:54CE EF 10 A8 68                          // Sets up basic covered graphics values
 RO15:54D2 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO15:54D6 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO15:54D9 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO15:54DC 3E 00            ld   a,00
 RO15:54DE E0 83            ld   (ff00+83),a
 RO15:54E0 E0 4F            ld   (ff00+4F),a
 RO15:54E2 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO15:54E6 F0 83            ld   a,(ff00+83)
 RO15:54E8 F5               push af
 RO15:54E9 3E 01            ld   a,01
 RO15:54EB E0 83            ld   (ff00+83),a
 RO15:54ED E0 4F            ld   (ff00+4F),a
 RO15:54EF 11 40 56         ld   de,5640        // Top menu options
 RO15:54F2 21 00 90         ld   hl,9000
 RO15:54F5 01 50 06         ld   bc,0650
 RO15:54F8 CD 50 3B         call 3B50           // VRA1:($9000~$964F) = ($5640~$5B8F)
 RO15:54FB F1               pop  af
 RO15:54FC E0 83            ld   (ff00+83),a
 RO15:54FE E0 4F            ld   (ff00+4F),a
 RO15:5500 3E 00            ld   a,00
 RO15:5502 06 08            ld   b,08
 RO15:5504 21 90 5C         ld   hl,5C90
 RO15:5507 CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($5C90) to ($5CCF)
 RO15:550A CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO15:550D CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO15:5510 3E 0A            ld   a,0A
 RO15:5512 01 01 05         ld   bc,0501
 RO15:5515 11 02 0A         ld   de,0A02
 RO15:5518 26 01            ld   h,01           // "CONTINUE"
 RO15:551A EF 15 FD 67                          // (VRA0:$9800 5~14,1~2) = 1~20, (VRA1:$9800 5~14,1~2) = 10
 RO15:551E 3E 0A            ld   a,0A
 RO15:5520 01 03 05         ld   bc,0503
 RO15:5523 11 02 0A         ld   de,0A02
 RO15:5526 26 15            ld   h,15           // "NEW GAME"
 RO15:5528 EF 15 FD 67                          // (VRA0:$9800 5~14,3~4) = 21~40, (VRA1:$9800 5~14,3~4) = 10
 RO15:552C 3E 0A            ld   a,0A
 RO15:552E 01 05 05         ld   bc,0505
 RO15:5531 11 02 0A         ld   de,0A02
 RO15:5534 26 29            ld   h,29           // "VS"
 RO15:5536 EF 15 FD 67                          // (VRA0:$9800 5~14,5~6) = 41~60, (VRA1:$9800 5~14,5~6) = 10
 RO15:553A 3E 0A            ld   a,0A
 RO15:553C 01 07 05         ld   bc,0507
 RO15:553F 11 02 0A         ld   de,0A02
 RO15:5542 26 3D            ld   h,3D           // "MAP"
 RO15:5544 EF 15 FD 67                          // (VRA0:$9800 5~14,7~8) = 61~80, (VRA1:$9800 5~14,7~8) = 10
 RO15:5548 3E 0A            ld   a,0A
 RO15:554A 01 09 05         ld   bc,0509
 RO15:554D 11 02 0A         ld   de,0A02
 RO15:5550 26 51            ld   h,51           // "NETWORK"
 RO15:5552 EF 15 FD 67                          // (VRA0:$9800 5~14,9~10) = 81~100, (VRA1:$9800 5~14,9~10) = 10
 RO15:5556 01 0C 01         ld   bc,010C
 RO15:5559 11 05 12         ld   de,1205
 RO15:555C EF 22 47 62                          // Basic setup for table rectangle 1~18,12~16 including defaulted palette for interior's tiles
 RO15:5560 F0 83            ld   a,(ff00+83)
 RO15:5562 F5               push af
 RO15:5563 3E 00            ld   a,00
 RO15:5565 E0 83            ld   (ff00+83),a
 RO15:5567 E0 4F            ld   (ff00+4F),a
 RO15:5569 3E 20            ld   a,20
 RO15:556B 0E 00            ld   c,00
 RO15:556D 06 15            ld   b,15
 RO15:556F 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO15:5572 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:5575 EA 9C CC         ld   (CC9C),a
 RO15:5578 CD 86 55         call 5586           // Establishes highlighted choice's modifications to given graphics on Top Menu
 RO15:557B F1               pop  af
 RO15:557C E0 83            ld   (ff00+83),a
 RO15:557E E0 4F            ld   (ff00+4F),a
 RO15:5580 3E 02            ld   a,02
 RO15:5582 CD 16 38         call 3816           // Menu theme
 RO15:5585 C9               ret                 // Establishes Top Menu's graphics as a whole
 RO15:5586 FA 2A C6         ld   a,(C62A)
 RO15:5589 06 10            ld   b,10
 RO15:558B CD 95 29         call 2995           // HL = A * B
 RO15:558E 7D               ld   a,l
 RO15:558F C6 20            add  a,20
 RO15:5591 4F               ld   c,a
 RO15:5592 06 30            ld   b,30           // 40,16+16*Choice
 RO15:5594 FA 9C CC         ld   a,(CC9C)
 RO15:5597 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:559A CD A2 55         call 55A2           // Establishes text in description for highlighted choice on Top Menu
 RO15:559D C9               ret                 // Establishes highlighted choice's modifications to Pointing Right Bullet graphics on Top Menu
 RO15:559E CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO15:55A1 C9               ret  
 RO15:55A2 F0 83            ld   a,(ff00+83)
 RO15:55A4 F5               push af
 RO15:55A5 3E 00            ld   a,00
 RO15:55A7 E0 83            ld   (ff00+83),a
 RO15:55A9 E0 4F            ld   (ff00+4F),a
 RO15:55AB AF               xor  a
 RO15:55AC 01 0D 02         ld   bc,020D
 RO15:55AF 11 03 10         ld   de,1003
 RO15:55B2 EF 15 D3 6A                          // Empties VRA0 map tiles in rectangle 2~17,13~15
 RO15:55B6 F1               pop  af
 RO15:55B7 E0 83            ld   (ff00+83),a
 RO15:55B9 E0 4F            ld   (ff00+4F),a
 RO15:55BB FA 2A C6         ld   a,(C62A)
 RO15:55BE 87               add  a
 RO15:55BF 21 D2 55         ld   hl,55D2
 RO15:55C2 CD BC 29         call 29BC           // HL += A
 RO15:55C5 2A               ldi  a,(hl)
 RO15:55C6 47               ld   b,a
 RO15:55C7 7E               ld   a,(hl)
 RO15:55C8 4F               ld   c,a
 RO15:55C9 61               ld   h,c
 RO15:55CA 68               ld   l,b
 RO15:55CB 01 0D 02         ld   bc,020D
 RO15:55CE CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO15:55D1 C9               ret                 // Establishes text in description for highlighted choice on Top Menu

 RO15:55D2 DC 55
 RO15:55D4 EC 55               ld   d,l
 RO15:55D6 FC 55               ld   d,l
 RO15:55D8 0F 56               ld   d,(hl)
 RO15:55DA 2A 56

 RO15:55DC 72 9A 67 66 87 E1 2D D1 60 7A 94 82 7F 6D 2E 00

 RO15:55EC 61 70 87 6C 68 E1 2D D1 60 7A 94 82 7F 6D 2E 00

 RO15:55FC 7E 66 79 F4 DA B2 D4 2D 74 01
 RO15:5606 70 62 6E 8D 6C 7F 6D 2E 00

 RO15:560F CF FF F4 60 72 68 AF 70 88 01
 RO15:5619 49 52 72 63 6C 8D 9B 84 88 74 88 9B 67 7F 6D 2E 00

 RO15:562A B3 FB 2D E5 C8 FF C4 BE DD C0 2D 76 01 
 RO15:5637 B1 B8 BE BD 6C 7F 6D 2E 00

 RO15:5640 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

 RO15:5650 FF 00 FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F
 RO15:5660 FF 00 FF FF FF FF FF FF 81 FF 7F 81 7F 9F 7F 9F
 RO15:5670 FF 00 FF FF FF FF FF FF 81 FF 7E 81 7B 9C 7B 9C
 RO15:5680 FF 00 FF FF FF FF FF FF 83 FF BF C3 AD D3 BF D1
 RO15:5690 FF 00 FF FF FF FF FF FF 00 FF 5F A0 76 B9 76 B9
 RO15:56A0 FF 00 FF FF FF FF FF FF 04 FF 9D 66 DD E6 DD E6
 RO15:56B0 FF 00 FF FF FF FF FF FF 19 FF FB 1D 6B 9D FB 8D
 RO15:56C0 FF 00 FF FF FF FF FF FF 1C FF 7D 9E 7D 9E 7D 9E
 RO15:56D0 FF 00 FF FF FF FF FF FF 80 FF BF C0 BF CF B0 CF
 RO15:56E0 FF 00 FF FE FF FE FF FE FF FE FF FE FF FE FF FE
 RO15:56F0 FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 00
 RO15:5700 7F 9F 7F 9F 61 9F BF C1 FF FF FF FF FF FF FF 00
 RO15:5710 7B 9C 7B 9C 63 9C BF C1 FF FF FF FF FF FF FF 00
 RO15:5720 B6 D9 BF D8 BB DC BF DC FF FF FF FF FF FF FF 00
 RO15:5730 76 B9 76 B9 76 B9 F6 39 FF FF FF FF FF FF FF 00
 RO15:5740 DD E6 DD E6 DD E6 DD E6 FF FF FF FF FF FF FF 00
 RO15:5750 B3 CD FB C5 DB E5 FF E1 FF FF FF FF FF FF FF 00
 RO15:5760 7D 9E 7D 9E 61 9E BF C1 FF FF FF FF FF FF FF 00
 RO15:5770 BE C1 BF CF B0 CF BF C0 FF FF FF FF FF FF FF 00
 RO15:5780 FF FE FF FE FF FE FF FE FF FE FF FE FF FE FF 00

 RO15:5790 FF 00 FF 7F FF 7F FF 7F F8 7F FB 7C FA 7D FB 7D
 RO15:57A0 FF 00 FF FF FF FF FF FF 32 FF F6 3B D6 3B F6 1B
 RO15:57B0 FF 00 FF FF FF FF FF FF 00 FF FD 02 FF 3E C3 3E
 RO15:57C0 FF 00 FF FF FF FF FF FF 73 FF FF 73 AD 73 FF 21
 RO15:57D0 FF 00 FF FF FF FF FF FF 9E FF DD BE 7D BE BD 7E
 RO15:57E0 FF 00 FF FF FF FF FF FF 03 FF FF 03 FF 7F C3 7F
 RO15:57F0 FF 00 FF FF FF FF FF FF C7 FF BF C7 DB A7 6F B3
 RO15:5800 FF 00 FF FF FF FF FF FF 0E FF 7F 8E 75 8E 7F 84
 RO15:5810 FF 00 FF FF FF FF FF FF 20 FF EF 30 EF 33 EC 33
 RO15:5820 FF 00 FF FE FF FE FF FE 3F FE FF 3E FF FE 3F FE
 RO15:5830 FB 7D FB 7D FB 7D FB 7D FF 7F FF 7F FF 7F FF 00
 RO15:5840 66 9B F6 8B B6 CB FE C3 FF FF FF FF FF FF FF 00
 RO15:5850 FA 07 FF 3F C3 3F FF 03 FF FF FF FF FF FF FF 00
 RO15:5860 D7 29 DE 29 EF 18 7B 9C FF FF FF FF FF FF FF 00
 RO15:5870 FD 7E FD 7E 7D FE FE FF FF FF FF FF FF FF FF 00
 RO15:5880 DF 63 EE 73 8F 72 FD 02 FF FF FF FF FF FF FF 00
 RO15:5890 8D 73 FF 01 7E F9 FB FC FF FF FF FF FF FF FF 00
 RO15:58A0 5A A5 7E A1 6C B3 7E B3 FF FF FF FF FF FF FF 00
 RO15:58B0 EF 30 EF 33 EC 33 EF 30 FF FF FF FF FF FF FF 00
 RO15:58C0 BF 7E FF FE 3F FE FF 3E FF FE FF FE FF FE FF 00

 RO15:58D0 FF 00 FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F
 RO15:58E0 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:58F0 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:5900 FF 00 FF FF FF FF FF FF FE FF FF FE FE FF FF FF
 RO15:5910 FF 00 FF FF FF FF FF FF 3C FF FE 3D DB 3D FD 1B
 RO15:5920 FF 00 FF FF FF FF FF FF 80 FF 7F 80 7F 9F 61 9F
 RO15:5930 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:5940 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:5950 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:5960 FF 00 FF FE FF FE FF FE FF FE FF FE FF FE FF FE
 RO15:5970 FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 00
 RO15:5980 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:5990 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:59A0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:59B0 67 9B FB 87 BF C7 F7 CF FF FF FF FF FF FF FF 00
 RO15:59C0 7E 81 BF C0 FB FC 7F 81 FF FF FF FF FF FF FF 00
 RO15:59D0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:59E0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:59F0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:5A00 FF FE FF FE FF FE FF FE FF FE FF FE FF FE FF 00

 RO15:5A10 FF 00 FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F
 RO15:5A20 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:5A30 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:5A40 FF 00 FF FF FF FF FF FF C3 FF DF E3 DD E3 DF E1
 RO15:5A50 FF 00 FF FF FF FF FF FF 8F FF FE 8F 7F 8E FD 0E
 RO15:5A60 FF 00 FF FF FF FF FF FF 1C FF FD 1E 6D 9E BD CE
 RO15:5A70 FF 00 FF FF FF FF FF FF 07 FF FB 07 EF 73 8F 73
 RO15:5A80 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:5A90 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:5AA0 FF 00 FF FE FF FE FF FE FF FE FF FE FF FE FF FE
 RO15:5AB0 FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 00
 RO15:5AC0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:5AD0 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:5AE0 D6 E9 DF E8 DB EC DF EC FF FF FF FF FF FF FF 00
 RO15:5AF0 BE 4D BB 4C 3D CB B7 CB FF FF FF FF FF FF FF 00
 RO15:5B00 35 CE FD 06 F9 E6 ED F2 FF FF FF FF FF FF FF 00
 RO15:5B10 FF 07 FF 7F FF 7F FF 7F FF FF FF FF FF FF FF 00
 RO15:5B20 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:5B30 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:5B40 FF FE FF FE FF FE FF FE FF FE FF FE FF FE FF 00

 RO15:5B50 FF 00 FF 7F FF 7F FF 7F FE 7F FE 7F FE 7F FE 7F
 RO15:5B60 FF 00 FF FF FF FF FF FF 0C FF FD 0E B5 4E FD 46
 RO15:5B70 FF 00 FF FF FF FF FF FF 80 FF BF C0 BF CF B0 CF
 RO15:5B80 FF 00 FF FF FF FF FF FF 80 FF BF C0 ED F3 ED F3
 RO15:5B90 FF 00 FF FF FF FF FF FF 0E FF 3F CE F5 CE FF C4
 RO15:5BA0 FF 00 FF FF FF FF FF FF 70 FF FB 74 AB 74 F3 2C
 RO15:5BB0 FF 00 FF FF FF FF FF FF 0C FF F5 0E DD E6 DD E6
 RO15:5BC0 FF 00 FF FF FF FF FF FF 06 FF FA 07 EE 73 8E 73
 RO15:5BD0 FF 00 FF FF FF FF FF FF 39 FF F5 3B EB 37 DB 27
 RO15:5BE0 FF 00 FF FE FF FE FF FE FF FE FF FE FF FE FF FE
 RO15:5BF0 FE 7F FE 7F FE 7F FE 7F FF 7F FF 7F FF 7F FF 00
 RO15:5C00 D9 66 FD 62 ED 72 FF 70 FF FF FF FF FF FF FF 00
 RO15:5C10 BE C1 BF CF B0 CF BF C0 FF FF FF FF FF FF FF 00
 RO15:5C20 ED F3 ED F3 ED F3 ED F3 FF FF FF FF FF FF FF 00
 RO15:5C30 DA E5 FB E5 FD E3 EF F3 FF FF FF FF FF FF FF 00
 RO15:5C40 FB 2C DB 2C EB 1C 7D 9E FF FF FF FF FF FF FF 00
 RO15:5C50 DD E6 DD E6 1D E6 FD 0E FF FF FF FF FF FF FF 00
 RO15:5C60 FE 03 DA 67 FE 63 EC 73 FF FF FF FF FF FF FF 00
 RO15:5C70 FF 03 ED 33 FF 31 F6 39 FF FF FF FF FF FF FF 00
 RO15:5C80 FF FE FF FE FF FE FF FE FF FE FF FE FF FE FF 00

 RO15:5C90 00 00 00 69 FF 7F 40 72
 RO15:5C98 FF 7F B5 56 6B 2D 00 00
 RO15:5CA0 FF 7F 6C 03 08 02 00 00
 RO15:5CA8 00 69 9F 00 FF 7F 00 00
 RO15:5CB0 10 42 6B 2D C6 18 00 00
 RO15:5CB8 9F 53 DF 02 74 01 00 00
 RO15:5CC0 F0 63 C0 4A 60 25 00 00
 RO15:5CC8 1F 7C 1F 7C 00 00 FF 7F

 RO15:5CD0 EA 9D CC         ld   (CC9D),a
 RO15:5CD3 FA 9D CC         ld   a,(CC9D)
 RO15:5CD6 CD 11 2F         call 2F11           // set 1,WRA4[$D000 + A * 16] (Update Timer needs to pause)
 RO15:5CD9 FA 9D CC         ld   a,(CC9D)
 RO15:5CDC 06 01            ld   b,01
 RO15:5CDE CD 9A 2E         call 2E9A           // A = WRA4($D001 + A * 16)
 RO15:5CE1 EA 9F CC         ld   (CC9F),a
 RO15:5CE4 FA 9D CC         ld   a,(CC9D)
 RO15:5CE7 06 02            ld   b,02
 RO15:5CE9 CD 9A 2E         call 2E9A           // A = WRA4($D002 + A * 16)
 RO15:5CEC EA 9E CC         ld   (CC9E),a
 RO15:5CEF CD 43 38         call 3843
 RO15:5CF2 3E 21            ld   a,21
 RO15:5CF4 CD 44 38         call 3844           // Sound replaced by force
 RO15:5CF7 CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO15:5CFA CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:5CFD FA A8 CC         ld   a,(CCA8)
 RO15:5D00 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:5D04 FA 9E CC         ld   a,(CC9E)
 RO15:5D07 C6 0A            add  a,0A
 RO15:5D09 FE D0            cp   a,D0
 RO15:5D0B 30 10            jr   nc,5D1D        // Ends immediately once sprite A's X coordinate exceeds 207
 RO15:5D0D EA 9E CC         ld   (CC9E),a
 RO15:5D10 47               ld   b,a
 RO15:5D11 FA 9F CC         ld   a,(CC9F)
 RO15:5D14 4F               ld   c,a
 RO15:5D15 FA 9D CC         ld   a,(CC9D)
 RO15:5D18 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:5D1B 18 DA            jr   5CF7
 RO15:5D1D C9               ret                 // Sprite A moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO15:5D1E EA A0 CC         ld   (CCA0),a
 RO15:5D21 FA A0 CC         ld   a,(CCA0)
 RO15:5D24 CD 11 2F         call 2F11           // set 1,WRA4[$D000 + A * 16] (sprite's update timer needs to pause)
 RO15:5D27 FA A0 CC         ld   a,(CCA0)
 RO15:5D2A 06 01            ld   b,01
 RO15:5D2C CD 9A 2E         call 2E9A           // A = WRA4($D001 + A * 16)
 RO15:5D2F EA A2 CC         ld   (CCA2),a       // Y Coordinate
 RO15:5D32 FA A0 CC         ld   a,(CCA0)
 RO15:5D35 06 02            ld   b,02
 RO15:5D37 CD 9A 2E         call 2E9A           // A = WRA4($D002 + A * 16)
 RO15:5D3A EA A1 CC         ld   (CCA1),a       // X Coordinate
 RO15:5D3D CD 43 38         call 3843
 RO15:5D40 3E 21            ld   a,21
 RO15:5D42 CD 44 38         call 3844
 RO15:5D45 CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO15:5D48 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:5D4B FA A8 CC         ld   a,(CCA8)
 RO15:5D4E EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:5D52 FA A2 CC         ld   a,(CCA2)       // Y Coordinate
 RO15:5D55 C6 0A            add  a,0A
 RO15:5D57 FE B8            cp   a,B8
 RO15:5D59 30 13            jr   nc,5D6E
 RO15:5D5B EA A2 CC         ld   (CCA2),a
 RO15:5D5E FA A1 CC         ld   a,(CCA1)
 RO15:5D61 47               ld   b,a
 RO15:5D62 FA A2 CC         ld   a,(CCA2)
 RO15:5D65 4F               ld   c,a
 RO15:5D66 FA A0 CC         ld   a,(CCA0)
 RO15:5D69 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:5D6C 18 D7            jr   5D45
 RO15:5D6E C9               ret                 // Sprite A moves down 10 pixels per frame, ending once the Y coordinate exceeds 183 (clearly off-screen)
 RO15:5D6F CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO15:5D72 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO15:5D75 CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO15:5D78 EF 10 A8 68                          // Sets up basic covered graphics values
 RO15:5D7C EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO15:5D80 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO15:5D83 AF               xor  a
 RO15:5D84 E0 95            ld   (ff00+95),a
 RO15:5D86 E0 96            ld   (ff00+96),a
 RO15:5D88 E0 97            ld   (ff00+97),a
 RO15:5D8A E0 98            ld   (ff00+98),a
 RO15:5D8C CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO15:5D8F 3E 00            ld   a,00
 RO15:5D91 E0 83            ld   (ff00+83),a
 RO15:5D93 E0 4F            ld   (ff00+4F),a
 RO15:5D95 3E 00            ld   a,00
 RO15:5D97 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO15:5D9B 01 05 01         ld   bc,0105
 RO15:5D9E 11 07 12         ld   de,1207
 RO15:5DA1 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO15:5DA5 21 B7 5D         ld   hl,5DB7        // "Save?"
 RO15:5DA8 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:5DAB 3E 01            ld   a,01
 RO15:5DAD EA 69 DC         ld   (DC69),a
 RO15:5DB0 01 09 07         ld   bc,0709
 RO15:5DB3 CD 37 66         call 6637           // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:5DB6 C9               ret                 // Establishes graphics for Save confirmation screen

 RO15:5DB7 06 07
 RO15:5DB9 BE 2D EF 6C 7F 6D 66 3F 00

 RO15:5DC2 F0 82            ld   a,(ff00+82)
 RO15:5DC4 F5               push af
 RO15:5DC5 3E 04            ld   a,04
 RO15:5DC7 E0 82            ld   (ff00+82),a
 RO15:5DC9 E0 70            ld   (ff00+70),a
 RO15:5DCB CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:5DCE CD 6F 5D         call 5D6F           // Establishes graphics for Save confirmation screen
 RO15:5DD1 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO15:5DD4 CD A2 05         call 05A2           // Button update, next frame
 RO15:5DD7 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:5DDA 3E 00            ld   a,00
 RO15:5DDC EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:5DE0 F0 92            ld   a,(ff00+92)
 RO15:5DE2 CB 47            bit  0,a            // A
 RO15:5DE4 28 07            jr   z,5DED
 RO15:5DE6 3E 02            ld   a,02
 RO15:5DE8 CD 44 38         call 3844
 RO15:5DEB 18 3D            jr   5E2A
 RO15:5DED CB 4F            bit  1,a            // B
 RO15:5DEF 28 0C            jr   z,5DFD
 RO15:5DF1 3E 0C            ld   a,0C
 RO15:5DF3 CD 44 38         call 3844
 RO15:5DF6 3E FF            ld   a,FF
 RO15:5DF8 EA 69 DC         ld   (DC69),a
 RO15:5DFB 18 2D            jr   5E2A
 RO15:5DFD CB 67            bit  4,a            // Right
 RO15:5DFF 28 11            jr   z,5E12
 RO15:5E01 AF               xor  a
 RO15:5E02 EA 69 DC         ld   (DC69),a
 RO15:5E05 3E 01            ld   a,01
 RO15:5E07 CD 44 38         call 3844
 RO15:5E0A 01 09 07         ld   bc,0709
 RO15:5E0D CD 64 66         call 6664           // Sets up "OK/NO" with "NO" highlighted at BC
 RO15:5E10 18 16            jr   5E28
 RO15:5E12 CB 6F            bit  5,a            // Left
 RO15:5E14 28 12            jr   z,5E28
 RO15:5E16 3E 01            ld   a,01
 RO15:5E18 EA 69 DC         ld   (DC69),a
 RO15:5E1B 3E 01            ld   a,01
 RO15:5E1D CD 44 38         call 3844
 RO15:5E20 01 09 07         ld   bc,0709
 RO15:5E23 CD 37 66         call 6637           // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:5E26 18 00            jr   5E28
 RO15:5E28 18 AA            jr   5DD4           // Loops until confirmation input by pressing A or B
 RO15:5E2A CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:5E2D FA 69 DC         ld   a,(DC69)
 RO15:5E30 57               ld   d,a
 RO15:5E31 F1               pop  af
 RO15:5E32 E0 82            ld   (ff00+82),a
 RO15:5E34 E0 70            ld   (ff00+70),a
 RO15:5E36 7A               ld   a,d
 RO15:5E37 C9               ret                 // Controls for Save confirmation screen; ends with A = 1 for "OK", 0 for "NO", or -1 for cancellation
 RO15:5E38 01 09 07         ld   bc,0709
 RO15:5E3B CD D4 0E         call 0ED4           // HL = $9927
 RO15:5E3E 54               ld   d,h
 RO15:5E3F 5D               ld   e,l            // DE = $9927
 RO15:5E40 FA CB FF         ld   a,(FFCB)
 RO15:5E43 F5               push af
 RO15:5E44 D5               push de
 RO15:5E45 AF               xor  a
 RO15:5E46 EA CB FF         ld   (FFCB),a
 RO15:5E49 06 05            ld   b,05
 RO15:5E4B 21 BA 5E         ld   hl,5EBA
 RO15:5E4E CD 0F 35         call 350F           // Load [$C300 + [$FFC8] + 0~7] with 5, $27, $99, [$5EBA]...[$5EBE]; increment [$FFCA], B = 0, HL = $FFCA, A = [$5EBE]
 RO15:5E51 D1               pop  de
 RO15:5E52 3E 01            ld   a,01
 RO15:5E54 EA CB FF         ld   (FFCB),a
 RO15:5E57 06 05            ld   b,05
 RO15:5E59 21 BA 5E         ld   hl,5EBA
 RO15:5E5C CD 0F 35         call 350F           // Load [$C300 + [$FFC8] + 0~7] with 5, $27, $19, [$5EBA]...[$5EBE]; increment [$FFCA], B = 0, HL = $FFCA, A = [$5EBE]
 RO15:5E5F F1               pop  af             // (Basically, just above clears the "OK/NO" graphics.)
 RO15:5E60 EA CB FF         ld   (FFCB),a
 RO15:5E63 F0 83            ld   a,(ff00+83)
 RO15:5E65 F5               push af
 RO15:5E66 3E 00            ld   a,00
 RO15:5E68 E0 83            ld   (ff00+83),a
 RO15:5E6A E0 4F            ld   (ff00+4F),a
 RO15:5E6C 01 06 02         ld   bc,0206
 RO15:5E6F 11 03 10         ld   de,1003
 RO15:5E72 AF               xor  a
 RO15:5E73 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO15:5E77 3E 01            ld   a,01
 RO15:5E79 E0 83            ld   (ff00+83),a
 RO15:5E7B E0 4F            ld   (ff00+4F),a
 RO15:5E7D 01 06 02         ld   bc,0206
 RO15:5E80 11 03 10         ld   de,1003
 RO15:5E83 AF               xor  a
 RO15:5E84 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO15:5E88 F1               pop  af
 RO15:5E89 E0 83            ld   (ff00+83),a
 RO15:5E8B E0 4F            ld   (ff00+4F),a
 RO15:5E8D 21 BF 5E         ld   hl,5EBF        // "Saved."
 RO15:5E90 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:5E93 CD A2 05         call 05A2           // Button update, next frame
 RO15:5E96 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:5E99 3E 00            ld   a,00
 RO15:5E9B EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:5E9F F0 91            ld   a,(ff00+91)
 RO15:5EA1 CB 47            bit  0,a            // A
 RO15:5EA3 28 07            jr   z,5EAC
 RO15:5EA5 3E 02            ld   a,02
 RO15:5EA7 CD 44 38         call 3844
 RO15:5EAA 18 0D            jr   5EB9
 RO15:5EAC CB 4F            bit  1,a            // B
 RO15:5EAE 28 07            jr   z,5EB7
 RO15:5EB0 3E 02            ld   a,02
 RO15:5EB2 CD 44 38         call 3844
 RO15:5EB5 18 02            jr   5EB9
 RO15:5EB7 18 DA            jr   5E93           // Standby for A/B Button Press
 RO15:5EB9 C9               ret                 // Text Transition to indicate success with file saving

 RO15:5EBA 00 00 00 00 00

 RO15:5EBF 06 08
 RO15:5EC1 BE 2D EF 6C 7F 6C 70 2E 00

 RO15:5ECA FA 2F C6         ld   a,(C62F)
 RO15:5ECD FE 03            cp   a,03
 RO15:5ECF 28 02            jr   z,5ED3
 RO15:5ED1 18 04            jr   5ED7
 RO15:5ED3 3E 04            ld   a,04
 RO15:5ED5 18 02            jr   5ED9
 RO15:5ED7 3E 05            ld   a,05           // A = 4 for Map Edit, 5 otherwise
 RO15:5ED9 EF 13 AD 5B                          // Updates Save Data of Save File A, including Map Data unconditional
 RO15:5EDD C9               ret                 // Updates Save Data of VS Mode Manual Save File
 RO15:5EDE F0 82            ld   a,(ff00+82)
 RO15:5EE0 F5               push af
 RO15:5EE1 3E 04            ld   a,04
 RO15:5EE3 E0 82            ld   (ff00+82),a
 RO15:5EE5 E0 70            ld   (ff00+70),a
 RO15:5EE7 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:5EEA CD 6F 5D         call 5D6F           // Establishes graphics for Save confirmation screen
 RO15:5EED CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO15:5EF0 CD A2 05         call 05A2           // Button update, next frame
 RO15:5EF3 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:5EF6 3E 00            ld   a,00
 RO15:5EF8 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:5EFC F0 92            ld   a,(ff00+92)
 RO15:5EFE CB 47            bit  0,a            // A
 RO15:5F00 28 16            jr   z,5F18
 RO15:5F02 3E 02            ld   a,02
 RO15:5F04 CD 44 38         call 3844
 RO15:5F07 FA 69 DC         ld   a,(DC69)       // OK/NO Choice
 RO15:5F0A FE 01            cp   a,01
 RO15:5F0C 28 02            jr   z,5F10
 RO15:5F0E 18 45            jr   5F55           // Branch for NO
 RO15:5F10 CD CA 5E         call 5ECA           // Updates Save Data of VS Mode Manual Save File
 RO15:5F13 CD 38 5E         call 5E38           // Text Transition to indicate success with file saving
 RO15:5F16 18 3D            jr   5F55
 RO15:5F18 CB 4F            bit  1,a            // B
 RO15:5F1A 28 0C            jr   z,5F28
 RO15:5F1C 3E 0C            ld   a,0C
 RO15:5F1E CD 44 38         call 3844
 RO15:5F21 3E FF            ld   a,FF
 RO15:5F23 EA 69 DC         ld   (DC69),a
 RO15:5F26 18 2D            jr   5F55           // Effectively "NO"
 RO15:5F28 CB 67            bit  4,a            // Right
 RO15:5F2A 28 11            jr   z,5F3D
 RO15:5F2C AF               xor  a
 RO15:5F2D EA 69 DC         ld   (DC69),a       // OK/NO Choice
 RO15:5F30 3E 01            ld   a,01
 RO15:5F32 CD 44 38         call 3844
 RO15:5F35 01 09 07         ld   bc,0709
 RO15:5F38 CD 64 66         call 6664           // Sets up "OK/NO" with "NO" highlighted at BC
 RO15:5F3B 18 16            jr   5F53
 RO15:5F3D CB 6F            bit  5,a            // Left
 RO15:5F3F 28 12            jr   z,5F53
 RO15:5F41 3E 01            ld   a,01
 RO15:5F43 EA 69 DC         ld   (DC69),a       // OK/NO Choice
 RO15:5F46 3E 01            ld   a,01
 RO15:5F48 CD 44 38         call 3844
 RO15:5F4B 01 09 07         ld   bc,0709
 RO15:5F4E CD 37 66         call 6637           // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:5F51 18 00            jr   5F53
 RO15:5F53 18 9B            jr   5EF0           // Further Standby until A or B is pressed
 RO15:5F55 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:5F58 FA 69 DC         ld   a,(DC69)
 RO15:5F5B 57               ld   d,a
 RO15:5F5C F1               pop  af
 RO15:5F5D E0 82            ld   (ff00+82),a
 RO15:5F5F E0 70            ld   (ff00+70),a
 RO15:5F61 7A               ld   a,d
 RO15:5F62 C9               ret                 // VS Save Prompt master control, ending with A = Save Choice
 RO15:5F63 3E 00            ld   a,00
 RO15:5F65 CD 8D 05         call 058D           // ($4000) = 0, ($FF81) = 0
 RO15:5F68 CD 93 05         call 0593
 RO15:5F6B FA 8E A6         ld   a,(A68E)       // Suspend File Game Mode
 RO15:5F6E CD 9B 05         call 059B
 RO15:5F71 F5               push af
 RO15:5F72 87               add  a
 RO15:5F73 21 C3 5F         ld   hl,5FC3
 RO15:5F76 CD BC 29         call 29BC           // HL += A
 RO15:5F79 2A               ldi  a,(hl)
 RO15:5F7A 4F               ld   c,a
 RO15:5F7B 7E               ld   a,(hl)
 RO15:5F7C 47               ld   b,a
 RO15:5F7D 60               ld   h,b
 RO15:5F7E 69               ld   l,c            // Text pointer of Suspend File Game Mode
 RO15:5F7F 01 03 06         ld   bc,0603
 RO15:5F82 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:5F85 F1               pop  af
 RO15:5F86 47               ld   b,a
 RO15:5F87 3E 03            ld   a,03
 RO15:5F89 EF 13 24 5A                          // Reads Interrupt Save for Interrupt's Mode Save info to get important data for text
 RO15:5F8D 3E 03            ld   a,03
 RO15:5F8F 21 5E DC         ld   hl,DC5E        // Player Name
 RO15:5F92 EF 13 7C 59                          // HL set to hold Player's Name of Interrupt Save
 RO15:5F96 01 02 08         ld   bc,0802
 RO15:5F99 21 5E DC         ld   hl,DC5E        // Player Name
 RO15:5F9C CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:5F9F FA 92 CC         ld   a,(CC92)
 RO15:5FA2 3C               inc  a              // Map #
 RO15:5FA3 01 04 06         ld   bc,0604
 RO15:5FA6 16 02            ld   d,02
 RO15:5FA8 CD 37 32         call 3237           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO15:5FAB 21 89 CC         ld   hl,CC89        // Map Name
 RO15:5FAE 01 04 09         ld   bc,0904
 RO15:5FB1 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:5FB4 FA 93 CC         ld   a,(CC93)
 RO15:5FB7 CB 3F            srl  a
 RO15:5FB9 3C               inc  a              // Day #
 RO15:5FBA 01 05 02         ld   bc,0205
 RO15:5FBD 16 02            ld   d,02
 RO15:5FBF CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO15:5FC2 C9               ret  

 RO15:5FC3 C9 5F                                // "Beginner Mode"
 RO15:5FC5 D1 5F                                // "Campaign Mode"
 RO15:5FC7 DB 5F                                // "Standard Mode"

 RO15:5FC9 EE DF C5 2D D3 2D EC 00
 RO15:5FD1 B7 FC DD F5 2D DD D3 2D EC 00
 RO15:5FDB BD C0 DD E8 2D EC D3 2D EC 00

 RO15:5FE5 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO15:5FE8 CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO15:5FEB CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO15:5FEE EF 10 A8 68                          // Sets up basic covered graphics values
 RO15:5FF2 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO15:5FF6 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO15:5FF9 AF               xor  a
 RO15:5FFA E0 95            ld   (ff00+95),a
 RO15:5FFC E0 96            ld   (ff00+96),a
 RO15:5FFE E0 97            ld   (ff00+97),a
 RO15:6000 E0 98            ld   (ff00+98),a
 RO15:6002 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO15:6005 3E 00            ld   a,00
 RO15:6007 E0 83            ld   (ff00+83),a
 RO15:6009 E0 4F            ld   (ff00+4F),a
 RO15:600B 3E 00            ld   a,00
 RO15:600D EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO15:6011 01 01 01         ld   bc,0101
 RO15:6014 11 06 12         ld   de,1206
 RO15:6017 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO15:601B 01 07 01         ld   bc,0107
 RO15:601E 11 0A 12         ld   de,120A
 RO15:6021 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO15:6025 21 58 60         ld   hl,6058        // "CO:"
 RO15:6028 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:602B 21 61 60         ld   hl,6061        // "Mode:"
 RO15:602E CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:6031 21 68 60         ld   hl,6068        // "Map:"
 RO15:6034 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:6037 21 6F 60         ld   hl,606F        // "Day"
 RO15:603A CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:603D 21 75 60         ld   hl,6075        // "Midway data exists."
 RO15:6040 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:6043 21 86 60         ld   hl,6086        // "Resume Play?"
 RO15:6046 CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:6049 3E 01            ld   a,01
 RO15:604B EA 68 DC         ld   (DC68),a
 RO15:604E 01 0E 07         ld   bc,070E
 RO15:6051 CD 37 66         call 6637           // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:6054 CD 63 5F         call 5F63           // Interrupt Save info text establishment
 RO15:6057 C9               ret  

 RO15:6058 02 02
 RO15:605A 6C 8A 62 66 8D 3A 00
 RO15:6061 02 03
 RO15:6063 D3 2D EC 3A 00
 RO15:6068 02 04
 RO15:606A CF FF F4 3A 00
 RO15:606F 04 05
 RO15:6071 76 71 82 00
 RO15:6075 03 09
 RO15:6077 74 71 AD 63 79 EB 2D C0 8E 61 88 7F 6D 2E 00
 RO15:6086 03 0A
 RO15:6088 72 9A 67 66 87 F4 DA B2 6C 7F 6D 66 3F 00

 RO15:6096 F0 82            ld   a,(ff00+82)
 RO15:6098 F5               push af
 RO15:6099 3E 04            ld   a,04
 RO15:609B E0 82            ld   (ff00+82),a
 RO15:609D E0 70            ld   (ff00+70),a
 RO15:609F CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:60A2 CD E5 5F         call 5FE5           // Establishes Interrupt Save screen graphics
 RO15:60A5 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO15:60A8 CD A2 05         call 05A2           // Button update, next frame
 RO15:60AB CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:60AE 3E 00            ld   a,00
 RO15:60B0 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:60B4 F0 92            ld   a,(ff00+92)
 RO15:60B6 CB 47            bit  0,a            // A
 RO15:60B8 28 07            jr   z,60C1
 RO15:60BA 3E 02            ld   a,02
 RO15:60BC CD 44 38         call 3844
 RO15:60BF 18 2D            jr   60EE
 RO15:60C1 CB 67            bit  4,a            // Right
 RO15:60C3 28 11            jr   z,60D6
 RO15:60C5 AF               xor  a
 RO15:60C6 EA 68 DC         ld   (DC68),a
 RO15:60C9 3E 01            ld   a,01
 RO15:60CB CD 44 38         call 3844
 RO15:60CE 01 0E 07         ld   bc,070E
 RO15:60D1 CD 64 66         call 6664           // Sets up "OK/NO" with "NO" highlighted at BC
 RO15:60D4 18 16            jr   60EC           // Further standby for button input after pressing Right
 RO15:60D6 CB 6F            bit  5,a            // Left
 RO15:60D8 28 12            jr   z,60EC
 RO15:60DA 3E 01            ld   a,01
 RO15:60DC EA 68 DC         ld   (DC68),a
 RO15:60DF 3E 01            ld   a,01
 RO15:60E1 CD 44 38         call 3844
 RO15:60E4 01 0E 07         ld   bc,070E
 RO15:60E7 CD 37 66         call 6637           // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:60EA 18 00            jr   60EC           // Further standby for button input after pressing Left
 RO15:60EC 18 BA            jr   60A8           // Standby for button input
 RO15:60EE CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:60F1 FA 68 DC         ld   a,(DC68)
 RO15:60F4 57               ld   d,a
 RO15:60F5 F1               pop  af
 RO15:60F6 E0 82            ld   (ff00+82),a
 RO15:60F8 E0 70            ld   (ff00+70),a
 RO15:60FA 7A               ld   a,d
 RO15:60FB C9               ret  
 RO15:60FC EF 14 8C 5D                          // Readies Player Rank Kanji placement
 RO15:6100 FA 5C DC         ld   a,(DC5C)       // Old Rank
 RO15:6103 01 05 0C         ld   bc,0C05
 RO15:6106 11 02 06         ld   de,0602
 RO15:6109 EF 14 15 5E                          // Establishes Player Rank Kanji placements (A is Player Rank, BC is base coordinates, DE is size)
 RO15:610D EF 14 6D 5D                          // Readies Player Rank Stars placement
 RO15:6111 FA 5C DC         ld   a,(DC5C)
 RO15:6114 01 05 09         ld   bc,0905
 RO15:6117 11 02 03         ld   de,0302
 RO15:611A EF 14 AB 5D                          // Establishes Rank Stars placements
 RO15:611E C9               ret                 // Establishes Old Player Rank graphics
 RO15:611F EF 14 8C 5D                          // Readies Player Rank Kanji placement
 RO15:6123 FA 5D DC         ld   a,(DC5D)       // New Rank
 RO15:6126 01 05 0C         ld   bc,0C05        // Coordinates
 RO15:6129 11 02 06         ld   de,0602        // Size
 RO15:612C EF 14 15 5E                          // Establishes Player Rank Kanji placements (A is Player Rank, BC is base coordinates, DE is size)
 RO15:6130 EF 14 6D 5D                          // Readies Player Rank Stars placement
 RO15:6134 FA 5D DC         ld   a,(DC5D)
 RO15:6137 01 05 09         ld   bc,0905
 RO15:613A 11 02 03         ld   de,0302
 RO15:613D EF 14 AB 5D                          // Establishes Rank Stars placements
 RO15:6141 C9               ret                 // Establishes New Player Rank graphics
 RO15:6142 FA 5D DC         ld   a,(DC5D)       // New Rank
 RO15:6145 87               add  a
 RO15:6146 21 59 61         ld   hl,6159
 RO15:6149 CD BC 29         call 29BC           // HL += A
 RO15:614C 2A               ldi  a,(hl)
 RO15:614D 47               ld   b,a
 RO15:614E 7E               ld   a,(hl)
 RO15:614F 4F               ld   c,a
 RO15:6150 68               ld   l,b
 RO15:6151 61               ld   h,c
 RO15:6152 01 0B 06         ld   bc,060B
 RO15:6155 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:6158 C9               ret  

 RO15:6159 73 61                                // Cadet (Cdt)
 RO15:615B 7A 61                                // Warrant Officer (WO)
 RO15:615D 80 61                                // Ensign (2Lt) - O-1
 RO15:615F 86 61                                // Lieutenant (1Lt)
 RO15:6161 8C 61                                // Captain (Capt)
 RO15:6163 91 61                                // Major (Maj)
 RO15:6165 97 61                                // Lieutenant Colonel (LCol)
 RO15:6167 9D 61                                // Colonel (Col)
 RO15:6169 A2 61                                // Brigadier (BGen)
 RO15:616B AA 61                                // Major General (MGen)
 RO15:616D B2 61                                // Lieutenant General (LGen)
 RO15:616F BA 61                                // General (Gen) - O-10
 RO15:6171 C1 61                                // Marshal

 RO15:6173 6A 63 7E 6E 62 76 00
 RO15:617A 94 AD 8D 62 76 00
 RO15:6180 6C AE 63 62 76 00
 RO15:6186 71 AD 63 62 76 00
 RO15:618C 70 62 62 76 00
 RO15:6191 6C AE 63 6B 76 00
 RO15:6197 71 AD 63 6B 76 00
 RO15:619D 70 62 6B 76 00
 RO15:61A2 94 AD 8D 6C AE 63 76 00
 RO15:61AA 6C AE 63 6C AE 63 76 00
 RO15:61B2 71 AD 63 94 AE 63 76 00
 RO15:61BA 70 62 6C AE 63 76 00
 RO15:61C1 91 8D 6D 62 76 00

 RO15:61C7 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO15:61CA CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO15:61CD CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO15:61D0 EF 10 A8 68                          // Sets up basic covered graphics values
 RO15:61D4 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO15:61D8 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO15:61DB AF               xor  a
 RO15:61DC E0 95            ld   (ff00+95),a
 RO15:61DE E0 96            ld   (ff00+96),a
 RO15:61E0 E0 97            ld   (ff00+97),a
 RO15:61E2 E0 98            ld   (ff00+98),a
 RO15:61E4 CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO15:61E7 3E 00            ld   a,00
 RO15:61E9 E0 83            ld   (ff00+83),a
 RO15:61EB E0 4F            ld   (ff00+4F),a
 RO15:61ED 3E 70            ld   a,70
 RO15:61EF EF 15 91 66                          // VRA1:($9630~$96FF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO15:61F3 F0 83            ld   a,(ff00+83)
 RO15:61F5 F5               push af
 RO15:61F6 3E 01            ld   a,01
 RO15:61F8 E0 83            ld   (ff00+83),a
 RO15:61FA E0 4F            ld   (ff00+4F),a
 RO15:61FC 11 A1 65         ld   de,65A1        // "COMMANDER"
 RO15:61FF 21 E0 90         ld   hl,90E0
 RO15:6202 01 50 05         ld   bc,0550
 RO15:6205 EF 14 50 3B                          // VRA1:($90E0~$962F) = $14:($65A1~$6AF0)
 RO15:6209 F1               pop  af
 RO15:620A E0 83            ld   (ff00+83),a
 RO15:620C E0 4F            ld   (ff00+4F),a
 RO15:620E 3E 00            ld   a,00
 RO15:6210 06 08            ld   b,08
 RO15:6212 21 61 65         ld   hl,6561        // Player Promotion message graphics palettes
 RO15:6215 0E 14            ld   c,14
 RO15:6217 CD D9 06         call 06D9           // ($C4E0) to ($C51F) hold $14:($6561) to $14:($65A0)
 RO15:621A CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO15:621D CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO15:6220 3E 0A            ld   a,0A
 RO15:6222 01 01 02         ld   bc,0201
 RO15:6225 11 02 10         ld   de,1002
 RO15:6228 26 0F            ld   h,0F
 RO15:622A EF 15 FD 67                          // (VRA0:$9800 2~17,1~2) = 15~46, (VRA1:$9800 2~17,1~2) = 10
 RO15:622E 01 04 01         ld   bc,0104
 RO15:6231 11 04 12         ld   de,1204
 RO15:6234 EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO15:6238 01 09 01         ld   bc,0109
 RO15:623B 11 08 12         ld   de,1208
 RO15:623E EF 22 47 62                          // Basic setup for table rectangle BC, size DE including defaulted palette for interior's tiles
 RO15:6242 EF 14 30 5D                          // Establishes Player Rank Graphics basics
 RO15:6246 CD FC 60         call 60FC           // Establishes Old Player Rank graphics
 RO15:6249 F0 83            ld   a,(ff00+83)
 RO15:624B F5               push af
 RO15:624C 3E 00            ld   a,00
 RO15:624E E0 83            ld   (ff00+83),a
 RO15:6250 E0 4F            ld   (ff00+4F),a
 RO15:6252 01 0C 08         ld   bc,080C
 RO15:6255 11 02 02         ld   de,0202
 RO15:6258 AF               xor  a
 RO15:6259 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO15:625D 3E 01            ld   a,01
 RO15:625F E0 83            ld   (ff00+83),a
 RO15:6261 E0 4F            ld   (ff00+4F),a
 RO15:6263 01 0C 08         ld   bc,080C
 RO15:6266 11 02 02         ld   de,0202
 RO15:6269 AF               xor  a
 RO15:626A EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO15:626E F1               pop  af
 RO15:626F E0 83            ld   (ff00+83),a
 RO15:6271 E0 4F            ld   (ff00+4F),a
 RO15:6273 21 95 62         ld   hl,6295        // Player Promotion message
 RO15:6276 01 0A 02         ld   bc,020A
 RO15:6279 CD 38 2B         call 2B38           // VRA0[$9800] 1024 byte string holds dialogue (BC is starting coordinates, HL is dialogue pointer)
 RO15:627C CD 42 61         call 6142           // Establishes New Player Rank text
 RO15:627F 11 7E C6         ld   de,C67E
 RO15:6282 21 5E DC         ld   hl,DC5E        // Player Name
 RO15:6285 01 07 00         ld   bc,0007
 RO15:6288 CD 50 3B         call 3B50           // ($DC5E~$DC64) = ($C67E~$C684)
 RO15:628B 01 06 02         ld   bc,0206
 RO15:628E 21 5E DC         ld   hl,DC5E        // Player Name
 RO15:6291 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:6294 C9               ret  

 RO15:6295 6A 79 6E 8D 6E 8D 9B 79 6E 62 66 76 86 88 01
 RO15:62A4 67 9B 8D 60 01
 RO15:62A9 6C AE 63 6C 8D 6D 89 2E 01 01        // "By this war result, you are (Rank) by promotion."
 RO15:62B3 6A 8D 92 79 66 72 84 68 76 01
 RO15:62BD 67 70 62 6D 89 2E 00                 // "Future effort is promising."

 RO15:62C4 E5               push hl
 RO15:62C5 21 00 00         ld   hl,0000
 RO15:62C8 E5               push hl             // Loop begins here
 RO15:62C9 D5               push de
 RO15:62CA C5               push bc
 RO15:62CB CD A2 05         call 05A2           // Button update, next frame
 RO15:62CE CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:62D1 3E 70            ld   a,70           // Result: Tile $67
 RO15:62D3 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:62D7 C1               pop  bc
 RO15:62D8 D1               pop  de
 RO15:62D9 E1               pop  hl
 RO15:62DA CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO15:62DD 28 0D            jr   z,62EC         // End after frame count indicated by DE
 RO15:62DF F0 95            ld   a,(ff00+95)
 RO15:62E1 80               add  b
 RO15:62E2 E0 95            ld   (ff00+95),a
 RO15:62E4 F0 96            ld   a,(ff00+96)
 RO15:62E6 81               add  c
 RO15:62E7 E0 96            ld   (ff00+96),a
 RO15:62E9 23               inc  hl
 RO15:62EA 18 DC            jr   62C8
 RO15:62EC E1               pop  hl
 RO15:62ED C9               ret                 // Window Shift according to B,C for DE frames
 RO15:62EE AF               xor  a
 RO15:62EF EA 65 DC         ld   (DC65),a
 RO15:62F2 EA 66 DC         ld   (DC66),a
 RO15:62F5 E5               push hl
 RO15:62F6 21 00 00         ld   hl,0000
 RO15:62F9 E5               push hl             // Loop begins here
 RO15:62FA D5               push de
 RO15:62FB C5               push bc
 RO15:62FC CD A2 05         call 05A2           // Button update, next frame
 RO15:62FF CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:6302 3E 70            ld   a,70           // Result: Tile $67
 RO15:6304 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:6308 FA 66 DC         ld   a,(DC66)
 RO15:630B FE 0A            cp   a,0A
 RO15:630D 20 24            jr   nz,6333        // Shifts every 10 frames
 RO15:630F FA 65 DC         ld   a,(DC65)
 RO15:6312 FE 00            cp   a,00
 RO15:6314 28 02            jr   z,6318
 RO15:6316 18 0E            jr   6326
 RO15:6318 AF               xor  a              // Old Rank is displayed branch
 RO15:6319 EA 66 DC         ld   (DC66),a
 RO15:631C CD 1F 61         call 611F           // Establishes New Player Rank graphics
 RO15:631F 3E 01            ld   a,01
 RO15:6321 EA 65 DC         ld   (DC65),a
 RO15:6324 18 11            jr   6337
 RO15:6326 AF               xor  a              // New Rank is displayed branch
 RO15:6327 EA 66 DC         ld   (DC66),a
 RO15:632A CD FC 60         call 60FC           // Establishes Old Player Rank graphics
 RO15:632D AF               xor  a
 RO15:632E EA 65 DC         ld   (DC65),a
 RO15:6331 18 04            jr   6337
 RO15:6333 3C               inc  a
 RO15:6334 EA 66 DC         ld   (DC66),a
 RO15:6337 C1               pop  bc
 RO15:6338 D1               pop  de
 RO15:6339 E1               pop  hl
 RO15:633A CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO15:633D 28 03            jr   z,6342         // End after frame count indicated by DE
 RO15:633F 23               inc  hl
 RO15:6340 18 B7            jr   62F9
 RO15:6342 E1               pop  hl
 RO15:6343 C9               ret                 // Switch between Player Ranks displays for DE frames
 RO15:6344 F0 82            ld   a,(ff00+82)
 RO15:6346 F5               push af
 RO15:6347 3E 04            ld   a,04
 RO15:6349 E0 82            ld   (ff00+82),a
 RO15:634B E0 70            ld   (ff00+70),a    // WRA4
 RO15:634D 78               ld   a,b            // Old Rank
 RO15:634E EA 5C DC         ld   (DC5C),a
 RO15:6351 79               ld   a,c            // New Rank
 RO15:6352 EA 5D DC         ld   (DC5D),a
 RO15:6355 CD C7 61         call 61C7           // Establishes Player Rank Promotion basic graphics
 RO15:6358 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO15:635B 11 1E 00         ld   de,001E
 RO15:635E 01 00 00         ld   bc,0000
 RO15:6361 CD C4 62         call 62C4           // Window Shift of 0,0 for 30 frames
 RO15:6364 11 78 00         ld   de,0078
 RO15:6367 CD EE 62         call 62EE           // Switch between Player Ranks displays for DE frames
 RO15:636A CD 1F 61         call 611F           // Establishes New Player Rank graphics
 RO15:636D CD A2 05         call 05A2           // Button update, next frame
 RO15:6370 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:6373 3E 70            ld   a,70
 RO15:6375 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:6379 F0 92            ld   a,(ff00+92)
 RO15:637B CB 47            bit  0,a            // A
 RO15:637D 28 07            jr   z,6386         // Standby for pressing A Button
 RO15:637F 3E 02            ld   a,02
 RO15:6381 CD 44 38         call 3844
 RO15:6384 18 02            jr   6388           // Ends once A is pressed
 RO15:6386 18 E5            jr   636D
 RO15:6388 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:638B F1               pop  af
 RO15:638C E0 82            ld   (ff00+82),a
 RO15:638E E0 70            ld   (ff00+70),a
 RO15:6390 C9               ret                 // Player Rank Promotion management
 RO15:6391 E5               push hl
 RO15:6392 21 00 00         ld   hl,0000
 RO15:6395 E5               push hl             // Loop begins here
 RO15:6396 D5               push de
 RO15:6397 C5               push bc
 RO15:6398 CD A2 05         call 05A2           // Button update, next frame
 RO15:639B CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:639E 3E 40            ld   a,40
 RO15:63A0 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:63A4 C1               pop  bc
 RO15:63A5 D1               pop  de
 RO15:63A6 E1               pop  hl
 RO15:63A7 CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO15:63AA 28 03            jr   z,63AF
 RO15:63AC 23               inc  hl
 RO15:63AD 18 E6            jr   6395
 RO15:63AF E1               pop  hl
 RO15:63B0 C9               ret                 // Stationary menu update for DE frames
 RO15:63B1 AF               xor  a
 RO15:63B2 EA 65 DC         ld   (DC65),a
 RO15:63B5 EA 66 DC         ld   (DC66),a
 RO15:63B8 E5               push hl
 RO15:63B9 21 00 00         ld   hl,0000
 RO15:63BC E5               push hl             // Loop begins here
 RO15:63BD D5               push de
 RO15:63BE C5               push bc
 RO15:63BF CD A2 05         call 05A2           // Button update, next frame
 RO15:63C2 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:63C5 3E 40            ld   a,40
 RO15:63C7 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:63CB FA 66 DC         ld   a,(DC66)
 RO15:63CE FE 06            cp   a,06
 RO15:63D0 20 41            jr   nz,6413        // Jump to Timer Increment if not at 6 frames
 RO15:63D2 FA 65 DC         ld   a,(DC65)       // Display toggle
 RO15:63D5 FE 00            cp   a,00
 RO15:63D7 28 02            jr   z,63DB
 RO15:63D9 18 1E            jr   63F9
 RO15:63DB AF               xor  a
 RO15:63DC EA 66 DC         ld   (DC66),a       // Reset timer
 RO15:63DF FA 67 DC         ld   a,(DC67)       // Medal #
 RO15:63E2 3C               inc  a
 RO15:63E3 EF 14 79 5B                          // BC holds Medal (A - 1)'s coordinates
 RO15:63E7 11 03 02         ld   de,0203
 RO15:63EA FA 67 DC         ld   a,(DC67)       // Medal #
 RO15:63ED 3C               inc  a
 RO15:63EE EF 14 5E 5E                          // Establishes Medal placements (A is Medal, BC is base coordinates, DE is size)
 RO15:63F2 3E 01            ld   a,01
 RO15:63F4 EA 65 DC         ld   (DC65),a
 RO15:63F7 18 1E            jr   6417
 RO15:63F9 AF               xor  a
 RO15:63FA EA 66 DC         ld   (DC66),a       // Reset timer
 RO15:63FD FA 67 DC         ld   a,(DC67)       // Medal #
 RO15:6400 3C               inc  a
 RO15:6401 EF 14 79 5B                          // BC holds Medal (A - 1)'s coordinates
 RO15:6405 11 03 02         ld   de,0203
 RO15:6408 AF               xor  a              // To empty the new Medal's slot momentarily
 RO15:6409 EF 14 5E 5E                          // Establishes Medal placements (A is Medal, BC is base coordinates, DE is size)
 RO15:640D AF               xor  a
 RO15:640E EA 65 DC         ld   (DC65),a
 RO15:6411 18 04            jr   6417
 RO15:6413 3C               inc  a
 RO15:6414 EA 66 DC         ld   (DC66),a
 RO15:6417 C1               pop  bc
 RO15:6418 D1               pop  de
 RO15:6419 E1               pop  hl
 RO15:641A CD CA 29         call 29CA           // Carry Flag active if DE < HL, A = 0 if DE = HL
 RO15:641D 28 03            jr   z,6422         // End immediately after DE frames
 RO15:641F 23               inc  hl
 RO15:6420 18 9A            jr   63BC
 RO15:6422 E1               pop  hl
 RO15:6423 C9               ret                 // Switch between new Medal display for DE frames
 RO15:6424 57               ld   d,a
 RO15:6425 F0 82            ld   a,(ff00+82)
 RO15:6427 F5               push af
 RO15:6428 3E 04            ld   a,04
 RO15:642A E0 82            ld   (ff00+82),a
 RO15:642C E0 70            ld   (ff00+70),a    // WRA4
 RO15:642E 7A               ld   a,d
 RO15:642F EA 67 DC         ld   (DC67),a
 RO15:6432 EF 14 FE 5B                          // Establishes Medals screen basic graphics
 RO15:6436 11 7E C6         ld   de,C67E
 RO15:6439 21 5E DC         ld   hl,DC5E        // Player Name
 RO15:643C 01 07 00         ld   bc,0007
 RO15:643F CD 50 3B         call 3B50           // ($DC5E~$DC64) = ($C67E~$C684)
 RO15:6442 01 24 02         ld   bc,0224
 RO15:6445 21 5E DC         ld   hl,DC5E        // Player Name
 RO15:6448 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:644B 21 C1 64         ld   hl,64C1        // Ownership particle
 RO15:644E CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:6451 FA 67 DC         ld   a,(DC67)       // Medal #
 RO15:6454 01 25 02         ld   bc,0225
 RO15:6457 EF 14 7A 5F                          // Sets up Medal Name
 RO15:645B 21 C5 64         ld   hl,64C5        // "..was awarded."
 RO15:645E CD 6E 33         call 336E           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text, with HRAM bytes updated as necessary
 RO15:6461 FA 67 DC         ld   a,(DC67)       // Medal #
 RO15:6464 FE 0C            cp   a,0C
 RO15:6466 38 04            jr   c,646C
 RO15:6468 3E 40            ld   a,40
 RO15:646A E0 96            ld   (ff00+96),a    // Shifts to 2nd half for Medals 13 to 24
 RO15:646C CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO15:646F 11 1E 00         ld   de,001E
 RO15:6472 01 00 00         ld   bc,0000
 RO15:6475 CD 91 63         call 6391           // Stationary menu update for DE frames
 RO15:6478 11 78 00         ld   de,0078
 RO15:647B 01 00 00         ld   bc,0000
 RO15:647E CD B1 63         call 63B1           // Switch between new Medal display for DE frames
 RO15:6481 FA 67 DC         ld   a,(DC67)       // Medal #
 RO15:6484 3C               inc  a
 RO15:6485 EF 14 79 5B                          // BC holds Medal (A - 1)'s coordinates
 RO15:6489 11 03 02         ld   de,0203
 RO15:648C FA 67 DC         ld   a,(DC67)       // Medal #
 RO15:648F 3C               inc  a
 RO15:6490 EF 14 5E 5E                          // Establishes Medal placements (A is Medal, BC is base coordinates, DE is size)
 RO15:6494 CD A2 05         call 05A2           // Button update, next frame
 RO15:6497 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:649A 3E 40            ld   a,40
 RO15:649C EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:64A0 F0 92            ld   a,(ff00+92)
 RO15:64A2 CB 47            bit  0,a            // A
 RO15:64A4 28 07            jr   z,64AD         // Standing by for A Button input
 RO15:64A6 3E 02            ld   a,02
 RO15:64A8 CD 44 38         call 3844
 RO15:64AB 18 02            jr   64AF
 RO15:64AD 18 E5            jr   6494
 RO15:64AF CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:64B2 EF 14 6D 5B                          // Resets STAT Interrupt
 RO15:64B6 AF               xor  a
 RO15:64B7 E0 95            ld   (ff00+95),a
 RO15:64B9 E0 96            ld   (ff00+96),a
 RO15:64BB F1               pop  af
 RO15:64BC E0 82            ld   (ff00+82),a
 RO15:64BE E0 70            ld   (ff00+70),a
 RO15:64C0 C9               ret                 // New Medal Obtained Screen management

 RO15:64C1 08 24
 RO15:64C3 76 00

 RO15:64C5 02 26
 RO15:64C7 8E 20 94 AD 86 6B 8A 70 21 00

 RO15:64D1 EF 25 D9 5D                          // Empties within WRA3: $D979, $D97A, $D97C, $DA40, and $D9CA~$D9CD
 RO15:64D5 EF 18 E0 65                          // Blanks all Unit List memory bytes
 RO15:64D9 EF 27 95 6B                          // Defaults Mode Choice to Beginner
 RO15:64DD EF 15 00 40                          // Blanks Configuration menu flags
 RO15:64E1 EF 13 FB 40                          // Empties WRA4($DC2A~$DC50)
 RO15:64E5 EF 18 C8 5B                          // Clears WRA4($DC52~DC5A) Even Inclusive Addresses and WRA4($DC2B)
 RO15:64E9 EF 31 FA 50                          // Clears WRA4($DB54~DB56)
 RO15:64ED EF 15 2C 71                          // Empties ($CCD4), ($CCD5), and ($CCD9)
 RO15:64F1 EF 26 9A 54                          // Clears WRA7($CBDF~CBE6) and WRA7 ($CC25~CC26)
 RO15:64F5 C9               ret                 // Clears various addresses to prepare the game
 RO15:64F6 01 0C 01         ld   bc,010C
 RO15:64F9 11 05 12         ld   de,1205
 RO15:64FC EF 10 FA 68                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics (BC is starting location, DE is size)
 RO15:6500 F0 83            ld   a,(ff00+83)
 RO15:6502 F5               push af
 RO15:6503 3E 01            ld   a,01
 RO15:6505 E0 83            ld   (ff00+83),a
 RO15:6507 E0 4F            ld   (ff00+4F),a
 RO15:6509 AF               xor  a
 RO15:650A 01 0D 02         ld   bc,020D
 RO15:650D 11 03 10         ld   de,1003
 RO15:6510 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO15:6514 F1               pop  af
 RO15:6515 E0 83            ld   (ff00+83),a
 RO15:6517 E0 4F            ld   (ff00+4F),a
 RO15:6519 21 8A 65         ld   hl,658A
 RO15:651C 01 0D 02         ld   bc,020D
 RO15:651F CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:6522 3E 01            ld   a,01
 RO15:6524 EA A9 CC         ld   (CCA9),a
 RO15:6527 01 0F 07         ld   bc,070F
 RO15:652A CD 64 66         call 6664           // Sets up "OK/NO" with "NO" highlighted at BC
 RO15:652D CD A2 05         call 05A2           // Button update, next frame
 RO15:6530 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:6533 3E 00            ld   a,00
 RO15:6535 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:6539 F0 92            ld   a,(ff00+92)
 RO15:653B CB 6F            bit  5,a            // Left
 RO15:653D 28 11            jr   z,6550
 RO15:653F 3E 01            ld   a,01
 RO15:6541 CD 44 38         call 3844
 RO15:6544 01 0F 07         ld   bc,070F
 RO15:6547 CD 37 66         call 6637           // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:654A AF               xor  a
 RO15:654B EA A9 CC         ld   (CCA9),a
 RO15:654E 18 31            jr   6581
 RO15:6550 CB 67            bit  4,a            // Right
 RO15:6552 28 12            jr   z,6566
 RO15:6554 3E 01            ld   a,01
 RO15:6556 CD 44 38         call 3844
 RO15:6559 01 0F 07         ld   bc,070F
 RO15:655C CD 64 66         call 6664           // Sets up "OK/NO" with "NO" highlighted at BC
 RO15:655F 3E 01            ld   a,01
 RO15:6561 EA A9 CC         ld   (CCA9),a
 RO15:6564 18 1B            jr   6581
 RO15:6566 CB 47            bit  0,a            // A
 RO15:6568 28 0A            jr   z,6574
 RO15:656A 3E 02            ld   a,02
 RO15:656C CD 44 38         call 3844
 RO15:656F FA A9 CC         ld   a,(CCA9)
 RO15:6572 18 0F            jr   6583
 RO15:6574 CB 4F            bit  1,a            // B
 RO15:6576 28 09            jr   z,6581
 RO15:6578 3E 02            ld   a,02
 RO15:657A CD 44 38         call 3844
 RO15:657D 3E FF            ld   a,FF
 RO15:657F 18 02            jr   6583
 RO15:6581 18 AA            jr   652D
 RO15:6583 F5               push af
 RO15:6584 EF 10 08 69                          // Restores last table of covered graphics
 RO15:6588 F1               pop  af
 RO15:6589 C9               ret  

 RO15:658A E1 2D D1 60               ld   h,b
 RO15:658E 20 6C AD 63               ld   h,e
 RO15:6592 88 AE 63               ld   h,e
 RO15:6595 6C 7F 6D 66 3F 00

 RO15:659B 01 0C 01         ld   bc,010C
 RO15:659E 11 05 12         ld   de,1205
 RO15:65A1 EF 10 FA 68                          // Sets up table of covered graphics within late WRA4 Bank, as well as defaulted table of graphics (BC is starting location, DE is size)
 RO15:65A5 F0 83            ld   a,(ff00+83)
 RO15:65A7 F5               push af
 RO15:65A8 3E 01            ld   a,01
 RO15:65AA E0 83            ld   (ff00+83),a
 RO15:65AC E0 4F            ld   (ff00+4F),a
 RO15:65AE AF               xor  a
 RO15:65AF 01 0D 02         ld   bc,020D
 RO15:65B2 11 03 10         ld   de,1003
 RO15:65B5 EF 15 D3 6A                          // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO15:65B9 F1               pop  af
 RO15:65BA E0 83            ld   (ff00+83),a
 RO15:65BC E0 4F            ld   (ff00+4F),a
 RO15:65BE 21 2E 66         ld   hl,662E        // "Save?"
 RO15:65C1 01 0D 02         ld   bc,020D
 RO15:65C4 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:65C7 AF               xor  a
 RO15:65C8 EA AA CC         ld   (CCAA),a
 RO15:65CB 01 0F 07         ld   bc,070F
 RO15:65CE CD 37 66         call 6637           // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:65D1 CD A2 05         call 05A2           // Button update, next frame
 RO15:65D4 CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:65D7 3E 00            ld   a,00
 RO15:65D9 EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:65DD F0 92            ld   a,(ff00+92)
 RO15:65DF CB 6F            bit  5,a            // Left
 RO15:65E1 28 11            jr   z,65F4
 RO15:65E3 3E 01            ld   a,01
 RO15:65E5 CD 44 38         call 3844
 RO15:65E8 01 0F 07         ld   bc,070F
 RO15:65EB CD 37 66         call 6637           // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:65EE AF               xor  a
 RO15:65EF EA AA CC         ld   (CCAA),a
 RO15:65F2 18 31            jr   6625
 RO15:65F4 CB 67            bit  4,a            // Right
 RO15:65F6 28 12            jr   z,660A
 RO15:65F8 3E 01            ld   a,01
 RO15:65FA CD 44 38         call 3844
 RO15:65FD 01 0F 07         ld   bc,070F
 RO15:6600 CD 64 66         call 6664           // Sets up "OK/NO" with "NO" highlighted at BC
 RO15:6603 3E 01            ld   a,01
 RO15:6605 EA AA CC         ld   (CCAA),a
 RO15:6608 18 1B            jr   6625
 RO15:660A CB 47            bit  0,a            // A
 RO15:660C 28 0A            jr   z,6618
 RO15:660E 3E 02            ld   a,02
 RO15:6610 CD 44 38         call 3844
 RO15:6613 FA AA CC         ld   a,(CCAA)
 RO15:6616 18 0F            jr   6627
 RO15:6618 CB 4F            bit  1,a            // B
 RO15:661A 28 09            jr   z,6625
 RO15:661C 3E 02            ld   a,02
 RO15:661E CD 44 38         call 3844
 RO15:6621 3E FF            ld   a,FF
 RO15:6623 18 02            jr   6627
 RO15:6625 18 AA            jr   65D1
 RO15:6627 F5               push af
 RO15:6628 EF 10 08 69                          // Restores last table of covered graphics
 RO15:662C F1               pop  af
 RO15:662D C9               ret  
 
 RO15:662E BE 2D EF 6C 7F 6D 66 3F 00

 RO15:6637 C5               push bc
 RO15:6638 3E 0F            ld   a,0F
 RO15:663A 11 01 02         ld   de,0201
 RO15:663D 26 FB            ld   h,FB
 RO15:663F EF 15 FD 67                          // (VRA0:$9800 B~(B+1),C) = 251~252, (VRA1:$9800 B~(B+1),C) = 15
 RO15:6643 C1               pop  bc
 RO15:6644 78               ld   a,b
 RO15:6645 C6 02            add  a,02
 RO15:6647 47               ld   b,a
 RO15:6648 C5               push bc
 RO15:6649 3E 08            ld   a,08
 RO15:664B 11 01 01         ld   de,0101
 RO15:664E 26 FD            ld   h,FD
 RO15:6650 EF 15 FD 67                          // (VRA0:$9800 (B+2),C) = 253, (VRA1:$9800 (B+2),C) = 8
 RO15:6654 C1               pop  bc
 RO15:6655 78               ld   a,b
 RO15:6656 3C               inc  a
 RO15:6657 47               ld   b,a
 RO15:6658 3E 08            ld   a,08
 RO15:665A 11 01 02         ld   de,0201
 RO15:665D 26 FE            ld   h,FE
 RO15:665F EF 15 FD 67                          // (VRA0:$9800 (B+3)~(B+4),C) = 254~255, (VRA1:$9800 (B+3)~(B+4),C) = 8
 RO15:6663 C9               ret                 // Sets up "OK/NO" with "OK" highlighted at BC
 RO15:6664 C5               push bc
 RO15:6665 3E 08            ld   a,08
 RO15:6667 11 01 02         ld   de,0201
 RO15:666A 26 FB            ld   h,FB
 RO15:666C EF 15 FD 67                          // (VRA0:$9800 B~(B+1),C) = 251~252, (VRA1:$9800 B~(B+1),C) = 8
 RO15:6670 C1               pop  bc
 RO15:6671 78               ld   a,b
 RO15:6672 C6 02            add  a,02
 RO15:6674 47               ld   b,a
 RO15:6675 C5               push bc
 RO15:6676 3E 08            ld   a,08
 RO15:6678 11 01 01         ld   de,0101
 RO15:667B 26 FD            ld   h,FD
 RO15:667D EF 15 FD 67                          // (VRA0:$9800 (B+2),C) = 253, (VRA1:$9800 (B+2),C) = 8
 RO15:6681 C1               pop  bc
 RO15:6682 78               ld   a,b
 RO15:6683 3C               inc  a
 RO15:6684 47               ld   b,a
 RO15:6685 3E 0F            ld   a,0F
 RO15:6687 11 01 02         ld   de,0201
 RO15:668A 26 FE            ld   h,FE
 RO15:668C EF 15 FD 67                          // (VRA0:$9800 (B+3)~(B+4),C) = 254~255, (VRA1:$9800 (B+3)~(B+4),C) = 15
 RO15:6690 C9               ret                 // Sets up "OK/NO" with "NO" highlighted at BC
 RO15:6691 EA A6 CC         ld   (CCA6),a
 RO15:6694 AF               xor  a
 RO15:6695 EA A4 CC         ld   (CCA4),a
 RO15:6698 EA A5 CC         ld   (CCA5),a
 RO15:669B F0 83            ld   a,(ff00+83)
 RO15:669D F5               push af
 RO15:669E 3E 01            ld   a,01
 RO15:66A0 E0 83            ld   (ff00+83),a
 RO15:66A2 E0 4F            ld   (ff00+4F),a    // VRA1
 RO15:66A4 FA A6 CC         ld   a,(CCA6)
 RO15:66A7 06 10            ld   b,10
 RO15:66A9 CD 95 29         call 2995           // HL = A * 16
 RO15:66AC 7C               ld   a,h
 RO15:66AD 47               ld   b,a
 RO15:66AE 7D               ld   a,l
 RO15:66AF 4F               ld   c,a            // BC = A * 16
 RO15:66B0 21 30 8F         ld   hl,8F30
 RO15:66B3 09               add  hl,bc          // HL = $8F30 + A * 16
 RO15:66B4 11 BA 6B         ld   de,6BBA
 RO15:66B7 01 D0 00         ld   bc,00D0
 RO15:66BA CD 50 3B         call 3B50           // VRA1:(($8F30 + A * 16)~($8FFF + A * 16)) = ($6BBA~$6C89) (main menu border/animated BG/"OK/NO" graphics)
 RO15:66BD F1               pop  af
 RO15:66BE E0 83            ld   (ff00+83),a
 RO15:66C0 E0 4F            ld   (ff00+4F),a
 RO15:66C2 3E 0A            ld   a,0A
 RO15:66C4 EF 10 E4 68                          // WRA4($DC6D) = 10 (VRA1, 3rd Palette)
 RO15:66C8 FA A6 CC         ld   a,(CCA6)
 RO15:66CB D6 0C            sub  a,0C
 RO15:66CD EF 10 CE 68                          // WRA4($DC6C) = A - 12 (Border)
 RO15:66D1 3E 00            ld   a,00
 RO15:66D3 06 08            ld   b,08
 RO15:66D5 21 8A 6C         ld   hl,6C8A
 RO15:66D8 CD BC 06         call 06BC           // ($C4E0) to ($C51F) hold ($6C8A) to ($6CC9)
 RO15:66DB CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO15:66DE CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO15:66E1 F0 83            ld   a,(ff00+83)
 RO15:66E3 F5               push af
 RO15:66E4 3E 00            ld   a,00
 RO15:66E6 E0 83            ld   (ff00+83),a
 RO15:66E8 E0 4F            ld   (ff00+4F),a
 RO15:66EA 21 00 98         ld   hl,9800
 RO15:66ED 01 00 04         ld   bc,0400
 RO15:66F0 FA A6 CC         ld   a,(CCA6)
 RO15:66F3 D6 09            sub  a,09
 RO15:66F5 CD 79 3B         call 3B79           // VRA0($9800 ~ $9BFF) = A - 9 (Mode Menus BG)
 RO15:66F8 3E 01            ld   a,01
 RO15:66FA E0 83            ld   (ff00+83),a
 RO15:66FC E0 4F            ld   (ff00+4F),a
 RO15:66FE 21 00 98         ld   hl,9800
 RO15:6701 01 00 04         ld   bc,0400
 RO15:6704 3E 0C            ld   a,0C
 RO15:6706 CD 79 3B         call 3B79           // VRA1($9800 ~ $9BFF) = 12 (VRA1, 5th Palette)
 RO15:6709 3E 00            ld   a,00
 RO15:670B E0 83            ld   (ff00+83),a
 RO15:670D E0 4F            ld   (ff00+4F),a
 RO15:670F 21 00 9C         ld   hl,9C00
 RO15:6712 01 00 04         ld   bc,0400
 RO15:6715 FA A6 CC         ld   a,(CCA6)
 RO15:6718 D6 09            sub  a,09
 RO15:671A CD 79 3B         call 3B79           // VRA0($9C00 ~ $9FFF) = A - 9
 RO15:671D 3E 01            ld   a,01
 RO15:671F E0 83            ld   (ff00+83),a
 RO15:6721 E0 4F            ld   (ff00+4F),a
 RO15:6723 21 00 9C         ld   hl,9C00
 RO15:6726 01 00 04         ld   bc,0400
 RO15:6729 3E 0C            ld   a,0C
 RO15:672B CD 79 3B         call 3B79           // VRA1($9C00 ~ $9FFF) = 12
 RO15:672E 3E 00            ld   a,00
 RO15:6730 E0 83            ld   (ff00+83),a
 RO15:6732 E0 4F            ld   (ff00+4F),a
 RO15:6734 3E 08            ld   a,08
 RO15:6736 06 04            ld   b,04
 RO15:6738 21 04 71         ld   hl,7104
 RO15:673B CD BC 06         call 06BC           // ($C520) to ($C55F) hold ($7104) to ($7123)
 RO15:673E CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO15:6741 11 24 70         ld   de,7024
 RO15:6744 21 00 80         ld   hl,8000
 RO15:6747 01 E0 00         ld   bc,00E0
 RO15:674A CD 50 3B         call 3B50           // VRA0:($8000~$80DF) = ($7024~$7103)
 RO15:674D F1               pop  af
 RO15:674E E0 83            ld   (ff00+83),a
 RO15:6750 E0 4F            ld   (ff00+4F),a
 RO15:6752 C9               ret                 // VRA1:(($8F30 + A * 16)~($8FFF + A * 16)) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO15:6753 F0 83            ld   a,(ff00+83)
 RO15:6755 F5               push af
 RO15:6756 3E 01            ld   a,01
 RO15:6758 E0 83            ld   (ff00+83),a
 RO15:675A E0 4F            ld   (ff00+4F),a
 RO15:675C 21 00 88         ld   hl,8800
 RO15:675F 11 BA 6B         ld   de,6BBA
 RO15:6762 01 D0 00         ld   bc,00D0
 RO15:6765 CD 50 3B         call 3B50           // VRA1:($8800~$88CF) = ($6BBA~$6C89) (main menu border/animated BG/"OK/NO" graphics)
 RO15:6768 F1               pop  af
 RO15:6769 E0 83            ld   (ff00+83),a
 RO15:676B E0 4F            ld   (ff00+4F),a
 RO15:676D 3E 09            ld   a,09
 RO15:676F EF 10 E4 68                          // WRA4($DC6D) = 9 (VRA1, 2nd Palette)
 RO15:6773 3E 81            ld   a,81
 RO15:6775 EF 10 CE 68                          // WRA4($DC6C) = 129 (Border)
 RO15:6779 3E 01            ld   a,01
 RO15:677B 06 01            ld   b,01
 RO15:677D 21 9A 6C         ld   hl,6C9A
 RO15:6780 CD BC 06         call 06BC           // ($C4E8) to ($C4EF) hold ($6C9A) to ($6CA1)
 RO15:6783 3E 00            ld   a,00
 RO15:6785 06 01            ld   b,01
 RO15:6787 21 8A 6C         ld   hl,6C8A
 RO15:678A CD BC 06         call 06BC           // ($C4E0) to ($C4E7) hold ($6C8A) to ($6C91)
 RO15:678D CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO15:6790 C9               ret                 // Establishes battle screen's border graphics basic information
 RO15:6791 EA A8 CC         ld   (CCA8),a
 RO15:6794 F0 83            ld   a,(ff00+83)
 RO15:6796 F5               push af
 RO15:6797 3E 01            ld   a,01
 RO15:6799 E0 83            ld   (ff00+83),a
 RO15:679B E0 4F            ld   (ff00+4F),a    // VRA1
 RO15:679D 7C               ld   a,h
 RO15:679E EA A6 CC         ld   (CCA6),a
 RO15:67A1 7D               ld   a,l
 RO15:67A2 EA A7 CC         ld   (CCA7),a
 RO15:67A5 FA A5 CC         ld   a,(CCA5)
 RO15:67A8 FE 04            cp   a,04
 RO15:67AA DA F0 67         jp   c,67F0         // If ($CCA5) < 4, end with ($CCA5) += 1, and ($CCA6~$CCA8) = H, L, A
 RO15:67AD AF               xor  a
 RO15:67AE EA A5 CC         ld   (CCA5),a       // ($CCA5) emptied
 RO15:67B1 FA A4 CC         ld   a,(CCA4)
 RO15:67B4 3C               inc  a
 RO15:67B5 EA A4 CC         ld   (CCA4),a
 RO15:67B8 FA A4 CC         ld   a,(CCA4)
 RO15:67BB FE 04            cp   a,04
 RO15:67BD DA C4 67         jp   c,67C4
 RO15:67C0 AF               xor  a
 RO15:67C1 EA A4 CC         ld   (CCA4),a       // ($CCA4) emptied unless it is less than 4
 RO15:67C4 FA A4 CC         ld   a,(CCA4)
 RO15:67C7 06 10            ld   b,10
 RO15:67C9 CD 95 29         call 2995           // HL = (0~3) * 16
 RO15:67CC 7C               ld   a,h
 RO15:67CD 47               ld   b,a
 RO15:67CE 7D               ld   a,l
 RO15:67CF 4F               ld   c,a            // BC = (0~3) * 16
 RO15:67D0 21 FA 6B         ld   hl,6BFA        // Location of diagonally shifting graphics on a main menu
 RO15:67D3 09               add  hl,bc          // HL = $6BFA + (0~3) * 16
 RO15:67D4 7C               ld   a,h
 RO15:67D5 57               ld   d,a
 RO15:67D6 7D               ld   a,l
 RO15:67D7 5F               ld   e,a            // DE = $6BFA + (0~3) * 16
 RO15:67D8 D5               push de
 RO15:67D9 FA A8 CC         ld   a,(CCA8)
 RO15:67DC 06 10            ld   b,10
 RO15:67DE CD 95 29         call 2995           // HL = A * 16
 RO15:67E1 7C               ld   a,h
 RO15:67E2 47               ld   b,a
 RO15:67E3 7D               ld   a,l
 RO15:67E4 4F               ld   c,a            // BC = A * 16
 RO15:67E5 21 70 8F         ld   hl,8F70
 RO15:67E8 09               add  hl,bc          // HL = $8F70 + A * 16
 RO15:67E9 D1               pop  de             // DE = $6BFA + (0~3) * 16
 RO15:67EA 01 10 00         ld   bc,0010
 RO15:67ED CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO15:67F0 FA A5 CC         ld   a,(CCA5)
 RO15:67F3 3C               inc  a
 RO15:67F4 EA A5 CC         ld   (CCA5),a
 RO15:67F7 F1               pop  af
 RO15:67F8 E0 83            ld   (ff00+83),a
 RO15:67FA E0 4F            ld   (ff00+4F),a
 RO15:67FC C9               ret                 // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu location graphics had been stored)
 RO15:67FD EA 5D CC         ld   (CC5D),a
 RO15:6800 78               ld   a,b
 RO15:6801 EA 52 CC         ld   (CC52),a
 RO15:6804 79               ld   a,c
 RO15:6805 EA 53 CC         ld   (CC53),a
 RO15:6808 AF               xor  a
 RO15:6809 EA 54 CC         ld   (CC54),a
 RO15:680C EA 55 CC         ld   (CC55),a
 RO15:680F 7A               ld   a,d
 RO15:6810 EA 56 CC         ld   (CC56),a
 RO15:6813 7B               ld   a,e
 RO15:6814 EA 57 CC         ld   (CC57),a       // B, C, 0, 0, D, E
 RO15:6817 7C               ld   a,h
 RO15:6818 EA 5E CC         ld   (CC5E),a       // A, H
 RO15:681B FA 57 CC         ld   a,(CC57)       // Loop begins here
 RO15:681E 4F               ld   c,a
 RO15:681F FA 55 CC         ld   a,(CC55)
 RO15:6822 B9               cp   c
 RO15:6823 D2 83 68         jp   nc,6883        // End when Y => E
 RO15:6826 FA 54 CC         ld   a,(CC54)       // Jumped to here while X < D
 RO15:6829 4F               ld   c,a
 RO15:682A FA 52 CC         ld   a,(CC52)
 RO15:682D 81               add  c
 RO15:682E 47               ld   b,a            // B = B + X
 RO15:682F FA 55 CC         ld   a,(CC55)
 RO15:6832 4F               ld   c,a
 RO15:6833 FA 53 CC         ld   a,(CC53)
 RO15:6836 81               add  c
 RO15:6837 4F               ld   c,a            // C = C + Y
 RO15:6838 CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO15:683B F0 83            ld   a,(ff00+83)
 RO15:683D F5               push af
 RO15:683E E5               push hl
 RO15:683F 3E 00            ld   a,00
 RO15:6841 E0 83            ld   (ff00+83),a
 RO15:6843 E0 4F            ld   (ff00+4F),a
 RO15:6845 FA 5E CC         ld   a,(CC5E)
 RO15:6848 CD 1C 0F         call 0F1C           // (VRA0:$9800 X~D,Y~E) = H + Used Tiles
 RO15:684B 3E 01            ld   a,01
 RO15:684D E0 83            ld   (ff00+83),a
 RO15:684F E0 4F            ld   (ff00+4F),a
 RO15:6851 E1               pop  hl
 RO15:6852 FA 5D CC         ld   a,(CC5D)
 RO15:6855 CD 1C 0F         call 0F1C           // (VRA1:$9800 X~D,Y~E) = A
 RO15:6858 F1               pop  af
 RO15:6859 E0 83            ld   (ff00+83),a
 RO15:685B E0 4F            ld   (ff00+4F),a
 RO15:685D FA 5E CC         ld   a,(CC5E)
 RO15:6860 3C               inc  a
 RO15:6861 EA 5E CC         ld   (CC5E),a
 RO15:6864 FA 54 CC         ld   a,(CC54)
 RO15:6867 3C               inc  a
 RO15:6868 EA 54 CC         ld   (CC54),a
 RO15:686B FA 56 CC         ld   a,(CC56)
 RO15:686E 4F               ld   c,a
 RO15:686F FA 54 CC         ld   a,(CC54)
 RO15:6872 B9               cp   c
 RO15:6873 DA 26 68         jp   c,6826
 RO15:6876 AF               xor  a
 RO15:6877 EA 54 CC         ld   (CC54),a
 RO15:687A FA 55 CC         ld   a,(CC55)
 RO15:687D 3C               inc  a
 RO15:687E EA 55 CC         ld   (CC55),a
 RO15:6881 18 98            jr   681B
 RO15:6883 C9               ret                 // (VRA0:$9800 X~D,Y~E) = H + Prior Tiles, (VRA1:$9800 X~D,Y~E) = A
 RO15:6884 CD 1C 0F         call 0F1C           // (HL) = A, increment HL
 RO15:6887 C9               ret  
 RO15:6888 EA AB CC         ld   (CCAB),a
 RO15:688B 78               ld   a,b
 RO15:688C EA AC CC         ld   (CCAC),a
 RO15:688F 79               ld   a,c
 RO15:6890 EA AD CC         ld   (CCAD),a
 RO15:6893 AF               xor  a
 RO15:6894 EA AE CC         ld   (CCAE),a
 RO15:6897 EA AF CC         ld   (CCAF),a
 RO15:689A 7A               ld   a,d
 RO15:689B EA B0 CC         ld   (CCB0),a
 RO15:689E 7B               ld   a,e
 RO15:689F EA B1 CC         ld   (CCB1),a
 RO15:68A2 7C               ld   a,h
 RO15:68A3 EA B2 CC         ld   (CCB2),a       // A, B, C, 0, 0, D, E, H
 RO15:68A6 FA B1 CC         ld   a,(CCB1)       // Loop begins here
 RO15:68A9 4F               ld   c,a            // C = E
 RO15:68AA FA AF CC         ld   a,(CCAF)
 RO15:68AD B9               cp   c
 RO15:68AE D2 00 69         jp   nc,6900        // End immediately when ($CCAF) = E
 RO15:68B1 FA AE CC         ld   a,(CCAE)       // Lesser loop begins here
 RO15:68B4 4F               ld   c,a
 RO15:68B5 FA AC CC         ld   a,(CCAC)       // A = B
 RO15:68B8 81               add  c              // A = X + B
 RO15:68B9 47               ld   b,a
 RO15:68BA FA AF CC         ld   a,(CCAF)
 RO15:68BD 4F               ld   c,a
 RO15:68BE FA AD CC         ld   a,(CCAD)       // A = C
 RO15:68C1 81               add  c              // A = Y + C
 RO15:68C2 4F               ld   c,a
 RO15:68C3 CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO15:68C6 F0 83            ld   a,(ff00+83)
 RO15:68C8 F5               push af
 RO15:68C9 3E 00            ld   a,00
 RO15:68CB E0 83            ld   (ff00+83),a
 RO15:68CD E0 4F            ld   (ff00+4F),a    // VRA0
 RO15:68CF FA B2 CC         ld   a,(CCB2)       // A = H
 RO15:68D2 CD 84 68         call 6884           // VRA0($9800 + B + C * 32) = H, increment HL
 RO15:68D5 F1               pop  af
 RO15:68D6 E0 83            ld   (ff00+83),a
 RO15:68D8 E0 4F            ld   (ff00+4F),a
 RO15:68DA FA B2 CC         ld   a,(CCB2)
 RO15:68DD 3C               inc  a
 RO15:68DE EA B2 CC         ld   (CCB2),a       // H is incremented
 RO15:68E1 FA AE CC         ld   a,(CCAE)
 RO15:68E4 3C               inc  a
 RO15:68E5 EA AE CC         ld   (CCAE),a       // X is incremented
 RO15:68E8 FA B0 CC         ld   a,(CCB0)
 RO15:68EB 4F               ld   c,a            // C = D
 RO15:68EC FA AE CC         ld   a,(CCAE)
 RO15:68EF B9               cp   c
 RO15:68F0 DA B1 68         jp   c,68B1         // Jumps if row is incomplete
 RO15:68F3 AF               xor  a
 RO15:68F4 EA AE CC         ld   (CCAE),a       // X = 0
 RO15:68F7 FA AF CC         ld   a,(CCAF)
 RO15:68FA 3C               inc  a
 RO15:68FB EA AF CC         ld   (CCAF),a       // Y is incremented
 RO15:68FE 18 A6            jr   68A6
 RO15:6900 C9               ret                 // VRA0 rectangle BC, size DC holds H + Prior tiles
 RO15:6901 EA 5D CC         ld   (CC5D),a       // Attributes
 RO15:6904 78               ld   a,b
 RO15:6905 EA 52 CC         ld   (CC52),a
 RO15:6908 79               ld   a,c
 RO15:6909 EA 53 CC         ld   (CC53),a       // Placement
 RO15:690C 7D               ld   a,l
 RO15:690D EA BA CC         ld   (CCBA),a       // Side
 RO15:6910 FE 00            cp   a,00
 RO15:6912 28 02            jr   z,6916
 RO15:6914 18 09            jr   691F
 RO15:6916 AF               xor  a
 RO15:6917 EA 54 CC         ld   (CC54),a
 RO15:691A EA 55 CC         ld   (CC55),a
 RO15:691D 18 09            jr   6928
 RO15:691F 7A               ld   a,d
 RO15:6920 3D               dec  a
 RO15:6921 EA 54 CC         ld   (CC54),a       // Maximum X - 1
 RO15:6924 AF               xor  a
 RO15:6925 EA 55 CC         ld   (CC55),a
 RO15:6928 7A               ld   a,d            // Meets back here
 RO15:6929 EA 56 CC         ld   (CC56),a
 RO15:692C 7B               ld   a,e
 RO15:692D EA 57 CC         ld   (CC57),a       // Dimensions
 RO15:6930 7C               ld   a,h
 RO15:6931 EA 5E CC         ld   (CC5E),a       // Starting Tile
 RO15:6934 FA 57 CC         ld   a,(CC57)       // Loop begins here
 RO15:6937 4F               ld   c,a
 RO15:6938 FA 55 CC         ld   a,(CC55)
 RO15:693B B9               cp   c
 RO15:693C D2 BD 69         jp   nc,69BD        // End immediately if Value E has been reached
 RO15:693F FA 54 CC         ld   a,(CC54)       // Mini-loop begins here
 RO15:6942 4F               ld   c,a
 RO15:6943 FA 52 CC         ld   a,(CC52)
 RO15:6946 81               add  c
 RO15:6947 47               ld   b,a            // B = X
 RO15:6948 FA 55 CC         ld   a,(CC55)
 RO15:694B 4F               ld   c,a
 RO15:694C FA 53 CC         ld   a,(CC53)
 RO15:694F 81               add  c
 RO15:6950 4F               ld   c,a            // C = Y
 RO15:6951 CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO15:6954 E5               push hl
 RO15:6955 3E 00            ld   a,00
 RO15:6957 E0 83            ld   (ff00+83),a
 RO15:6959 E0 4F            ld   (ff00+4F),a
 RO15:695B FA 5E CC         ld   a,(CC5E)       // Current Tile
 RO15:695E CD 1C 0F         call 0F1C           // (HL) = A, increment HL
 RO15:6961 3E 01            ld   a,01
 RO15:6963 E0 83            ld   (ff00+83),a
 RO15:6965 E0 4F            ld   (ff00+4F),a
 RO15:6967 E1               pop  hl
 RO15:6968 FA 5D CC         ld   a,(CC5D)       // Attributes
 RO15:696B CD 1C 0F         call 0F1C           // (HL) = A, increment HL
 RO15:696E FA 5E CC         ld   a,(CC5E)
 RO15:6971 3C               inc  a
 RO15:6972 EA 5E CC         ld   (CC5E),a       // Increments tile
 RO15:6975 FA BA CC         ld   a,(CCBA)       // Side
 RO15:6978 FE 00            cp   a,00
 RO15:697A 28 02            jr   z,697E
 RO15:697C 18 1F            jr   699D           // Branches for White Moon
 RO15:697E FA 54 CC         ld   a,(CC54)
 RO15:6981 3C               inc  a
 RO15:6982 EA 54 CC         ld   (CC54),a
 RO15:6985 FA 56 CC         ld   a,(CC56)
 RO15:6988 4F               ld   c,a
 RO15:6989 FA 54 CC         ld   a,(CC54)
 RO15:698C B9               cp   c
 RO15:698D DA 3F 69         jp   c,693F         // New cycle if row continues
 RO15:6990 AF               xor  a
 RO15:6991 EA 54 CC         ld   (CC54),a
 RO15:6994 FA 55 CC         ld   a,(CC55)
 RO15:6997 3C               inc  a
 RO15:6998 EA 55 CC         ld   (CC55),a
 RO15:699B 18 97            jr   6934           // New full cycle for next row; ends if last row was already handled
 RO15:699D FA 54 CC         ld   a,(CC54)       // Meets back here for White Moon
 RO15:69A0 3D               dec  a
 RO15:69A1 EA 54 CC         ld   (CC54),a       // Decrementing is done for Horizontal Flip
 RO15:69A4 FA 54 CC         ld   a,(CC54)
 RO15:69A7 FE FF            cp   a,FF
 RO15:69A9 C2 3F 69         jp   nz,693F        // New cycle if row continues
 RO15:69AC FA 56 CC         ld   a,(CC56)
 RO15:69AF 3D               dec  a
 RO15:69B0 EA 54 CC         ld   (CC54),a       // Maximum X - 1
 RO15:69B3 FA 55 CC         ld   a,(CC55)
 RO15:69B6 3C               inc  a
 RO15:69B7 EA 55 CC         ld   (CC55),a
 RO15:69BA C3 34 69         jp   6934           // New full cycle for next row; ends if last row was already handled
 RO15:69BD C9               ret                 // Rectangle BC, size DE has VRA1 tiles hold A and VRA0 hold H + Prior Tiles (L is Side)
 RO15:69BE 78               ld   a,b
 RO15:69BF EA BC CC         ld   (CCBC),a
 RO15:69C2 79               ld   a,c
 RO15:69C3 EA BD CC         ld   (CCBD),a
 RO15:69C6 7D               ld   a,l
 RO15:69C7 EA BA CC         ld   (CCBA),a
 RO15:69CA FE 00            cp   a,00
 RO15:69CC 28 02            jr   z,69D0
 RO15:69CE 18 09            jr   69D9
 RO15:69D0 AF               xor  a
 RO15:69D1 EA BE CC         ld   (CCBE),a
 RO15:69D4 EA BF CC         ld   (CCBF),a       // L, ?, B, C, 0, 0
 RO15:69D7 18 09            jr   69E2
 RO15:69D9 7A               ld   a,d
 RO15:69DA 3D               dec  a
 RO15:69DB EA BE CC         ld   (CCBE),a
 RO15:69DE AF               xor  a
 RO15:69DF EA BF CC         ld   (CCBF),a       // L, ?, B, C, D - 1, 0
 RO15:69E2 7A               ld   a,d            // Meets back here
 RO15:69E3 EA C0 CC         ld   (CCC0),a
 RO15:69E6 7B               ld   a,e
 RO15:69E7 EA C1 CC         ld   (CCC1),a
 RO15:69EA 7C               ld   a,h
 RO15:69EB EA BB CC         ld   (CCBB),a       // L, H, B, C, 0 or D - 1, 0, D, E
 RO15:69EE FA C1 CC         ld   a,(CCC1)       // Bigger loop begins here
 RO15:69F1 4F               ld   c,a
 RO15:69F2 FA BF CC         ld   a,(CCBF)
 RO15:69F5 B9               cp   c
 RO15:69F6 D2 69 6A         jp   nc,6A69
 RO15:69F9 FA BE CC         ld   a,(CCBE)       // Mini-loop begins here
 RO15:69FC 4F               ld   c,a
 RO15:69FD FA BC CC         ld   a,(CCBC)
 RO15:6A00 81               add  c
 RO15:6A01 47               ld   b,a            // B += X
 RO15:6A02 FA BF CC         ld   a,(CCBF)
 RO15:6A05 4F               ld   c,a
 RO15:6A06 FA BD CC         ld   a,(CCBD)
 RO15:6A09 81               add  c
 RO15:6A0A 4F               ld   c,a            // C += Y
 RO15:6A0B CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO15:6A0E 3E 00            ld   a,00
 RO15:6A10 E0 83            ld   (ff00+83),a
 RO15:6A12 E0 4F            ld   (ff00+4F),a
 RO15:6A14 FA BB CC         ld   a,(CCBB)
 RO15:6A17 CD 1C 0F         call 0F1C           // (HL) = A, increment HL
 RO15:6A1A FA BB CC         ld   a,(CCBB)
 RO15:6A1D 3C               inc  a
 RO15:6A1E EA BB CC         ld   (CCBB),a
 RO15:6A21 FA BA CC         ld   a,(CCBA)
 RO15:6A24 FE 00            cp   a,00
 RO15:6A26 28 02            jr   z,6A2A
 RO15:6A28 18 1F            jr   6A49           // Branches for White Moon side
 RO15:6A2A FA BE CC         ld   a,(CCBE)
 RO15:6A2D 3C               inc  a
 RO15:6A2E EA BE CC         ld   (CCBE),a
 RO15:6A31 FA C0 CC         ld   a,(CCC0)
 RO15:6A34 4F               ld   c,a
 RO15:6A35 FA BE CC         ld   a,(CCBE)
 RO15:6A38 B9               cp   c
 RO15:6A39 DA F9 69         jp   c,69F9         // Mini-loop for same row
 RO15:6A3C AF               xor  a
 RO15:6A3D EA BE CC         ld   (CCBE),a
 RO15:6A40 FA BF CC         ld   a,(CCBF)
 RO15:6A43 3C               inc  a
 RO15:6A44 EA BF CC         ld   (CCBF),a
 RO15:6A47 18 A5            jr   69EE
 RO15:6A49 FA BE CC         ld   a,(CCBE)
 RO15:6A4C 3D               dec  a
 RO15:6A4D EA BE CC         ld   (CCBE),a
 RO15:6A50 FA BE CC         ld   a,(CCBE)
 RO15:6A53 FE FF            cp   a,FF
 RO15:6A55 C2 F9 69         jp   nz,69F9         // Mini-loop for same row
 RO15:6A58 FA C0 CC         ld   a,(CCC0)
 RO15:6A5B 3D               dec  a
 RO15:6A5C EA BE CC         ld   (CCBE),a
 RO15:6A5F FA BF CC         ld   a,(CCBF)
 RO15:6A62 3C               inc  a
 RO15:6A63 EA BF CC         ld   (CCBF),a
 RO15:6A66 C3 EE 69         jp   69EE
 RO15:6A69 C9               ret                 // VRA0 rectangle BC, size DE set to H + Prior Tiles (L is horizontal flip flag)
 RO15:6A6A 78               ld   a,b
 RO15:6A6B EA B3 CC         ld   (CCB3),a
 RO15:6A6E 79               ld   a,c
 RO15:6A6F EA B4 CC         ld   (CCB4),a
 RO15:6A72 AF               xor  a
 RO15:6A73 EA B5 CC         ld   (CCB5),a
 RO15:6A76 EA B6 CC         ld   (CCB6),a
 RO15:6A79 7A               ld   a,d
 RO15:6A7A EA B7 CC         ld   (CCB7),a
 RO15:6A7D 7B               ld   a,e
 RO15:6A7E EA B8 CC         ld   (CCB8),a
 RO15:6A81 FA B7 CC         ld   a,(CCB7)
 RO15:6A84 FE 00            cp   a,00
 RO15:6A86 28 4A            jr   z,6AD2         // Ends immediately on X = 0
 RO15:6A88 FA B8 CC         ld   a,(CCB8)
 RO15:6A8B FE 00            cp   a,00
 RO15:6A8D 28 43            jr   z,6AD2         // Ends immediately on Y = 0
 RO15:6A8F FA B8 CC         ld   a,(CCB8)       // Loop for new row begins here
 RO15:6A92 4F               ld   c,a
 RO15:6A93 FA B6 CC         ld   a,(CCB6)
 RO15:6A96 B9               cp   c
 RO15:6A97 D2 D2 6A         jp   nc,6AD2        // Ends immediately if Y has been reached
 RO15:6A9A FA B5 CC         ld   a,(CCB5)       // Loop for new column begins here
 RO15:6A9D 4F               ld   c,a
 RO15:6A9E FA B3 CC         ld   a,(CCB3)
 RO15:6AA1 81               add  c
 RO15:6AA2 47               ld   b,a
 RO15:6AA3 FA B6 CC         ld   a,(CCB6)
 RO15:6AA6 4F               ld   c,a
 RO15:6AA7 FA B4 CC         ld   a,(CCB4)
 RO15:6AAA 81               add  c
 RO15:6AAB 4F               ld   c,a
 RO15:6AAC CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO15:6AAF AF               xor  a
 RO15:6AB0 CD 1C 0F         call 0F1C           // (HL) = A, increment HL
 RO15:6AB3 FA B5 CC         ld   a,(CCB5)
 RO15:6AB6 3C               inc  a
 RO15:6AB7 EA B5 CC         ld   (CCB5),a
 RO15:6ABA FA B7 CC         ld   a,(CCB7)
 RO15:6ABD 4F               ld   c,a
 RO15:6ABE FA B5 CC         ld   a,(CCB5)
 RO15:6AC1 B9               cp   c
 RO15:6AC2 DA 9A 6A         jp   c,6A9A
 RO15:6AC5 AF               xor  a
 RO15:6AC6 EA B5 CC         ld   (CCB5),a
 RO15:6AC9 FA B6 CC         ld   a,(CCB6)
 RO15:6ACC 3C               inc  a
 RO15:6ACD EA B6 CC         ld   (CCB6),a
 RO15:6AD0 18 BD            jr   6A8F
 RO15:6AD2 C9               ret                 // Empties rectangle BC, size DE in current VRAM bank
 RO15:6AD3 EA 5D CC         ld   (CC5D),a
 RO15:6AD6 78               ld   a,b
 RO15:6AD7 EA 52 CC         ld   (CC52),a
 RO15:6ADA 79               ld   a,c
 RO15:6ADB EA 53 CC         ld   (CC53),a
 RO15:6ADE AF               xor  a
 RO15:6ADF EA 54 CC         ld   (CC54),a
 RO15:6AE2 EA 55 CC         ld   (CC55),a
 RO15:6AE5 7A               ld   a,d
 RO15:6AE6 EA 56 CC         ld   (CC56),a
 RO15:6AE9 7B               ld   a,e
 RO15:6AEA EA 57 CC         ld   (CC57),a
 RO15:6AED FA 56 CC         ld   a,(CC56)
 RO15:6AF0 FE 00            cp   a,00
 RO15:6AF2 28 4C            jr   z,6B40
 RO15:6AF4 FA 57 CC         ld   a,(CC57)
 RO15:6AF7 FE 00            cp   a,00
 RO15:6AF9 28 45            jr   z,6B40
 RO15:6AFB FA 57 CC         ld   a,(CC57)       // Big loop begins here
 RO15:6AFE 4F               ld   c,a
 RO15:6AFF FA 55 CC         ld   a,(CC55)
 RO15:6B02 B9               cp   c
 RO15:6B03 D2 40 6B         jp   nc,6B40
 RO15:6B06 FA 54 CC         ld   a,(CC54)       // Loop begins here
 RO15:6B09 4F               ld   c,a
 RO15:6B0A FA 52 CC         ld   a,(CC52)
 RO15:6B0D 81               add  c
 RO15:6B0E 47               ld   b,a
 RO15:6B0F FA 55 CC         ld   a,(CC55)
 RO15:6B12 4F               ld   c,a
 RO15:6B13 FA 53 CC         ld   a,(CC53)
 RO15:6B16 81               add  c
 RO15:6B17 4F               ld   c,a
 RO15:6B18 CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO15:6B1B FA 5D CC         ld   a,(CC5D)
 RO15:6B1E CD 1C 0F         call 0F1C           // (HL) = A, increment HL
 RO15:6B21 FA 54 CC         ld   a,(CC54)
 RO15:6B24 3C               inc  a
 RO15:6B25 EA 54 CC         ld   (CC54),a
 RO15:6B28 FA 56 CC         ld   a,(CC56)
 RO15:6B2B 4F               ld   c,a
 RO15:6B2C FA 54 CC         ld   a,(CC54)
 RO15:6B2F B9               cp   c
 RO15:6B30 DA 06 6B         jp   c,6B06
 RO15:6B33 AF               xor  a
 RO15:6B34 EA 54 CC         ld   (CC54),a
 RO15:6B37 FA 55 CC         ld   a,(CC55)
 RO15:6B3A 3C               inc  a
 RO15:6B3B EA 55 CC         ld   (CC55),a
 RO15:6B3E 18 BB            jr   6AFB
 RO15:6B40 C9               ret                 // Sets current VRAM Bank map tiles in rectangle BC, size DE, to A
 RO15:6B41 F0 83            ld   a,(ff00+83)
 RO15:6B43 F5               push af
 RO15:6B44 3E 01            ld   a,01
 RO15:6B46 E0 83            ld   (ff00+83),a
 RO15:6B48 E0 4F            ld   (ff00+4F),a
 RO15:6B4A 78               ld   a,b
 RO15:6B4B EA 52 CC         ld   (CC52),a
 RO15:6B4E 79               ld   a,c
 RO15:6B4F EA 53 CC         ld   (CC53),a
 RO15:6B52 AF               xor  a
 RO15:6B53 EA 54 CC         ld   (CC54),a
 RO15:6B56 EA 55 CC         ld   (CC55),a
 RO15:6B59 7A               ld   a,d
 RO15:6B5A EA 56 CC         ld   (CC56),a
 RO15:6B5D 7B               ld   a,e
 RO15:6B5E EA 57 CC         ld   (CC57),a
 RO15:6B61 FA 56 CC         ld   a,(CC56)
 RO15:6B64 FE 00            cp   a,00
 RO15:6B66 28 4C            jr   z,6BB4         // End immediately if D is 0
 RO15:6B68 FA 57 CC         ld   a,(CC57)
 RO15:6B6B FE 00            cp   a,00
 RO15:6B6D 28 45            jr   z,6BB4         // Ends immediately if E is 0
 RO15:6B6F FA 57 CC         ld   a,(CC57)       // Loop begins here
 RO15:6B72 4F               ld   c,a
 RO15:6B73 FA 55 CC         ld   a,(CC55)
 RO15:6B76 B9               cp   c
 RO15:6B77 D2 B4 6B         jp   nc,6BB4        // Ends immediately with Y = E
 RO15:6B7A FA 54 CC         ld   a,(CC54)       // Mini-loop begins here for given row
 RO15:6B7D 4F               ld   c,a
 RO15:6B7E FA 52 CC         ld   a,(CC52)
 RO15:6B81 81               add  c
 RO15:6B82 47               ld   b,a
 RO15:6B83 FA 55 CC         ld   a,(CC55)
 RO15:6B86 4F               ld   c,a
 RO15:6B87 FA 53 CC         ld   a,(CC53)
 RO15:6B8A 81               add  c
 RO15:6B8B 4F               ld   c,a
 RO15:6B8C CD D4 0E         call 0ED4           // HL = $9800 + B + C * 32
 RO15:6B8F 7E               ld   a,(hl)
 RO15:6B90 CB FF            set  7,a
 RO15:6B92 CD 1C 0F         call 0F1C           // (HL) = A, increment HL
 RO15:6B95 FA 54 CC         ld   a,(CC54)
 RO15:6B98 3C               inc  a
 RO15:6B99 EA 54 CC         ld   (CC54),a
 RO15:6B9C FA 56 CC         ld   a,(CC56)
 RO15:6B9F 4F               ld   c,a
 RO15:6BA0 FA 54 CC         ld   a,(CC54)
 RO15:6BA3 B9               cp   c
 RO15:6BA4 DA 7A 6B         jp   c,6B7A
 RO15:6BA7 AF               xor  a
 RO15:6BA8 EA 54 CC         ld   (CC54),a
 RO15:6BAB FA 55 CC         ld   a,(CC55)
 RO15:6BAE 3C               inc  a
 RO15:6BAF EA 55 CC         ld   (CC55),a
 RO15:6BB2 18 BB            jr   6B6F
 RO15:6BB4 F1               pop  af
 RO15:6BB5 E0 83            ld   (ff00+83),a
 RO15:6BB7 E0 4F            ld   (ff00+4F),a
 RO15:6BB9 C9               ret                 // Sets last bit in each byte in rectangle BC, size DE

 RO15:6BBA 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
 RO15:6BCA FF 00 FF 7F C0 7F DF 60 DF 60 DF 67 DC 64 DC 64
 RO15:6BDA FF 00 FF FF 00 FF FF 00 FF 00 FF FF 00 00 00 00
 RO15:6BEA DC 64 DC 64 DC 64 DC 64 DC 64 DC 64 DC 64 DC 64
 RO15:6BFA 0F FF 0F FF 0F FF 0F FF F0 FF F0 FF F0 FF F0 FF
 RO15:6C0A E1 FF 1E FF 1E FF 1E FF 1E FF E1 FF E1 FF E1 FF
 RO15:6C1A C3 FF C3 FF 3C FF 3C FF 3C FF 3C FF C3 FF C3 FF
 RO15:6C2A 87 FF 87 FF 87 FF 78 FF 78 FF 78 FF 78 FF 87 FF
 RO15:6C3A 00 FF 7E FF 66 FF 66 FF 66 FF 66 FF 7E FF 00 FF
 RO15:6C4A 00 FF 66 FF 6C FF 78 FF 78 FF 6C FF 66 FF 00 FF
 RO15:6C5A 00 FF 0C F3 0C F3 18 E7 18 E7 30 CF 30 CF 00 FF
 RO15:6C6A 00 FF 72 FF 72 FF 5A FF 5A FF 4E FF 4E FF 00 FF
 RO15:6C7A 00 FF 7E FF 66 FF 66 FF 66 FF 66 FF 7E FF 00 FF

 RO15:6C8A 00 00 00 69 FF 7F 40 72
 RO15:6C92 FF 7F B5 56 6B 2D 00 00
 RO15:6C9A FF 7F 6C 03 08 02 00 00
 RO15:6CA2 00 69 9F 00 FF 7F 00 00
 RO15:6CAA 10 42 6B 2D C6 18 00 00
 RO15:6CB2 9F 53 DF 02 74 01 00 00
 RO15:6CBA F0 63 C0 4A 60 25 00 00
 RO15:6CC2 1F 7C 1F 7C 00 00 FF 7F
-
 RO15:6CCA 02
 RO15:6CCB 00 FC 01 00
 RO15:6CCF F8 FC 00 00

 RO15:6CD3 02
 RO15:6CD4 02 FC 01 00
 RO15:6CD8 FA FC 00 00

 RO15:6CDC 02
 RO15:6CDD 04 FC 01 00
 RO15:6CE1 FC FC 00 00
-
 RO15:6CE5 04
 RO15:6CE6 00 00 03 20
 RO15:6CEA 00 F8 03 00
 RO15:6CEE F8 00 02 20
 RO15:6CF2 F8 F8 02 00

 RO15:6CF6 04
 RO15:6CF7 00 00 03 21
 RO15:6CFB 00 F8 03 01
 RO15:6CFF F8 00 02 21
 RO15:6D03 F8 F8 02 01

 RO15:6D07 04
 RO15:6D08 00 00 03 22
 RO15:6D0C 00 F8 03 02
 RO15:6D10 F8 00 02 22
 RO15:6D14 F8 F8 02 02

Pointing Down Arrow:
 RO15:6D18 04
 RO15:6D19 F8 00 03 60
 RO15:6D1D F8 F8 03 40
 RO15:6D21 00 00 02 60
 RO15:6D25 00 F8 02 40

 RO15:6D29 04
 RO15:6D2A F8 00 03 61
 RO15:6D2E F8 F8 03 41
 RO15:6D32 00 00 02 61 
 RO15:6D36 00 F8 02 41

 RO15:6D3A 04
 RO15:6D3B F8 00 03 62
 RO15:6D3F F8 F8 03 42
 RO15:6D43 00 00 02 62
 RO15:6D47 00 F8 02 42
-
 RO15:6D4B 02
 RO15:6D4C FC F8 05 00
 RO15:6D50 FC F0 04 00

 RO15:6D54 04
 RO15:6D55 FC FA 05 00
 RO15:6D59 FC F2 04 00
 RO15:6D5D FC FA 05 00
 RO15:6D61 FC F2 04 00

 RO15:6D65 04
 RO15:6D66 FC FC 05 00
 RO15:6D6A FC F4 04 00
 RO15:6D6E FC FC 05 00
 RO15:6D72 FC F4 04 00
-
 RO15:6D76 02
 RO15:6D77 FC 00 05 20
 RO15:6D7B FC 08 04 20

 RO15:6D7F 02
 RO15:6D80 FC FE 05 20
 RO15:6D84 FC 06 04 20

 RO15:6D88 02
 RO15:6D89 FC FC 05 20
 RO15:6D8D FC 04 04 20

Pointing Down Mini-Arrow:
 RO15:6D91 01
 RO15:6D92 FB FC 06 00

 RO15:6D96 01
 RO15:6D97 FB FC 06 01

 RO15:6D9B 01
 RO15:6D9C FB FC 06 02

-
 RO15:6DA0 01
 RO15:6DA1 FC FB 07 00

 RO15:6DA5 01
 RO15:6DA6 FC FB 07 01

 RO15:6DAA 01
 RO15:6DAB FC FB 07 02
-
 RO15:6DAF 04
 RO15:6DB0 00 00 09 40
 RO15:6DB4 00 F8 08 40
 RO15:6DB8 F8 00 09 00
 RO15:6DBC F8 F8 08 00

 RO15:6DC0 04
 RO15:6DC1 00 00 09 41
 RO15:6DC5 00 F8 08 41
 RO15:6DC9 F8 00 09 01
 RO15:6DCD F8 F8 08 01

 RO15:6DD1 04
 RO15:6DD2 00 00 09 42
 RO15:6DD6 00 F8 08 42
 RO15:6DDA F8 00 09 02
 RO15:6DDE F8 F8 08 02
-
 RO15:6DE2 01
 RO15:6DE3 FD FC 06 40

 RO15:6DE7 01
 RO15:6DE8 FD FC 06 41

 RO15:6DEC 01
 RO15:6DED FD FC 06 42
-
 RO15:6DF1 01
 RO15:6DF2 FC FD 07 20

 RO15:6DF6 01
 RO15:6DF7 FC FD 07 21

 RO15:6DFB 01
 RO15:6DFC FC FD 07 22
-
 RO15:6E00 08
 RO15:6E01 04 00 0B 60
 RO15:6E05 04 08 0A 60
 RO15:6E09 04 F8 0B 40
 RO15:6E0D 04 F0 0A 40
 RO15:6E11 F4 00 0B 20
 RO15:6E15 F4 08 0A 20
 RO15:6E19 F4 F8 0B 00
 RO15:6E1D F4 F0 0A 00

 RO15:6E21 08
 RO15:6E22 04 00 0B 61
 RO15:6E26 04 08 0A 61
 RO15:6E2A 04 F8 0B 41
 RO15:6E2E 04 F0 0A 41
 RO15:6E32 F4 00 0B 21
 RO15:6E36 F4 08 0A 21
 RO15:6E3A F4 F8 0B 01
 RO15:6E3E F4 F0 0A 01

 RO15:6E42 08
 RO15:6E43 04 00 0B 62
 RO15:6E47 04 08 0A 62
 RO15:6E4B 04 F8 0B 42
 RO15:6E4F 04 F0 0A 42
 RO15:6E53 F4 00 0B 22
 RO15:6E57 F4 08 0A 22
 RO15:6E5B F4 F8 0B 02
 RO15:6E5F F4 F0 0A 02
-
 RO15:6E63 04
 RO15:6E64 00 F8 09 60
 RO15:6E68 00 00 08 60
 RO15:6E6C F8 F8 09 20
 RO15:6E70 F8 00 08 20

 RO15:6E74 04
 RO15:6E75 00 F8 09 61
 RO15:6E79 00 00 08 61
 RO15:6E7D F8 F8 09 21
 RO15:6E81 F8 00 08 21

 RO15:6E85 04
 RO15:6E86 00 F8 09 62
 RO15:6E8A 00 00 08 62
 RO15:6E8E F8 F8 09 22
 RO15:6E92 F8 00 08 22
-
 RO15:6E96 04
 RO15:6E97 01 01 0A 60
 RO15:6E9B F7 01 0A 20
 RO15:6E9F 01 F7 0A 40
 RO15:6EA3 F7 F7 0A 00

 RO15:6EA7 04
 RO15:6EA8 01 01 0A 61
 RO15:6EAC F7 01 0A 21
 RO15:6EB0 01 F7 0A 41
 RO15:6EB4 F7 F7 0A 01

 RO15:6EB8 04
 RO15:6EB9 01 01 0A 64
 RO15:6EBD F7 01 0A 24
 RO15:6EC1 01 F7 0A 44
 RO15:6EC5 F7 F7 0A 04
-
 RO15:6EC9 0A
 RO15:6ECA F4 08 0D 40
 RO15:6ECE F4 00 0D 40
 RO15:6ED2 F4 F8 0D 40
 RO15:6ED6 F4 F0 0D 40
 RO15:6EDA 04 08 0D 00
 RO15:6EDE 04 00 0D 00
 RO15:6EE2 04 F8 0D 00
 RO15:6EE6 04 F0 0D 00
 RO15:6EEA FC 10 0C 20
 RO15:6EEE FC E8 0C 00

 RO15:6EF2 0A
 RO15:6EF3 F4 08 0D 41
 RO15:6EF7 F4 00 0D 41
 RO15:6EFB F4 F8 0D 41
 RO15:6EFF F4 F0 0D 41
 RO15:6F03 04 08 0D 01
 RO15:6F07 04 00 0D 01
 RO15:6F0B 04 F8 0D 01
 RO15:6F0F 04 F0 0D 01
 RO15:6F13 FC 10 0C 21
 RO15:6F17 FC E8 0C 01

 RO15:6F1B 0A
 RO15:6F1C F4 08 0D 44
 RO15:6F20 F4 00 0D 44
 RO15:6F24 F4 F8 0D 44
 RO15:6F28 F4 F0 0D 44
 RO15:6F2C 04 08 0D 04
 RO15:6F30 04 00 0D 04
 RO15:6F34 04 F8 0D 04
 RO15:6F38 04 F0 0D 04
 RO15:6F3C FC 10 0C 24
 RO15:6F40 FC E8 0C 04


 RO15:6F44 CA 6C 0C
 RO15:6F47 D3 6C 0C
 RO15:6F4A DC 6C 0C
 RO15:6F4D D3 6C 0C 00 00                       // Pointing Down Bullet
-
 RO15:6F52 E5 6C 0C
 RO15:6F55 F6 6C 0C
 RO15:6F58 E5 6C 0C
 RO15:6F5B 07 6D 0C 00 00                       // Pointing Up Arrow

 RO15:6F60 18 6D 0C
 RO15:6F63 29 6D 0C
 RO15:6F66 18 6D 0C
 RO15:6F69 3A 6D 0C 00 00                       // Pointing Down Arrow
-
 RO15:6F6E 4B 6D 0C
 RO15:6F71 54 6D 0C
 RO15:6F74 65 6D 0C
 RO15:6F77 54 6D 0C 00 00                       // Pointing Right Bullet
-
 RO15:6F7C 76 6D 0C
 RO15:6F7F 7F 6D 0C
 RO15:6F82 88 6D 0C
 RO15:6F85 7F 6D 0C 00 00                       // Pointing Left Bullet
-
 RO15:6F8A 91 6D 0C
 RO15:6F8D 96 6D 0C
 RO15:6F90 91 6D 0C
 RO15:6F93 9B 6D 0C 00 00                       // Pointing Down Mini-Arrow

 RO15:6F98 A0 6D 0C
 RO15:6F9B A5 6D 0C
 RO15:6F9E A0 6D 0C
 RO15:6FA1 AA 6D 0C 00 00                       // Pointing Right Mini-Arrow

 RO15:6FA6 AF 6D 0C
 RO15:6FA9 C0 6D 0C
 RO15:6FAC AF 6D 0C
 RO15:6FAF D1 6D 0C 00 00                       // Pointing Right Arrow
-
 RO15:6FB4 E2 6D 0C
 RO15:6FB7 E7 6D 0C
 RO15:6FBA E2 6D 0C
 RO15:6FBD EC 6D 0C 00 00                       // Pointing Up Mini-Arrow
-
 RO15:6FC2 F1 6D 0C
 RO15:6FC5 F6 6D 0C
 RO15:6FC8 F1 6D 0C
 RO15:6FCB FB 6D 0C 00 00                       // Pointing Left Mini-Arrow

 RO15:6FD0 00 6E 0C
 RO15:6FD3 21 6E 0C
 RO15:6FD6 00 6E 0C
 RO15:6FD9 42 6E 0C 00 00                       // Map Selection Cursor

 RO15:6FDE 63 6E 0C
 RO15:6FE1 74 6E 0C
 RO15:6FE4 63 6E 0C
 RO15:6FE7 85 6E 0C 00 00                       // Pointing Left Arrow

 RO15:6FEC A7 6E 0C
 RO15:6FEF B8 6E 0C
 RO15:6FF2 A7 6E 0C
 RO15:6FF5 96 6E 0C 00 00

 RO15:6FFA F2 6E 0C
 RO15:6FFD 1B 6F 0C
 RO15:7000 F2 6E 0C
 RO15:7003 C9 6E 0C 00 00

 RO15:7008 44 6F               ld   l,a
 RO15:700A 52 6F               ld   l,a
 RO15:700C 60 6F               ld   l,a
 RO15:700E 6E 6F               ld   l,a
 RO15:7010 7C 6F               ld   l,a
 RO15:7012 8A 6F               ld   l,a
 RO15:7014 98 6F               ld   l,a
 RO15:7016 A6 6F               ld   l,a
 RO15:7018 B4 6F               ld   l,a
 RO15:701A C2 6F
 RO15:701C D0 6F               ld   l,a
 RO15:701E DE 6F            sbc  a,6F
 RO15:7020 EC 6F               ld   l,a
 RO15:7022 FA 6F

 RO15:7024 FF FF BD C3 FF FF BD E7 FF FF BD C3 BD C3 BD C3
 RO15:7034 BD C3 BD C3 BD C3 7E 42 5A 66 42 7E 24 3C 18 18

 RO15:7044 00 00 00 00 01 01 01 01 03 02 03 02 07 04 07 04
 RO15:7054 0F 08 0F 08 1F 10 1F 10 3F 20 3F 20 3F 3F 00 00

 RO15:7064 FF FF A8 FF FF B8 FF A8 FF A8 FF B8 A8 FF FF FF
 RO15:7074 E0 E0 1C FC F2 0E F9 07 F9 07 F2 0E 1C FC E0 E0

 RO15:7084 00 00 00 00 00 00 FF FF 7E 42 3C 24 18 18 00 00

 RO15:7094 10 10 18 18 1C 14 1E 12 1E 12 1C 14 18 18 10 10

 RO15:70A4 00 00 00 00 70 70 7C 4C 7F 43 7F 40 7F 40 7F 40
 RO15:70B4 00 00 00 00 00 00 00 00 00 00 C0 C0 F0 30 FC 0C

 RO15:70C4 FF 00 80 00 80 00 80 00 80 00 80 00 80 00 80 00
 RO15:70D4 F0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

 RO15:70E4 01 00 01 00 01 00 01 00 01 00 01 00 01 00 01 00
 RO15:70F4 FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

 RO15:7104 9F 53 DF 02 74 01 00 00
 RO15:710C 00 00 1F 00 00 00 00 00
 RO15:7114 00 00 FF 5B 00 00 00 00
 RO15:711C DB 7E 00 00 6C 03 08 02

 RO15:7124 00         ld   (0002),sp
 RO15:7125 00               nop  
 RO15:7126 16 00            ld   d,00
 RO15:7128 00               nop  
 RO15:7129 00               nop  
 RO15:712A 00               nop  
 RO15:712B 00

 RO15:712C AF               xor  a
 RO15:712D EA D4 CC         ld   (CCD4),a
 RO15:7130 EA D5 CC         ld   (CCD5),a
 RO15:7133 EA D9 CC         ld   (CCD9),a
 RO15:7136 C9               ret                 // Empties ($CCD4), ($CCD5), and ($CCD9)
 RO15:7137 AF               xor  a
 RO15:7138 EA D7 CC         ld   (CCD7),a
 RO15:713B CD 13 74         call 7413           // Controls for Standard Mode Map Selection; end with A = 0 for A Button press on unlocked map, or -1 for B Button press
 RO15:713E FE FF            cp   a,FF
 RO15:7140 28 15            jr   z,7157         // Ends immediately on B Button press
 RO15:7142 EF 28 C1 40                          // Map preview, ending with A = -1 for B Button, or 0 for A Button; latter has BC as view selection center tile
 RO15:7146 FE FF            cp   a,FF
 RO15:7148 28 F1            jr   z,713B
 RO15:714A EF 0B 2F 7C                          // Establishes income values
 RO15:714E EF 27 AB 62                          // Controls for Map Intel screen; ends with A = 0 for A Button press, or -1 for B Button press
 RO15:7152 FE FF            cp   a,FF
 RO15:7154 28 EC            jr   z,7142         // Back to Map Preview for B Button press
 RO15:7156 AF               xor  a
 RO15:7157 C9               ret                 // Standard Mode Map Selection including Map Preview and Map Intel; A = 0 for full confirmation of choice, or -1 for full cancellation
 RO15:7158 CD F3 04         call 04F3           // Shuts off LCD Display if necessary
 RO15:715B CD CE 34         call 34CE           // Empty $FFC8 to $FFCB
 RO15:715E CD 7C 2D         call 2D7C           // Resets all Sprite-related data
 RO15:7161 EF 10 A8 68                          // Sets up basic covered graphics values
 RO15:7165 EF 01 00 40                          // Graphics holding: VRA0($9000) to VRA0($97FF) then VRA0($8800) to VRA0($8FFF) holds basic text
 RO15:7169 CD 18 06         call 0618           // Resets Palettes to absolute default Palettes
 RO15:716C CD 02 0F         call 0F02           // Empties ($9800) to ($9BFF) in both VRAM banks
 RO15:716F AF               xor  a
 RO15:7170 EA D0 CC         ld   (CCD0),a
 RO15:7173 E0 95            ld   (ff00+95),a
 RO15:7175 E0 96            ld   (ff00+96),a
 RO15:7177 E0 97            ld   (ff00+97),a
 RO15:7179 E0 98            ld   (ff00+98),a
 RO15:717B 3E 00            ld   a,00
 RO15:717D E0 83            ld   (ff00+83),a
 RO15:717F E0 4F            ld   (ff00+4F),a
 RO15:7181 3E 00            ld   a,00
 RO15:7183 EF 15 91 66                          // VRA1:($8F30~$8FFF) holds mode menu tile graphics basics; mode menu graphics basics established accordingly
 RO15:7187 3E 01            ld   a,01
 RO15:7189 E0 83            ld   (ff00+83),a
 RO15:718B E0 4F            ld   (ff00+4F),a
 RO15:718D 11 E2 76         ld   de,76E2        // MAN/IR COMM
 RO15:7190 21 00 90         ld   hl,9000
 RO15:7193 01 60 02         ld   bc,0260
 RO15:7196 CD 50 3B         call 3B50           // VRA1:($9000~$925F) = ($76E2~$7941)
 RO15:7199 3E 00            ld   a,00
 RO15:719B 06 08            ld   b,08
 RO15:719D 21 42 79         ld   hl,7942
 RO15:71A0 0E 15            ld   c,15
 RO15:71A2 CD D9 06         call 06D9           // ($C4E0) to ($C51F) hold ($7942) to ($7981)
 RO15:71A5 CD AF 06         call 06AF           // ($C4E0) 8 byte set to 00 00 00 69 FF 7F 40 72
 RO15:71A8 CD F2 06         call 06F2           // Both BG and Sprite Palette tables are updated
 RO15:71AB F0 83            ld   a,(ff00+83)
 RO15:71AD F5               push af
 RO15:71AE 3E 01            ld   a,01
 RO15:71B0 E0 83            ld   (ff00+83),a
 RO15:71B2 E0 4F            ld   (ff00+4F),a
 RO15:71B4 11 7B 51         ld   de,517B        // "STANDARD"
 RO15:71B7 21 60 92         ld   hl,9260
 RO15:71BA 01 40 01         ld   bc,0140
 RO15:71BD CD 50 3B         call 3B50           // VRA1:($9260~$939F) = ($517B~$52BA)
 RO15:71C0 11 D7 77         ld   de,77D7
 RO15:71C3 21 A0 93         ld   hl,93A0
 RO15:71C6 01 40 00         ld   bc,0040
 RO15:71C9 EF 27 50 3B                          // VRA1:($93A0~$93DF) = $27:($77D7~$7816) (Country icons)
 RO15:71CD 11 97 76         ld   de,7697
 RO15:71D0 21 E0 93         ld   hl,93E0
 RO15:71D3 01 10 00         ld   bc,0010
 RO15:71D6 EF 27 50 3B                          // VRA1:($93E0~$93EF) = $27:($7697~$76A6) ("Day" Kanji)
 RO15:71DA F1               pop  af
 RO15:71DB E0 83            ld   (ff00+83),a
 RO15:71DD E0 4F            ld   (ff00+4F),a
 RO15:71DF 3E 0A            ld   a,0A
 RO15:71E1 01 01 05         ld   bc,0501
 RO15:71E4 11 02 0A         ld   de,0A02
 RO15:71E7 26 26            ld   h,26           // "STANDARD"
 RO15:71E9 EF 15 FD 67                          // (VRA0:$9800 5~14,1~2) = 38~57, (VRA1:$9800 5~14,1~2) = 10
 RO15:71ED 3E 0A            ld   a,0A
 RO15:71EF 01 11 0D         ld   bc,0D11
 RO15:71F2 11 01 01         ld   de,0101
 RO15:71F5 26 21            ld   h,21           // "B"
 RO15:71F7 EF 15 FD 67                          // (VRA0:$9800 13,17) = 33, (VRA1:$9800 13,17) = 10
 RO15:71FB 3E 08            ld   a,08
 RO15:71FD 01 11 0E         ld   bc,0E11
 RO15:7200 11 01 03         ld   de,0301
 RO15:7203 26 22            ld   h,22           // "Back"
 RO15:7205 EF 15 FD 67                          // (VRA0:$9800 14~16,17) = 34~36, (VRA1:$9800 14~16,17) = 8
 RO15:7209 01 04 02         ld   bc,0204
 RO15:720C 11 0D 10         ld   de,100D        // 2~17,4~16
 RO15:720F EF 10 09 6A                          // Tile placement and coloring handled for [$9800 + B + C * 32] table size indicated by DE using [$DC6C] and [$DC6D] as the base
 RO15:7213 F0 83            ld   a,(ff00+83)
 RO15:7215 F5               push af
 RO15:7216 3E 01            ld   a,01
 RO15:7218 E0 83            ld   (ff00+83),a
 RO15:721A E0 4F            ld   (ff00+4F),a
 RO15:721C 01 05 03         ld   bc,0305
 RO15:721F 11 0B 0E         ld   de,0E0B
 RO15:7222 AF               xor  a
 RO15:7223 EF 15 D3 6A                          // Empties VRA1 map tiles in rectangle 3~16,5~15
 RO15:7227 F1               pop  af
 RO15:7228 E0 83            ld   (ff00+83),a
 RO15:722A E0 4F            ld   (ff00+4F),a
 RO15:722C 3E 20            ld   a,20
 RO15:722E 0E 00            ld   c,00
 RO15:7230 06 15            ld   b,15
 RO15:7232 11 6E 6F         ld   de,6F6E        // Pointing Right Bullet
 RO15:7235 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:7238 EA D0 CC         ld   (CCD0),a
 RO15:723B 3E 20            ld   a,20
 RO15:723D 0E 00            ld   c,00
 RO15:723F 06 15            ld   b,15
 RO15:7241 11 B4 6F         ld   de,6FB4        // Pointing Up Mini-Arrow
 RO15:7244 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:7247 01 32 58         ld   bc,5832        // 80,34
 RO15:724A CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:724D 3E 20            ld   a,20
 RO15:724F 0E 00            ld   c,00
 RO15:7251 06 15            ld   b,15
 RO15:7253 11 8A 6F         ld   de,6F8A        // Pointing Down Mini-Arrow
 RO15:7256 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:7259 01 96 58         ld   bc,5896        // 80,134
 RO15:725C CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:725F CD 5D 73         call 735D           // Carry Flag Set by White Moon side maps unlocked
 RO15:7262 38 02            jr   c,7266
 RO15:7264 18 24            jr   728A           // Won't established Pointing Right/Left Mini-Arrows if locked
 RO15:7266 3E 20            ld   a,20
 RO15:7268 0E 00            ld   c,00
 RO15:726A 06 15            ld   b,15
 RO15:726C 11 98 6F         ld   de,6F98        // Pointing Right Mini-Arrow
 RO15:726F CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:7272 01 63 96         ld   bc,9663        // 142,83
 RO15:7275 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:7278 3E 20            ld   a,20
 RO15:727A 0E 00            ld   c,00
 RO15:727C 06 15            ld   b,15
 RO15:727E 11 C2 6F         ld   de,6FC2        // Pointing Left Mini-Arrow
 RO15:7281 CD E8 2D         call 2DE8           // A = number of already active sprites; $Dxx5~$DxxB prepared (B is ROM Block of Sprite, C is base Character Tile # / 2 with bit 7 determining VRAM Bank; and DE is pointer to sprite stats modification tables pointers)
 RO15:7284 01 63 1A         ld   bc,1A63        // 18,83
 RO15:7287 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:728A CD F4 74         call 74F4           // Establishes location of bullet pointing highlighted option on map choice of Standard Mode
 RO15:728D C9               ret                 // Establishes graphics of Standard Mode Map Selection
 RO15:728E 3E 01            ld   a,01
 RO15:7290 CD 44 38         call 3844
 RO15:7293 FA D4 CC         ld   a,(CCD4)
 RO15:7296 3D               dec  a
 RO15:7297 FE FF            cp   a,FF
 RO15:7299 28 05            jr   z,72A0
 RO15:729B EA D4 CC         ld   (CCD4),a
 RO15:729E 18 1F            jr   72BF           // Simple ending of bullet pointing location change if no need to shift choice printing
 RO15:72A0 FA D5 CC         ld   a,(CCD5)
 RO15:72A3 3D               dec  a
 RO15:72A4 F5               push af
 RO15:72A5 FA D7 CC         ld   a,(CCD7)       // Base skipped map choices
 RO15:72A8 4F               ld   c,a
 RO15:72A9 0D               dec  c              // C = 29 or -1
 RO15:72AA F1               pop  af
 RO15:72AB B9               cp   c
 RO15:72AC 28 08            jr   z,72B6         // Handles rotation
 RO15:72AE EA D5 CC         ld   (CCD5),a
 RO15:72B1 CD 09 75         call 7509           // Prints text for on-screen choices on map selection on Standard Mode
 RO15:72B4 18 09            jr   72BF
 RO15:72B6 FA D8 CC         ld   a,(CCD8)       // Last map option
 RO15:72B9 EA D5 CC         ld   (CCD5),a
 RO15:72BC CD 09 75         call 7509           // Prints text for on-screen choices on map selection on Standard Mode
 RO15:72BF CD F4 74         call 74F4           // Establishes location of bullet pointing highlighted option on map choice of Standard Mode
 RO15:72C2 C9               ret                 // Graphics changes for pressing Up on Standard Mode Map Selection
 RO15:72C3 3E 01            ld   a,01
 RO15:72C5 CD 44 38         call 3844
 RO15:72C8 CD F4 74         call 74F4           // Establishes location of bullet pointing highlighted option on map choice of Standard Mode
 RO15:72CB FA D4 CC         ld   a,(CCD4)
 RO15:72CE 3C               inc  a
 RO15:72CF FE 04            cp   a,04
 RO15:72D1 28 05            jr   z,72D8
 RO15:72D3 EA D4 CC         ld   (CCD4),a
 RO15:72D6 18 20            jr   72F8           // Simple ending of bullet pointing location change if no need to shift choice printing
 RO15:72D8 FA D5 CC         ld   a,(CCD5)
 RO15:72DB 3C               inc  a
 RO15:72DC F5               push af
 RO15:72DD FA D8 CC         ld   a,(CCD8)       // Last map option
 RO15:72E0 3C               inc  a
 RO15:72E1 4F               ld   c,a
 RO15:72E2 F1               pop  af
 RO15:72E3 B9               cp   c
 RO15:72E4 28 08            jr   z,72EE         // Rotation handled for given country if necessary
 RO15:72E6 EA D5 CC         ld   (CCD5),a
 RO15:72E9 CD 09 75         call 7509           // Prints text for on-screen choices on map selection on Standard Mode
 RO15:72EC 18 0A            jr   72F8
 RO15:72EE AF               xor  a
 RO15:72EF FA D7 CC         ld   a,(CCD7)       // Base skipped map choices
 RO15:72F2 EA D5 CC         ld   (CCD5),a
 RO15:72F5 CD 09 75         call 7509           // Prints text for on-screen choices on map selection on Standard Mode
 RO15:72F8 CD F4 74         call 74F4           // Establishes location of bullet pointing highlighted option on map choice of Standard Mode
 RO15:72FB C9               ret                 // Graphics changes for pressing Down on Standard Mode Map Selection
 RO15:72FC FE 0F            cp   a,0F
 RO15:72FE 28 0B            jr   z,730B         // Equal ending: Set Carry Flag
 RO15:7300 38 0B            jr   c,730D         // Less Than ending: A = C, Set Zero Flag
 RO15:7302 4F               ld   c,a
 RO15:7303 3E 1D            ld   a,1D
 RO15:7305 B9               cp   c
 RO15:7306 28 03            jr   z,730B         // Equal ending: Set Carry Flag
 RO15:7308 38 03            jr   c,730D         // More Than ending: A = C, Set Zero Flag
 RO15:730A 79               ld   a,c
 RO15:730B 37               scf  
 RO15:730C C9               ret  
 RO15:730D 79               ld   a,c
 RO15:730E 57               ld   d,a
 RO15:730F AF               xor  a
 RO15:7310 7A               ld   a,d
 RO15:7311 C9               ret                 // If A is anywhere from 15 to 29, Set Carry Flag; otherwise, Set Zero Flag
 RO15:7312 3E 00            ld   a,00
 RO15:7314 EA DB CC         ld   (CCDB),a
 RO15:7317 EF 28 EE 40                          // A = Standard Mode progress
 RO15:731B EA DA CC         ld   (CCDA),a
 RO15:731E FA DA CC         ld   a,(CCDA)
 RO15:7321 FE 00            cp   a,00
 RO15:7323 28 1C            jr   z,7341
 RO15:7325 FE 01            cp   a,01
 RO15:7327 28 18            jr   z,7341
 RO15:7329 FE 02            cp   a,02
 RO15:732B 28 1A            jr   z,7347
 RO15:732D FE 03            cp   a,03
 RO15:732F 28 16            jr   z,7347
 RO15:7331 FE 04            cp   a,04
 RO15:7333 28 18            jr   z,734D
 RO15:7335 FE 05            cp   a,05
 RO15:7337 28 14            jr   z,734D
 RO15:7339 FE 06            cp   a,06
 RO15:733B 28 16            jr   z,7353
 RO15:733D FE 07            cp   a,07
 RO15:733F 28 12            jr   z,7353
 RO15:7341 3E 00            ld   a,00
 RO15:7343 EA DB CC         ld   (CCDB),a
 RO15:7346 C9               ret  
 RO15:7347 3E 01            ld   a,01
 RO15:7349 EA DB CC         ld   (CCDB),a
 RO15:734C C9               ret  
 RO15:734D 3E 03            ld   a,03
 RO15:734F EA DB CC         ld   (CCDB),a
 RO15:7352 C9               ret  
 RO15:7353 3E 07            ld   a,07
 RO15:7355 EA DB CC         ld   (CCDB),a
 RO15:7358 C9               ret                 // ($CCDB) = 2^(Standard maps available/15 - 1) - 1
 RO15:7359 CD 12 73         call 7312
 RO15:735C C9               ret                 // Map sets unlocked flags established
 RO15:735D CD 59 73         call 7359           // Map sets unlocked flags established
 RO15:7360 3E 01            ld   a,01
 RO15:7362 21 DB CC         ld   hl,CCDB
 RO15:7365 CD C7 3A         call 3AC7           // White Moon side maps unlocked flag
 RO15:7368 20 02            jr   nz,736C
 RO15:736A AF               xor  a
 RO15:736B C9               ret  
 RO15:736C 37               scf  
 RO15:736D C9               ret                 // Carry Flag Set by White Moon side maps unlocked
 RO15:736E CD 5D 73         call 735D           // Carry Flag Set by White Moon side maps unlocked
 RO15:7371 38 02            jr   c,7375
 RO15:7373 18 37            jr   73AC           // Ends immediately if still locked
 RO15:7375 3E 01            ld   a,01
 RO15:7377 CD 44 38         call 3844
 RO15:737A CD 97 74         call 7497           // Switches ($CCD9)
 RO15:737D CD AA 74         call 74AA           // Sets up ($CCD7) and ($CCD8) based on ($CCD9) switch
 RO15:7380 FA D5 CC         ld   a,(CCD5)
 RO15:7383 C6 1E            add  a,1E
 RO15:7385 EA D5 CC         ld   (CCD5),a
 RO15:7388 4F               ld   c,a
 RO15:7389 FA D8 CC         ld   a,(CCD8)       // Last map option
 RO15:738C B9               cp   c
 RO15:738D 38 02            jr   c,7391
 RO15:738F 18 18            jr   73A9
 RO15:7391 FA D5 CC         ld   a,(CCD5)
 RO15:7394 D6 1E            sub  a,1E
 RO15:7396 CD FC 72         call 72FC           // If A is anywhere from 15 to 29, Set Carry Flag; otherwise, Set Zero Flag
 RO15:7399 38 02            jr   c,739D
 RO15:739B 18 07            jr   73A4
 RO15:739D C6 0F            add  a,0F
 RO15:739F EA D5 CC         ld   (CCD5),a
 RO15:73A2 18 05            jr   73A9
 RO15:73A4 D6 1E            sub  a,1E
 RO15:73A6 EA D5 CC         ld   (CCD5),a
 RO15:73A9 CD 09 75         call 7509           // Prints text for on-screen choices on map selection on Standard Mode
 RO15:73AC C9               ret                 // Shifts options to White Moon side on Standard Mode Map Selection; if highlighting any Map from #16 to #30 when the 2nd half of White Moon's maps is locked, will shift 15 entries instead of 30
 RO15:73AD CD 5D 73         call 735D           // Carry Flag Set by White Moon side maps unlocked
 RO15:73B0 38 02            jr   c,73B4
 RO15:73B2 18 0E            jr   73C2           // Ends immediately if locked
 RO15:73B4 3E 01            ld   a,01
 RO15:73B6 CD 44 38         call 3844
 RO15:73B9 CD 97 74         call 7497           // Switches ($CCD9)
 RO15:73BC CD AA 74         call 74AA           // Sets up ($CCD7) and ($CCD8) based on ($CCD9) switch
 RO15:73BF CD 09 75         call 7509           // Prints text for on-screen choices on map selection on Standard Mode
 RO15:73C2 C9               ret                 // If White Moon side maps are unlocked, prints on-screen White Moon side map choices (unused)
 RO15:73C3 FE 00            cp   a,00           // At least one map from 1 to 14 not cleared
 RO15:73C5 28 1C            jr   z,73E3
 RO15:73C7 FE 01            cp   a,01           // Maps 1 to 14 cleared
 RO15:73C9 28 1B            jr   z,73E6
 RO15:73CB FE 02            cp   a,02           // Map 15 cleared
 RO15:73CD 28 1A            jr   z,73E9
 RO15:73CF FE 03            cp   a,03           // Maps 16 to 29 cleared
 RO15:73D1 28 19            jr   z,73EC
 RO15:73D3 FE 04            cp   a,04           // Map 30 cleared
 RO15:73D5 28 18            jr   z,73EF
 RO15:73D7 FE 05            cp   a,05           // Maps 31 to 44 cleared
 RO15:73D9 28 17            jr   z,73F2
 RO15:73DB FE 06            cp   a,06           // Map 45 cleared
 RO15:73DD 28 16            jr   z,73F5
 RO15:73DF FE 07            cp   a,07           // Maps 46 to 59 cleared
 RO15:73E1 28 15            jr   z,73F8
 RO15:73E3 3E 0E            ld   a,0E
 RO15:73E5 C9               ret  
 RO15:73E6 3E 0F            ld   a,0F
 RO15:73E8 C9               ret  
 RO15:73E9 3E 1D            ld   a,1D
 RO15:73EB C9               ret  
 RO15:73EC 3E 1E            ld   a,1E
 RO15:73EE C9               ret  
 RO15:73EF 3E 2C            ld   a,2C
 RO15:73F1 C9               ret  
 RO15:73F2 3E 2D            ld   a,2D
 RO15:73F4 C9               ret  
 RO15:73F5 3E 3B            ld   a,3B
 RO15:73F7 C9               ret  
 RO15:73F8 3E 3C            ld   a,3C
 RO15:73FA C9               ret                 // A = Last available Standard map
 RO15:73FB CD BA 76         call 76BA           // A holds Map # of highlighted choice for map selection on Standard Mode
 RO15:73FE 57               ld   d,a
 RO15:73FF D5               push de
 RO15:7400 EF 28 EE 40                          // A = Standard Mode progress
 RO15:7404 CD C3 73         call 73C3           // A = Last available Standard map
 RO15:7407 4F               ld   c,a
 RO15:7408 D1               pop  de
 RO15:7409 7A               ld   a,d
 RO15:740A B9               cp   c
 RO15:740B 38 02            jr   c,740F
 RO15:740D 18 02            jr   7411
 RO15:740F 37               scf  
 RO15:7410 C9               ret  
 RO15:7411 AF               xor  a
 RO15:7412 C9               ret                 // Carry Flag set by map being unlocked
 RO15:7413 CD 58 71         call 7158           // Establishes graphics of Standard Mode Map Selection
 RO15:7416 CD AA 74         call 74AA           // Sets up ($CCD7) and ($CCD8) based on ($CCD9) switch
 RO15:7419 CD 09 75         call 7509           // Prints text for on-screen choices on map selection on Standard Mode
 RO15:741C CD 37 35         call 3537           // Establishes all unchecked text into appropriate VRAM bank; bit 7,($C00F) being inactive or LY => 142 stops after only one text portion and leaves it considered unchecked
 RO15:741F 3E 02            ld   a,02
 RO15:7421 CD 16 38         call 3816           // Menu theme
 RO15:7424 CD 1D 08         call 081D           // Shifts palettes closer to new colors from all white over the span of 8 frames
 RO15:7427 CD A2 05         call 05A2           // Button update, next frame (loop begins here)
 RO15:742A CD 56 30         call 3056           // Establishes all active sprite portions in ($C400) table; updates ($FFBC), sets ($C00E) to 1
 RO15:742D 3E 00            ld   a,00
 RO15:742F EF 15 91 67                          // Updates menu shifting diagonally down-right BG graphics (A is modification of where menu BG graphics had been stored)
 RO15:7433 F0 92            ld   a,(ff00+92)
 RO15:7435 CB 47            bit  0,a            // A
 RO15:7437 28 24            jr   z,745D
 RO15:7439 CD FB 73         call 73FB           // Carry Flag set by map being unlocked
 RO15:743C 38 07            jr   c,7445
 RO15:743E 3E 03            ld   a,03
 RO15:7440 CD 44 38         call 3844
 RO15:7443 18 E2            jr   7427           // Further wait for button input if map isn't available for play
 RO15:7445 FA D0 CC         ld   a,(CCD0)
 RO15:7448 EF 15 D0 5C                          // Bullet Sprite moves right 10 pixels per frame, ending once the X coordinate exceeds 207 (clearly off-screen)
 RO15:744C CD BA 76         call 76BA           // A holds Map # of highlighted choice for map selection on Standard Mode
 RO15:744F EF 28 5A 40                          // ($CA1A) 3 byte holds map data location, ($CA1D) = 1 if map is already cleared, ($CA1E) holds 2, ($CA1F) holds Map # based on Standard, ($CA21) to ($CA4E) holds general map information
 RO15:7453 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:7456 CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO15:7459 AF               xor  a
 RO15:745A CA 96 74         jp   z,7496         // Ends with A = 0 for A Button press on unlocked map
 RO15:745D CB 4F            bit  1,a            // B
 RO15:745F 28 10            jr   z,7471
 RO15:7461 3E 0C            ld   a,0C
 RO15:7463 CD 44 38         call 3844
 RO15:7466 CD B4 07         call 07B4           // Shifts palettes closer to all white over the span of 8 frames
 RO15:7469 CD 67 2E         call 2E67           // Handles clear-up of all sprite portions and entire ($C400) table, sets ($C00E) to 1
 RO15:746C 3E FF            ld   a,FF
 RO15:746E CA 96 74         jp   z,7496         // Ends with A = -1 for B Button press
 RO15:7471 CB 77            bit  6,a            // Up
 RO15:7473 28 05            jr   z,747A
 RO15:7475 CD 8E 72         call 728E           // Graphics changes for pressing Up on Standard Mode Map Selection
 RO15:7478 18 AD            jr   7427
 RO15:747A CB 7F            bit  7,a            // Down
 RO15:747C 28 05            jr   z,7483
 RO15:747E CD C3 72         call 72C3           // Graphics changes for pressing Down on Standard Mode Map Selection
 RO15:7481 18 A4            jr   7427
 RO15:7483 CB 67            bit  4,a            // Left
 RO15:7485 28 05            jr   z,748C
 RO15:7487 CD 6E 73         call 736E           // Shifts options to White Moon side on Standard Mode Map Selection; if highlighting any Map from #16 to #30 when the 2nd half of White Moon's maps is locked, will shift 15 entries instead of 30
 RO15:748A 18 9B            jr   7427
 RO15:748C CB 6F            bit  5,a            // Right
 RO15:748E 28 03            jr   z,7493
 RO15:7490 CD 6E 73         call 736E           // Shifts options to White Moon side on Standard Mode Map Selection; if highlighting any Map from #16 to #30 when the 2nd half of White Moon's maps is locked, will shift 15 entries instead of 30
 RO15:7493 C3 27 74         jp   7427
 RO15:7496 C9               ret                 // Controls for Standard Mode Map Selection; end with A = 0 for A Button press on unlocked map, or -1 for B Button press
 RO15:7497 FA D9 CC         ld   a,(CCD9)
 RO15:749A FE 00            cp   a,00
 RO15:749C 28 06            jr   z,74A4
 RO15:749E AF               xor  a
 RO15:749F EA D9 CC         ld   (CCD9),a
 RO15:74A2 18 05            jr   74A9
 RO15:74A4 3E 01            ld   a,01
 RO15:74A6 EA D9 CC         ld   (CCD9),a
 RO15:74A9 C9               ret                 // Switches ($CCD9)
 RO15:74AA CD 59 73         call 7359           // Map sets unlocked flags established
 RO15:74AD FA D9 CC         ld   a,(CCD9)
 RO15:74B0 FE 00            cp   a,00
 RO15:74B2 28 02            jr   z,74B6
 RO15:74B4 18 1E            jr   74D4
 RO15:74B6 3E 00            ld   a,00
 RO15:74B8 21 DB CC         ld   hl,CCDB
 RO15:74BB CD C7 3A         call 3AC7           // Standard Maps 16 to 30 unlocked flag
 RO15:74BE 20 0A            jr   nz,74CA
 RO15:74C0 AF               xor  a
 RO15:74C1 EA D7 CC         ld   (CCD7),a
 RO15:74C4 3E 0E            ld   a,0E
 RO15:74C6 EA D8 CC         ld   (CCD8),a       // 0, 14
 RO15:74C9 C9               ret  
 RO15:74CA AF               xor  a
 RO15:74CB EA D7 CC         ld   (CCD7),a
 RO15:74CE 3E 1D            ld   a,1D
 RO15:74D0 EA D8 CC         ld   (CCD8),a       // 0, 29
 RO15:74D3 C9               ret  
 RO15:74D4 3E 02            ld   a,02
 RO15:74D6 21 DB CC         ld   hl,CCDB
 RO15:74D9 CD C7 3A         call 3AC7           // Standard Maps 46 to 60 unlocked flag
 RO15:74DC 20 0B            jr   nz,74E9
 RO15:74DE 3E 1E            ld   a,1E
 RO15:74E0 EA D7 CC         ld   (CCD7),a
 RO15:74E3 3E 2C            ld   a,2C
 RO15:74E5 EA D8 CC         ld   (CCD8),a       // 30, 44
 RO15:74E8 C9               ret  
 RO15:74E9 3E 1E            ld   a,1E
 RO15:74EB EA D7 CC         ld   (CCD7),a
 RO15:74EE 3E 3B            ld   a,3B
 RO15:74F0 EA D8 CC         ld   (CCD8),a       // 30, 59
 RO15:74F3 C9               ret                 // Sets up ($CCD7) and ($CCD8) based on ($CCD9) switch
 RO15:74F4 FA D4 CC         ld   a,(CCD4)
 RO15:74F7 06 18            ld   b,18
 RO15:74F9 CD 95 29         call 2995           // HL = A * B
 RO15:74FC 7D               ld   a,l
 RO15:74FD C6 40            add  a,40
 RO15:74FF 4F               ld   c,a
 RO15:7500 06 18            ld   b,18           // 16,48+24*Choice
 RO15:7502 FA D0 CC         ld   a,(CCD0)       // Pointing Right Bullet
 RO15:7505 CD AE 2E         call 2EAE           // WRA4($D001 + A * 16) = C; WRA4($D002 + A * 16) = B
 RO15:7508 C9               ret                 // Establishes location of bullet pointing highlighted option on map choice of Standard Mode
 RO15:7509 FA D5 CC         ld   a,(CCD5)
 RO15:750C EA D6 CC         ld   (CCD6),a
 RO15:750F AF               xor  a
 RO15:7510 EA CF CC         ld   (CCCF),a
 RO15:7513 3E 05            ld   a,05
 RO15:7515 EA CE CC         ld   (CCCE),a
 RO15:7518 FA D6 CC         ld   a,(CCD6)       // Loop begins here
 RO15:751B EF 28 5A 40                          // ($CA1A) 3 byte holds map data location, ($CA1D) = 1 if map is already cleared, ($CA1E) holds 2, ($CA1F) holds Map # based on Standard, ($CA21) to ($CA4E) holds general map information
 RO15:751F FA D6 CC         ld   a,(CCD6)
 RO15:7522 3C               inc  a
 RO15:7523 F5               push af
 RO15:7524 FA D8 CC         ld   a,(CCD8)       // Last map option
 RO15:7527 3C               inc  a
 RO15:7528 4F               ld   c,a
 RO15:7529 F1               pop  af
 RO15:752A B9               cp   c
 RO15:752B 28 02            jr   z,752F
 RO15:752D 18 03            jr   7532
 RO15:752F FA D7 CC         ld   a,(CCD7)
 RO15:7532 EA D6 CC         ld   (CCD6),a
 RO15:7535 CD DF 75         call 75DF           // 3,Y holds Map # text
 RO15:7538 CD 5C 75         call 755C           // 5,Y holds Clear Icon if map is cleared
 RO15:753B CD A9 75         call 75A9           // 6,Y holds Player's Country icon for Map, darkened for second half of maps for given country
 RO15:753E CD F4 75         call 75F4           // 8,Y holds Map Name
 RO15:7541 CD 1E 76         call 761E           // 12,Y+1 holds Map Dimensions
 RO15:7544 CD 46 76         call 7646           // 7,Y+1 holds Map's Day Record
 RO15:7547 FA CE CC         ld   a,(CCCE)
 RO15:754A 3C               inc  a
 RO15:754B 3C               inc  a
 RO15:754C 3C               inc  a
 RO15:754D EA CE CC         ld   (CCCE),a
 RO15:7550 FA CF CC         ld   a,(CCCF)
 RO15:7553 3C               inc  a
 RO15:7554 EA CF CC         ld   (CCCF),a
 RO15:7557 FE 04            cp   a,04
 RO15:7559 20 BD            jr   nz,7518        // Cycles for all 4 on-screen choices
 RO15:755B C9               ret                 // Prints text for on-screen choices on map selection on Standard Mode
 RO15:755C 06 05            ld   b,05
 RO15:755E FA CE CC         ld   a,(CCCE)
 RO15:7561 4F               ld   c,a
 RO15:7562 21 1D CA         ld   hl,CA1D
 RO15:7565 3E 00            ld   a,00           // Is the map cleared
 RO15:7567 CD C7 3A         call 3AC7           // A = AND (HL + A/8), 2^A%8
 RO15:756A 28 1F            jr   z,758B
 RO15:756C FA CB FF         ld   a,(FFCB)
 RO15:756F F5               push af
 RO15:7570 C5               push bc
 RO15:7571 AF               xor  a
 RO15:7572 EA CB FF         ld   (FFCB),a
 RO15:7575 3E 25            ld   a,25           // (C)lear
 RO15:7577 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 + C / 8, 37; [$FFCA] incremented
 RO15:757A C1               pop  bc
 RO15:757B 3E 01            ld   a,01
 RO15:757D EA CB FF         ld   (FFCB),a
 RO15:7580 3E 08            ld   a,08
 RO15:7582 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 24 + C / 8, 8; [$FFCA] incremented
 RO15:7585 F1               pop  af
 RO15:7586 EA CB FF         ld   (FFCB),a
 RO15:7589 18 1D            jr   75A8
 RO15:758B FA CB FF         ld   a,(FFCB)
 RO15:758E F5               push af
 RO15:758F C5               push bc
 RO15:7590 AF               xor  a
 RO15:7591 EA CB FF         ld   (FFCB),a
 RO15:7594 AF               xor  a
 RO15:7595 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 + C / 8, 0; [$FFCA] incremented
 RO15:7598 C1               pop  bc
 RO15:7599 3E 01            ld   a,01
 RO15:759B EA CB FF         ld   (FFCB),a
 RO15:759E AF               xor  a
 RO15:759F CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 24 + C / 8, 0; [$FFCA] incremented
 RO15:75A2 F1               pop  af
 RO15:75A3 EA CB FF         ld   (FFCB),a
 RO15:75A6 18 00            jr   75A8
 RO15:75A8 C9               ret                 // 5,Y holds Clear Icon if map is cleared
 RO15:75A9 FA CF CC         ld   a,(CCCF)
 RO15:75AC CD C1 76         call 76C1           // A holds Map # based on Effective A for map selection on Standard Mode
 RO15:75AF FE 0F            cp   a,0F
 RO15:75B1 38 0C            jr   c,75BF         // <15: 58
 RO15:75B3 FE 1E            cp   a,1E
 RO15:75B5 38 0C            jr   c,75C3         // 15~29: 59
 RO15:75B7 FE 2D            cp   a,2D
 RO15:75B9 38 0C            jr   c,75C7         // 30~44: 60
 RO15:75BB FE 3C            cp   a,3C
 RO15:75BD 38 0C            jr   c,75CB         // 45~59: 61
 RO15:75BF 26 3A            ld   h,3A
 RO15:75C1 18 0C            jr   75CF
 RO15:75C3 26 3B            ld   h,3B
 RO15:75C5 18 08            jr   75CF
 RO15:75C7 26 3C            ld   h,3C
 RO15:75C9 18 04            jr   75CF
 RO15:75CB 26 3D            ld   h,3D
 RO15:75CD 18 00            jr   75CF
 RO15:75CF FA CE CC         ld   a,(CCCE)
 RO15:75D2 4F               ld   c,a
 RO15:75D3 06 06            ld   b,06
 RO15:75D5 3E 0B            ld   a,0B
 RO15:75D7 11 01 01         ld   de,0101
 RO15:75DA EF 15 FD 67                          // (VRA0:$9800 6,Y) = 58 + ?/15, (VRA1:$9800 6,Y) = 11
 RO15:75DE C9               ret                 // 6,Y holds Player's Country icon for Map, darkened for second half of maps for given country
 RO15:75DF FA CF CC         ld   a,(CCCF)
 RO15:75E2 CD C1 76         call 76C1           // A holds Map # based on Effective A for map selection on Standard Mode
 RO15:75E5 3C               inc  a
 RO15:75E6 16 02            ld   d,02
 RO15:75E8 F5               push af
 RO15:75E9 FA CE CC         ld   a,(CCCE)
 RO15:75EC 4F               ld   c,a
 RO15:75ED F1               pop  af
 RO15:75EE 06 03            ld   b,03           // 3,Y
 RO15:75F0 CD 37 32         call 3237           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO15:75F3 C9               ret                 // 3,Y holds Map # text
 RO15:75F4 21 C5 CC         ld   hl,CCC5
 RO15:75F7 01 09 00         ld   bc,0009
 RO15:75FA 3E 00            ld   a,00
 RO15:75FC CD 84 3B         call 3B84           // (HL ~ HL+BC-1) = A
 RO15:75FF 21 1A CA         ld   hl,CA1A
 RO15:7602 01 27 00         ld   bc,0027
 RO15:7605 09               add  hl,bc
 RO15:7606 54               ld   d,h
 RO15:7607 5D               ld   e,l            // DE is location of Map Name
 RO15:7608 01 08 00         ld   bc,0008
 RO15:760B 21 C5 CC         ld   hl,CCC5
 RO15:760E CD 59 3B         call 3B59           // (HL ~ HL+BC-1) = (DE ~ DE+BC-1)
 RO15:7611 FA CE CC         ld   a,(CCCE)
 RO15:7614 4F               ld   c,a
 RO15:7615 06 08            ld   b,08
 RO15:7617 21 C5 CC         ld   hl,CCC5
 RO15:761A CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:761D C9               ret                 // 8,Y holds Map Name
 RO15:761E 06 0C            ld   b,0C
 RO15:7620 FA CE CC         ld   a,(CCCE)
 RO15:7623 3C               inc  a
 RO15:7624 4F               ld   c,a
 RO15:7625 C5               push bc
 RO15:7626 FA 4D CA         ld   a,(CA4D)
 RO15:7629 16 02            ld   d,02
 RO15:762B CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO15:762E C1               pop  bc
 RO15:762F 04               inc  b
 RO15:7630 04               inc  b
 RO15:7631 C5               push bc
 RO15:7632 21 44 76         ld   hl,7644        // Multiplication symbol
 RO15:7635 CD 53 33         call 3353           // [$C300 + [$FFC8]] holds # of text bytes, then designated HL (reversed), then text; coordinates BC
 RO15:7638 C1               pop  bc
 RO15:7639 06 0F            ld   b,0F
 RO15:763B FA 4E CA         ld   a,(CA4E)
 RO15:763E 16 02            ld   d,02
 RO15:7640 CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO15:7643 C9               ret                 // 12,Y+1 holds Map Dimensions

 RO15:7644 19 00

 RO15:7646 FA CF CC         ld   a,(CCCF)
 RO15:7649 CD C1 76         call 76C1           // A holds Map # based on Effective A for map selection on Standard Mode
 RO15:764C EF 11 06 4E                          // A grabs Standard Map A's Day Record
 RO15:7650 FE FF            cp   a,FF
 RO15:7652 28 33            jr   z,7687         // Blanking branch for an incomplete map
 RO15:7654 F5               push af
 RO15:7655 FA CE CC         ld   a,(CCCE)
 RO15:7658 3C               inc  a
 RO15:7659 4F               ld   c,a
 RO15:765A 06 07            ld   b,07           // 7,Y+1
 RO15:765C 16 02            ld   d,02
 RO15:765E F1               pop  af
 RO15:765F CD F5 31         call 31F5           // [$C300 + [$FFC8]] holds # of digit bytes, then designated HL (reversed), then number text (A is the number, BC is coordinates, D is the number of digits)
 RO15:7662 FA CE CC         ld   a,(CCCE)
 RO15:7665 3C               inc  a
 RO15:7666 4F               ld   c,a
 RO15:7667 06 09            ld   b,09           // 9,Y+1
 RO15:7669 FA CB FF         ld   a,(FFCB)
 RO15:766C F5               push af
 RO15:766D C5               push bc
 RO15:766E AF               xor  a
 RO15:766F EA CB FF         ld   (FFCB),a
 RO15:7672 3E 3E            ld   a,3E
 RO15:7674 CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 152 + C / 8, A; [$FFCA] incremented
 RO15:7677 C1               pop  bc
 RO15:7678 3E 01            ld   a,01
 RO15:767A EA CB FF         ld   (FFCB),a
 RO15:767D 3E 08            ld   a,08
 RO15:767F CD ED 34         call 34ED           // [$C300 + [$FFC8]] 3 byte holds: 1, B + C%8 * 32, 24 + C / 8, A; [$FFCA] incremented
 RO15:7682 F1               pop  af
 RO15:7683 EA CB FF         ld   (FFCB),a
 RO15:7686 C9               ret  
 RO15:7687 FA CE CC         ld   a,(CCCE)
 RO15:768A 3C               inc  a
 RO15:768B 4F               ld   c,a
 RO15:768C 06 07            ld   b,07
 RO15:768E CD D4 0E         call 0ED4           // HL = $9800 + 7 + C * 32
 RO15:7691 54               ld   d,h
 RO15:7692 5D               ld   e,l
 RO15:7693 FA CB FF         ld   a,(FFCB)
 RO15:7696 F5               push af
 RO15:7697 D5               push de
 RO15:7698 AF               xor  a
 RO15:7699 EA CB FF         ld   (FFCB),a
 RO15:769C 06 03            ld   b,03
 RO15:769E 21 B7 76         ld   hl,76B7
 RO15:76A1 CD 0F 35         call 350F           // Load [$C300 + [$FFC8] + 0~(2+B)] with B, E, D, [HL]...[HL+B-1]; increment [$FFCA], B = 0, HL = $FFCA, A = [HL+B-1]
 RO15:76A4 D1               pop  de
 RO15:76A5 3E 01            ld   a,01
 RO15:76A7 EA CB FF         ld   (FFCB),a
 RO15:76AA 06 03            ld   b,03
 RO15:76AC 21 B7 76         ld   hl,76B7
 RO15:76AF CD 0F 35         call 350F           // Load [$C300 + [$FFC8] + 0~(2+B)] with B, E, D%128, [HL]...[HL+B-1]; increment [$FFCA], B = 0, HL = $FFCA, A = [HL+B-1]
 RO15:76B2 F1               pop  af
 RO15:76B3 EA CB FF         ld   (FFCB),a
 RO15:76B6 C9               ret                 // 7,Y+1 holds Map's Day Record

 RO15:76B7 00 00 00

 RO15:76BA FA D4 CC         ld   a,(CCD4)
 RO15:76BD CD C1 76         call 76C1           // A holds Map # based on Effective A for map selection on Standard Mode
 RO15:76C0 C9               ret                 // A holds Map # of highlighted choice for map selection on Standard Mode
 RO15:76C1 F5               push af
 RO15:76C2 FA D5 CC         ld   a,(CCD5)
 RO15:76C5 4F               ld   c,a
 RO15:76C6 F1               pop  af
 RO15:76C7 81               add  c
 RO15:76C8 4F               ld   c,a            // C holds Effective A
 RO15:76C9 FA D8 CC         ld   a,(CCD8)       // Last map option
 RO15:76CC B9               cp   c
 RO15:76CD 38 02            jr   c,76D1
 RO15:76CF 18 0F            jr   76E0
 RO15:76D1 79               ld   a,c
 RO15:76D2 F5               push af
 RO15:76D3 FA D8 CC         ld   a,(CCD8)       // Last map option
 RO15:76D6 3C               inc  a
 RO15:76D7 4F               ld   c,a
 RO15:76D8 F1               pop  af
 RO15:76D9 91               sub  c
 RO15:76DA 4F               ld   c,a            // C holds difference from Effective A
 RO15:76DB FA D7 CC         ld   a,(CCD7)
 RO15:76DE 81               add  c
 RO15:76DF 4F               ld   c,a
 RO15:76E0 79               ld   a,c
 RO15:76E1 C9               ret                 // A holds Map # based on Effective A for map selection on Standard Mode

 RO15:76E2 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00

 RO15:76F2 FF 00 FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F
 RO15:7702 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:7712 FF 00 FF FF FF FF FF FF C3 FF DF E3 DD E3 DF E1
 RO15:7722 FF 00 FF FF FF FF FF FF 8E FF FD 8E 7E 8D FB 0D
 RO15:7732 FF 00 FF FF FF FF FF FF 38 FF FB 3C DA 3D 7B 9D
 RO15:7742 FF 00 FF FF FF FF FF FF 33 FF F7 3B D7 3B F7 1B
 RO15:7752 FF 00 FF FF FF FF FF FF FF FF FF FF FF FF FF FF
 RO15:7762 FF 00 FF FE FF FE FF FE FF FE FF FE FF FE FF FE
 RO15:7772 FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 7F FF 00
 RO15:7782 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:7792 D6 E9 DF E8 DB EC DF EC FF FF FF FF FF FF FF 00
 RO15:77A2 BC 4B B7 48 3B C7 BF C7 FF FF FF FF FF FF FF 00
 RO15:77B2 6B 9D FB 0D F3 CD DB E5 FF FF FF FF FF FF FF 00
 RO15:77C2 67 9B F7 8B B7 CB FF C3 FF FF FF FF FF FF FF 00
 RO15:77D2 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF 00
 RO15:77E2 FF FE FF FE FF FE FF FE FF FE FF FE FF FE FF 00

 RO15:77F2 FF 00 FF 7F FF 7F FF 7F F8 7F FB 7C FB 7C FB 7C
 RO15:7802 FF 00 FF FF FF FF FF FF 80 FF BF C0 BD CE B1 CE
 RO15:7812 FF 00 FF FF FF FF FF FF F8 FF 77 F8 F7 79 F7 79
 RO15:7822 FF 00 FF FF FF FF FF FF 18 FF F7 18 F7 F9 F7 F9
 RO15:7832 FF 00 FF FF FF FF FF FF 10 FF E7 18 B7 C8 B7 C8
 RO15:7842 FF 00 FF FF FF FF FF FF E0 FF FD E2 5D E2 FD 42
 RO15:7852 FF 00 FF FF FF FF FF FF 38 FF FF 38 D7 38 FF 10
 RO15:7862 FF 00 FF FE FF FE FF FE FF FE FF FE FF FE FF FE
 RO15:7872 FB 7C FB 7C FB 7C FB 7C FF 7F FF 7F FF 7F FF 00
 RO15:7882 BF C0 BB CC BF CC BD CE FF FF FF FF FF FF FF 00
 RO15:7892 F7 F9 77 F9 F6 79 BB 7C FF FF FF FF FF FF FF 00
 RO15:78A2 F7 F9 F7 F9 16 F9 FB 1C FF FF FF FF FF FF FF 00
 RO15:78B2 B5 CA B7 CA 36 CB F7 1B FF FF FF FF FF FF FF 00
 RO15:78C2 AD 52 ED 12 CD 32 ED 32 FF FF FF FF FF FF FF 00
 RO15:78D2 6B 94 FB 84 B3 CC FB CC FF FF FF FF FF FF FF 00
 RO15:78E2 FF FE 9F FE FF 9E FF 9E FF FE FF FE FF FE FF 00

 RO15:78F2 81 FF 00 C7 00 DB 00 C7 00 DB 00 DB 00 C7 81 FF
 RO15:7902 00 00 00 20 00 FC 00 20 00 F8 00 42 00 42 00 3C
 RO15:7912 00 0A 00 40 00 4E 00 30 00 40 00 80 00 80 00 7E
 RO15:7922 00 00 00 7C 00 08 00 3C 00 C2 00 32 00 4A 00 3C
 RO15:7932 FF FF 81 FF BD C3 B1 CF B1 CF BD C3 81 FF FF FF

 RO15:7942 00 00 00 69 FF 7F 40 72
 RO15:794A FF 7F B5 56 6B 2D 00 00
 RO15:7952 FF 7F 6C 03 08 02 00 00
 RO15:795A 00 69 9F 00 FF 7F 00 00
 RO15:7962 10 42 6B 2D C6 18 00 00
 RO15:796A 9F 53 DF 02 74 01 00 00
 RO15:7972 F0 63 C0 4A 60 25 00 00
 RO15:797A 1F 7C 1F 7C 00 00 FF 7F

